{
  "date": "2025-05-14 01:10:48",
  "project_structure": [
    ".cursor/rules/code-style.mdc",
    ".cursor/rules/key-conventions.mdc",
    ".cursor/rules/naming-conventions.mdc",
    ".cursor/rules/performance-optimization.mdc",
    ".cursor/rules/project-structure.mdc",
    ".cursor/rules/syntax-formatting.mdc",
    ".cursor/rules/typescript-usage.mdc",
    ".cursor/rules/ui-styling.mdc",
    ".env",
    ".env.example",
    ".env.local",
    ".eslintrc.json",
    "__tests__/components/question-types/OrderQuestionComponent.test.tsx",
    "__tests__/controllers/OrderController.test.ts",
    "__tests__/validators/OrderValidator.test.ts",
    "app/api/auth/callback/route.ts",
    "app/api/lead/route.ts",
    "app/api/questions/route.ts",
    "app/api/quiz/[quizId]/route.ts",
    "app/api/stripe/create-checkout/route.ts",
    "app/api/stripe/create-portal/route.ts",
    "app/api/webhook/mailgun/route.ts",
    "app/api/webhook/stripe/route.ts",
    "app/blog/[articleId]/page.tsx",
    "app/blog/_assets/components/Avatar.tsx",
    "app/blog/_assets/components/BadgeCategory.tsx",
    "app/blog/_assets/components/CardArticle.tsx",
    "app/blog/_assets/components/CardCategory.tsx",
    "app/blog/_assets/components/HeaderBlog.tsx",
    "app/blog/_assets/content.tsx",
    "app/blog/author/[authorId]/page.tsx",
    "app/blog/category/[categoryId]/page.tsx",
    "app/blog/layout.tsx",
    "app/blog/page.tsx",
    "app/components/QuizCTA.tsx",
    "app/dashboard/layout.tsx",
    "app/dashboard/page.tsx",
    "app/data/quizzes/azure-a102/clean_drag_and_drop_questions.json",
    "app/data/quizzes/azure-a102/clean_dropdown_selection_questions.json",
    "app/data/quizzes/azure-a102/clean_multi_questions.json",
    "app/data/quizzes/azure-a102/clean_order_questions.json",
    "app/data/quizzes/azure-a102/clean_single_selection_questions.json",
    "app/data/quizzes/azure-a102/clean_yes_no_questions.json",
    "app/data/quizzes/azure-a102/clean_yesno_multi_questions.json",
    "app/data/quizzes/azure-a102/quiz_metadata.json",
    "app/debug-components/page.tsx",
    "app/error.tsx",
    "app/features/quiz/components/FeedbackSection.tsx",
    "app/features/quiz/components/QuestionCard.tsx",
    "app/features/quiz/components/QuestionContent.tsx",
    "app/features/quiz/components/QuestionHeader.tsx",
    "app/features/quiz/components/QuizCompletionSummary.tsx",
    "app/features/quiz/components/QuizNavigation.tsx",
    "app/features/quiz/components/QuizProgress.tsx",
    "app/features/quiz/components/question-types/DragAndDropQuestionComponent.tsx",
    "app/features/quiz/components/question-types/DropdownSelectionComponent.tsx",
    "app/features/quiz/components/question-types/MultiChoiceComponent.tsx",
    "app/features/quiz/components/question-types/OrderQuestionComponent.tsx",
    "app/features/quiz/components/question-types/QuestionTypeRenderer.tsx",
    "app/features/quiz/components/question-types/SingleSelectionComponent.tsx",
    "app/features/quiz/context/QuizContext.tsx",
    "app/features/quiz/controllers/DragAndDropController.ts",
    "app/features/quiz/controllers/DropdownSelectionController.ts",
    "app/features/quiz/controllers/MultiChoiceController.ts",
    "app/features/quiz/controllers/OrderController.ts",
    "app/features/quiz/controllers/QuestionController.ts",
    "app/features/quiz/controllers/QuestionControllerFactory.ts",
    "app/features/quiz/controllers/SingleSelectionController.ts",
    "app/features/quiz/hooks/useAutoValidation.ts",
    "app/features/quiz/hooks/useQuizScoring.ts",
    "app/features/quiz/hooks/useQuizState.ts",
    "app/features/quiz/index.ts",
    "app/features/quiz/pages/QuizPage.tsx",
    "app/features/quiz/pages/QuizPage.tsx.new",
    "app/features/quiz/services/quizApiClient.ts",
    "app/features/quiz/services/quizService.ts",
    "app/features/quiz/tests/DragAndDropController.test.ts",
    "app/features/quiz/tests/DragAndDropQuestionComponent.test.tsx",
    "app/features/quiz/tests/DropdownSelectionController.test.ts",
    "app/features/quiz/tests/MultiChoiceController.test.ts",
    "app/features/quiz/tests/OrderController.test.ts",
    "app/features/quiz/tests/OrderQuestionComponent.test.tsx",
    "app/features/quiz/tests/OrderValidator.test.ts",
    "app/features/quiz/tests/SingleSelectionController.test.ts",
    "app/features/quiz/tests/SingleSelectionValidator.test.ts",
    "app/features/quiz/tests/useAutoValidation.test.ts",
    "app/features/quiz/validators/AnswerValidator.ts",
    "app/features/quiz/validators/DragAndDropValidator.ts",
    "app/features/quiz/validators/DropdownSelectionValidator.ts",
    "app/features/quiz/validators/MultiChoiceValidator.ts",
    "app/features/quiz/validators/OrderValidator.ts",
    "app/features/quiz/validators/SingleSelectionValidator.ts",
    "app/globals.css",
    "app/layout.tsx",
    "app/lib/supabaseQuizService.ts",
    "app/not-found.tsx",
    "app/page.tsx",
    "app/privacy-policy/page.tsx",
    "app/question-types-demo/[type]/page.tsx",
    "app/question-types-demo/type-client-page.tsx",
    "app/question-types/page.tsx",
    "app/quiz-test/[quizId]/[questionType]/page.tsx",
    "app/quiz-test/[quizId]/client-page.tsx",
    "app/quiz-test/[quizId]/page-fixed.tsx",
    "app/quiz-test/[quizId]/page-new.tsx",
    "app/quiz-test/[quizId]/page-server.tsx",
    "app/quiz-test/[quizId]/page-updated.tsx",
    "app/quiz-test/[quizId]/page.tsx",
    "app/quiz-test/[quizId]/page.tsx.bak",
    "app/quiz-test/[quizId]/questions/[type]/page.tsx",
    "app/quiz-test/[quizId]/questions/page.tsx",
    "app/quiz-test/[quizId]/type-client-page.tsx",
    "app/quiz-type-filters/layout.tsx",
    "app/quiz-type-filters/page.tsx",
    "app/signin/layout.tsx",
    "app/signin/page.tsx",
    "app/test-order-questions/page.tsx",
    "app/tos/page.tsx",
    "app/types/quiz.ts",
    "collect_code_for_llm.py",
    "components/BetterIcon.tsx",
    "components/ButtonAccount.tsx",
    "components/ButtonCheckout.tsx",
    "components/ButtonGradient.tsx",
    "components/ButtonLead.tsx",
    "components/ButtonPopover.tsx",
    "components/ButtonSignin.tsx",
    "components/ButtonSupport.tsx",
    "components/CTA.tsx",
    "components/FAQ.tsx",
    "components/FeaturesAccordion.tsx",
    "components/FeaturesGrid.tsx",
    "components/FeaturesListicle.tsx",
    "components/Footer.tsx",
    "components/Header.tsx",
    "components/Hero.tsx",
    "components/LayoutClient.tsx",
    "components/Modal.tsx",
    "components/Pricing.tsx",
    "components/Problem.tsx",
    "components/Testimonial1Small.tsx",
    "components/TestimonialRating.tsx",
    "components/Testimonials1.tsx",
    "components/Testimonials11.tsx",
    "components/Testimonials3.tsx",
    "components/TestimonialsAvatars.tsx",
    "components/WithWithout.tsx",
    "config.ts",
    "libs/api.ts",
    "libs/gpt.ts",
    "libs/mailgun.ts",
    "libs/seo.tsx",
    "libs/stripe.ts",
    "logs/migration.log",
    "middleware.js",
    "migrate-quiz-data.js",
    "next-env.d.ts",
    "next-sitemap.config.js",
    "next.config.js",
    "package-lock.json",
    "package.json",
    "postcss.config.js",
    "supabase_database.sql",
    "tailwind.config.js",
    "tsconfig.json",
    "types/config.ts",
    "types/index.ts",
    "types/next-auth.d.ts"
  ],
  "files": [
    {
      "filepath": "migrate-quiz-data.js",
      "content": "#!/usr/bin/env node\n/**\n * Migrate Azure-A102 quiz metadata + questions into Supabase/Postgres.\n *\n * 1. Upserts quiz-level metadata from `quiz_metadata.json`.\n * 2. Walks every `clean_*.json` question file, generates fresh UUIDs,\n *    and upserts all base and child-table rows according to the REFINED schema.\n *\n * Environment:\n *   \u2022 SUPABASE_URL\n *   \u2022 SUPABASE_SERVICE_ROLE_KEY\n */\n\nconst fs = require('fs-extra');\nconst path = require('path');\nconst { v4: uuidv4 } = require('uuid');\nconst { createClient } = require('@supabase/supabase-js');\nrequire('dotenv').config();\n\n// ------------------------------------------------------------------\n// Supabase client\n// ------------------------------------------------------------------\nconst { SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY } = process.env;\nif (!SUPABASE_URL || !SUPABASE_SERVICE_ROLE_KEY) {\n  console.error('SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY missing in .env');\n  process.exit(1);\n}\nconst supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {\n  auth: { persistSession: false, autoRefreshToken: false }\n});\n\n// ------------------------------------------------------------------\n// Logging\n// ------------------------------------------------------------------\nconst LOG_DIR  = path.join(__dirname, 'logs');\nfs.ensureDirSync(LOG_DIR);\nconst LOG_FILE = path.join(LOG_DIR, 'migration.log');\nconst logStream = fs.createWriteStream(LOG_FILE, { flags: 'a' });\n\nconst nowISO = () => new Date().toISOString();\nfunction log(...args) {\n  const flat = args.map(a =>\n    a instanceof Error ? (a.stack || a.message)\n      : typeof a === 'object' ? JSON.stringify(a, null, 2)\n      : String(a)\n  );\n  const line = `${nowISO()} ${flat.join(' ')}\\n`;\n  process.stdout.write(line);\n  logStream.write(line);\n}\n\n// ------------------------------------------------------------------\n// Main\n// ------------------------------------------------------------------\n(async () => {\n  try {\n    const quizDir = path.join(__dirname, 'app', 'data', 'quizzes', 'azure-a102');\n    log('=== Migration started ===');\n\n    // 1. Quiz-level metadata\n    let quizRow;\n    const metaFile = path.join(quizDir, 'quiz_metadata.json');\n    if (await fs.pathExists(metaFile)) {\n      const meta = await fs.readJson(metaFile);\n      quizRow = {\n        id:          meta.metadata.id,\n        title:       meta.metadata.title,\n        description: meta.metadata.description,\n        quiz_type:   meta.metadata.quizType,\n        settings:    meta.metadata.settings,\n        author:      meta.metadata.author,\n        difficulty:  meta.metadata.difficulty || 'medium',\n        quiz_topic:  meta.metadata.id,\n        // created_at and updated_at will use DEFAULT now() in the DB\n      };\n\n      log('Upserting quiz metadata for', quizRow.id);\n      // Ensure timestamps are handled by the DB on insert/update\n      const { error: metaErr } = await supabase\n        .from('quizzes')\n        .upsert(quizRow, { onConflict: 'id' });\n      if (metaErr) throw metaErr;\n      log('Quiz metadata upserted');\n    } else {\n      throw new Error('quiz_metadata.json not found \u2013 cannot continue without quiz metadata');\n    }\n\n    // 2. Gather question files\n    const files = await fs.readdir(quizDir);\n    const jsonFiles = files.filter(f => f.startsWith('clean_') && f.endsWith('.json'));\n    const allQuestions = [];\n\n    for (const file of jsonFiles) {\n      const filePath = path.join(quizDir, file);\n      log('Reading', filePath);\n      try {\n        const { questions } = await fs.readJson(filePath);\n        if (Array.isArray(questions) && questions.length) {\n          log(`Loaded ${questions.length} questions from ${file}`);\n          allQuestions.push(...questions);\n        } else {\n          log(`WARN: ${file} contained no questions or invalid format`);\n        }\n      } catch (readErr) {\n        log(`ERROR reading or parsing ${file}:`, readErr);\n      }\n    }\n\n\n    if (!allQuestions.length) {\n      log('No questions found \u2013 nothing to do');\n      return;\n    }\n    log('Total questions to import:', allQuestions.length);\n\n    // 3. Legacy ID \u279e UUID map\n    const idMap = {};\n    allQuestions.forEach(q => {\n      if (q.id) { // Check if question has an ID\n        idMap[q.id] = uuidv4();\n      } else {\n        log(`WARN: Question found without an ID:`, q);\n        // Handle missing ID - perhaps generate one here or skip\n        // For now, generating a UUID on the fly if missing\n        const generatedId = uuidv4();\n        q.id = generatedId; // Add ID back to object for later steps\n        idMap[generatedId] = generatedId;\n        log(`Generated temporary ID ${generatedId} for question: ${q.question?.substring(0, 50)}...`);\n      }\n    });\n\n    // 4. Upsert base questions\n    const baseRows = allQuestions.map(q => ({\n      id:                 idMap[q.id],\n      type:               q.type,\n      question:           q.questionText || q.question, // Use questionText if available\n      points:             q.points,\n      quiz_tag:           quizRow.id,\n      difficulty:         q.difficulty || 'medium',\n      explanation:        q.explanation || null,\n      feedback_correct:   q.feedback?.correct || 'Correct!', // Provide default feedback\n      feedback_incorrect: q.feedback?.incorrect || 'Incorrect.', // Provide default feedback\n      // created_at and updated_at handled by DB default\n    }));\n\n    log('Upserting base questions');\n    const { error: baseErr } = await supabase\n      .from('questions')\n      .upsert(baseRows, { onConflict: 'id' });\n    if (baseErr) throw baseErr;\n    log('Base questions done');\n\n    // 5. Child-table rows\n    const dragTargets           = [];\n    const dragOptions           = []; // Refined\n    const dragPairs             = [];\n    const dropdownOptions       = []; // Refined (keeping is_correct for API)\n    const dropdownTargets       = [];\n    const multiOptions          = [];\n    const multiCorrect          = [];\n    const singleOptions         = [];\n    const singleCorrect         = [];\n    const orderItems            = []; // Refined\n    const orderCorrect          = [];\n    const yesNoAnswers          = [];\n    const yesnoStmts            = [];\n    const yesnoCorrect          = [];\n\n    for (const q of allQuestions) {\n      // Skip if ID mapping failed (e.g., question had no ID originally and wasn't fixed)\n      if (!idMap[q.id]) {\n          log(`WARN: Skipping child data for question with missing/unmapped ID: ${q.question?.substring(0, 50)}...`);\n          continue;\n      }\n      const qid = idMap[q.id];\n\n\n      switch (q.type) {\n        case 'drag_and_drop':\n          if (!q.targets || !q.options || !q.correct_pairs) {\n             log(`WARN: Missing targets, options, or correct_pairs for drag_and_drop question ID ${q.id}`);\n             continue;\n          }\n          q.targets.forEach(t =>\n            dragTargets.push({ question_id: qid, target_id: t.id, text: t.text })\n          );\n          q.options.forEach(o =>\n            // *** Refined: Removed target_id and is_correct ***\n            dragOptions.push({\n              question_id: qid,\n              option_id:   o.id,\n              text:        o.text\n            })\n          );\n          q.correct_pairs.forEach(p =>\n            dragPairs.push({\n              question_id: qid,\n              option_id:   p.option_id,\n              target_id:   p.target_id\n            })\n          );\n          break;\n\n        case 'dropdown_selection':\n           if (!q.options || !q.target) {\n             log(`WARN: Missing options or target for dropdown_selection question ID ${q.id}`);\n             continue;\n           }\n          q.options.forEach(o =>\n             // *** Reverted: Keep is_correct for API logic ***\n            dropdownOptions.push({\n              question_id: qid,\n              option_id:   o.id,\n              text:        o.text,\n              is_correct:  o.is_correct ?? false // Default to false if missing\n            })\n          );\n          // Ensure target is an object before iterating\n          if (typeof q.target === 'object' && q.target !== null) {\n            Object.entries(q.target).forEach(([key, value]) =>\n              dropdownTargets.push({ question_id: qid, key, value })\n            );\n          } else {\n             log(`WARN: Invalid target format for dropdown_selection question ID ${q.id}`);\n          }\n          break;\n\n        case 'multi':\n          if (!q.options || !q.correctAnswers) {\n            log(`WARN: Missing options or correctAnswers for multi question ID ${q.id}`);\n            continue;\n          }\n          q.options.forEach(o => {\n            multiOptions.push({ question_id: qid, option_id: o.id, text: o.text });\n            // Ensure correctAnswers is an array before checking includes\n            if (Array.isArray(q.correctAnswers) && q.correctAnswers.includes(o.id)) {\n              multiCorrect.push({ question_id: qid, option_id: o.id }); // FK relation to multi_options\n            }\n          });\n          break;\n\n        case 'single_selection':\n          if (!q.options || !q.correctAnswers || !q.correctAnswers[0]) {\n            log(`WARN: Missing options or correctAnswers[0] for single_selection question ID ${q.id}`);\n            continue;\n          }\n          q.options.forEach(o =>\n            singleOptions.push({ question_id: qid, option_id: o.id, text: o.text })\n          );\n          singleCorrect.push({ question_id: qid, option_id: q.correctAnswers[0] }); // FK relation to single_selection_options\n          break;\n\n        case 'order':\n          if (!q.items || !q.correctOrder) {\n            log(`WARN: Missing items or correctOrder for order question ID ${q.id}`);\n            continue;\n          }\n          // *** Refined: Removed position from orderItems ***\n          q.items.forEach((item) =>\n            orderItems.push({\n              question_id: qid,\n              item_id:     item.id,\n              text:        item.text\n            })\n          );\n          q.correctOrder.forEach((id, idx) =>\n            orderCorrect.push({\n              question_id: qid,\n              item_id:     id,\n              position:    idx + 1 // Positions are 1-based\n            }) // FK relation to order_items\n          );\n          break;\n\n        case 'yes_no':\n          if (q.correctAnswer === undefined || q.correctAnswer === null) {\n             log(`WARN: Missing correctAnswer for yes_no question ID ${q.id}`);\n             continue;\n          }\n          yesNoAnswers.push({\n            question_id:    qid,\n            correct_answer: q.correctAnswer === 'yes' // Assuming source is 'yes'/'no' string\n          });\n          break;\n\n        case 'yesno_multi':\n           if (!q.statements || !q.correctAnswers) {\n             log(`WARN: Missing statements or correctAnswers for yesno_multi question ID ${q.id}`);\n             continue;\n           }\n          q.statements.forEach(s =>\n            yesnoStmts.push({\n              question_id:  qid,\n              statement_id: s.id,\n              text:         s.text\n            })\n          );\n          // Ensure correctAnswers has same length as statements\n           if (q.statements.length !== q.correctAnswers.length) {\n             log(`WARN: Mismatch between statements count (${q.statements.length}) and answers count (${q.correctAnswers.length}) for yesno_multi question ID ${q.id}`);\n             continue;\n           }\n          q.correctAnswers.forEach((ans, idx) =>\n            yesnoCorrect.push({\n              question_id:    qid,\n              statement_id:   q.statements[idx].id, // Use ID from corresponding statement\n              correct_answer: ans === 'yes' // Assuming source is 'yes'/'no' string\n            }) // FK relation to yesno_multi_statements\n          );\n          break;\n\n        default:\n             log(`WARN: Unknown question type '${q.type}' for question ID ${q.id}`);\n             break;\n      }\n    }\n\n    // 6. Bulk helper (ensure ON CONFLICT uses appropriate constraints)\n    async function upsert(table, rows, conflictConstraint) {\n      if (!rows.length) {\n        log(`No ${table} rows \u2013 skipped`);\n        return;\n      }\n      log(`Upserting ${rows.length} rows into ${table}`);\n      const { error } = await supabase\n        .from(table)\n        .upsert(rows, { onConflict: conflictConstraint }); // Use specific constraint name if needed\n      if (error) {\n        log(`ERROR upserting into ${table}:`, error); // Log specific error\n        throw error; // Re-throw to stop migration on critical error\n      }\n      log(`${table} done`);\n    }\n\n    // 7. Execute child-table upserts with correct conflict constraints\n    await upsert('drag_and_drop_targets',           dragTargets,     'question_id,target_id');\n    await upsert('drag_and_drop_options',           dragOptions,     'question_id,option_id'); // Refined\n    await upsert('drag_and_drop_correct_pairs',     dragPairs,       'question_id,option_id,target_id'); // Refined PK/constraint name\n    await upsert('dropdown_selection_options',      dropdownOptions, 'question_id,option_id'); // Refined (kept is_correct)\n    await upsert('dropdown_selection_targets',      dropdownTargets, 'question_id,key');\n    await upsert('multi_options',                   multiOptions,    'question_id,option_id');\n    await upsert('multi_correct_answers',           multiCorrect,    'question_id,option_id'); // PK/constraint name matches schema\n    await upsert('single_selection_options',        singleOptions,   'question_id,option_id');\n    await upsert('single_selection_correct_answer', singleCorrect,   'question_id'); // PK/constraint name matches schema\n    await upsert('order_items',                     orderItems,      'question_id,item_id'); // Refined\n    await upsert('order_correct_order',             orderCorrect,    'question_id,item_id'); // PK/constraint name matches schema\n    await upsert('yes_no_answer',                   yesNoAnswers,    'question_id'); // PK/constraint name matches schema\n    await upsert('yesno_multi_statements',          yesnoStmts,      'question_id,statement_id');\n    await upsert('yesno_multi_correct_answers',     yesnoCorrect,    'question_id,statement_id'); // PK/constraint name matches schema\n\n\n    log('=== Migration finished successfully ===');\n  } catch (err) {\n    log('ERROR', err);\n    process.exit(1);\n  } finally {\n    logStream.end();\n  }\n})();"
    },
    {
      "filepath": "tailwind.config.js",
      "content": "module.exports = {\n  content: [\n    \"./app/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./pages/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./components/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./styles/globals.css\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        'custom-primary': '#0078D7',\n        'custom-accent': '#FF4081',\n        'custom-success': '#00C853',\n        'custom-error': '#FF3D00',\n        'custom-dark-blue': '#1A2151',\n        'custom-light-bg': '#F5F8FA',\n        'custom-gray-1': '#333333',\n        'custom-gray-2': '#757575',\n        'custom-gray-3': '#BDBDBD',\n      },\n      backgroundImage: {\n        gradient:\n          \"linear-gradient(60deg, #f79533, #f37055, #ef4e7b, #a166ab, #5073b8, #1098ad, #07b39b, #6fba82)\",\n        'primary-gradient': 'linear-gradient(135deg, #0078D7, #00BCF2)',\n        'accent-gradient': 'linear-gradient(135deg, #FF4081, #F06292)',\n        'success-gradient': 'linear-gradient(135deg, #00C853, #69F0AE)',\n        'error-gradient': 'linear-gradient(135deg, #FF3D00, #FF8A65)',\n      },\n      boxShadow: {\n        'shadow-1': '0 4px 6px rgba(0,0,0,0.1)',\n        'shadow-2': '0 6px 16px rgba(0,0,0,0.1)',\n        'shadow-strong': '0 10px 25px rgba(0,0,0,0.15)',\n      },\n      borderRadius: {\n        'rounded-sm-ref': '8px',\n        'rounded-md-ref': '12px',\n        'rounded-lg-ref': '20px',\n      },\n      animation: {\n        opacity: \"opacity 0.25s ease-in-out\",\n        appearFromRight: \"appearFromRight 300ms ease-in-out\",\n        wiggle: \"wiggle 1.5s ease-in-out infinite\",\n        popup: \"popup 0.25s ease-in-out\",\n        shimmer: \"shimmer 3s ease-out infinite alternate\",\n        'fade-in': 'fadeIn 0.8s ease-out',\n        'card-appear': 'cardAppear 0.5s cubic-bezier(0.165, 0.84, 0.44, 1)',\n        'fade-in-up': 'fadeInUp 0.3s ease-out',\n      },\n      keyframes: {\n        opacity: {\n          \"0%\": { opacity: 0 },\n          \"100%\": { opacity: 1 },\n        },\n        appearFromRight: {\n          \"0%\": { opacity: 0.3, transform: \"translate(15%, 0px);\" },\n          \"100%\": { opacity: 1, transform: \"translate(0);\" },\n        },\n        wiggle: {\n          \"0%, 20%, 80%, 100%\": { transform: \"rotate(0deg)\" },\n          \"30%, 60%\": { transform: \"rotate(-2deg)\" },\n          \"40%, 70%\": { transform: \"rotate(2deg)\" },\n          \"45%\": { transform: \"rotate(-4deg)\" },\n          \"55%\": { transform: \"rotate(4deg)\" },\n        },\n        popup: {\n          \"0%\": { transform: \"scale(0.8)\", opacity: 0.8 },\n          \"50%\": { transform: \"scale(1.1)\", opacity: 1 },\n          \"100%\": { transform: \"scale(1)\", opacity: 1 },\n        },\n        shimmer: {\n          \"0%\": { backgroundPosition: \"0 50%\" },\n          \"50%\": { backgroundPosition: \"100% 50%\" },\n          \"100%\": { backgroundPosition: \"0% 50%\" },\n        },\n        fadeIn: {\n          'from': { opacity: 0, transform: 'translateY(-10px)' },\n          'to': { opacity: 1, transform: 'translateY(0)' },\n        },\n        cardAppear: {\n          'from': { opacity: 0, transform: 'translateY(20px) rotateX(5deg)' },\n          'to': { opacity: 1, transform: 'translateY(0) rotateX(0)' },\n        },\n        fadeInUp: {\n          'from': { opacity: 0, transform: 'translateY(10px)' },\n          'to': { opacity: 1, transform: 'translateY(0)' },\n        },\n      },\n    },\n  },\n  plugins: [require(\"daisyui\")],\n  daisyui: {\n    themes: [\"light\", \"dark\"],\n  },\n};\n"
    },
    {
      "filepath": ".env.local",
      "content": "SUPABASE_URL=https://rvwvnralrlsdtugtgict.supabase.co\nSUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ2d3ZucmFscmxzZHR1Z3RnaWN0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NTQ0NzM0NCwiZXhwIjoyMDYxMDIzMzQ0fQ.hFRjn5zq24WmKEoCLbWDRUY6dUdEjlPS-c4OemCaFM4\nNEXT_PUBLIC_SUPABASE_URL=https://rvwvnralrlsdtugtgict.supabase.co\nNEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ2d3ZucmFscmxzZHR1Z3RnaWN0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU0NDczNDQsImV4cCI6MjA2MTAyMzM0NH0.6pBET5OCcZ8hfJrexg83vtXhmes9bnk7iFz3wCLHGWc\n\n\n# -----------------------------------------------------------------------------\n# Mailgun: https://shipfa.st/docs/features/emails\n# -----------------------------------------------------------------------------\nEMAIL_SERVER=\nMAILGUN_API_KEY=\n\n\n\n# -----------------------------------------------------------------------------\n# Stripe: https://shipfa.st/docs/features/payments\n# -----------------------------------------------------------------------------\nSTRIPE_PUBLIC_KEY=\nSTRIPE_SECRET_KEY=\nSTRIPE_WEBHOOK_SECRET="
    },
    {
      "filepath": "supabase_database.sql",
      "content": "-- Enable UUID generation\nCREATE EXTENSION IF NOT EXISTS \"pgcrypto\";\n\n-- ------------------------------------------------------------------\n-- ENUMS\n-- ------------------------------------------------------------------\n-- No changes needed unless new types are required\nCREATE TYPE question_type AS ENUM (\n  'drag_and_drop',\n  'dropdown_selection',\n  'multi',\n  'single_selection',\n  'order',\n  'yes_no',\n  'yesno_multi'\n);\nCREATE TYPE difficulty AS ENUM ('easy','medium','hard');\n\n-- ------------------------------------------------------------------\n-- Utility Function for Timestamps\n-- ------------------------------------------------------------------\nCREATE OR REPLACE FUNCTION trigger_set_timestamp()\nRETURNS TRIGGER AS $$\nBEGIN\n  NEW.updated_at = NOW();\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- ------------------------------------------------------------------\n-- QUIZ-LEVEL METADATA\n-- ------------------------------------------------------------------\nCREATE TABLE IF NOT EXISTS public.quizzes (\n  id           TEXT        PRIMARY KEY,          -- e.g. azure-a102\n  title        TEXT        NOT NULL,\n  description  TEXT,\n  quiz_type    TEXT,\n  settings     JSONB,\n  author       TEXT,\n  difficulty   difficulty  NOT NULL DEFAULT 'medium',\n  quiz_topic   TEXT,\n  created_at   TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at   TIMESTAMPTZ NOT NULL DEFAULT now()\n);\nCREATE INDEX IF NOT EXISTS idx_quizzes_topic      ON public.quizzes (quiz_topic);\nCREATE INDEX IF NOT EXISTS idx_quizzes_difficulty ON public.quizzes (difficulty);\n\n-- Add trigger for updated_at on quizzes\nDROP TRIGGER IF EXISTS set_timestamp_quizzes ON public.quizzes;\nCREATE TRIGGER set_timestamp_quizzes\nBEFORE UPDATE ON public.quizzes\nFOR EACH ROW\nEXECUTE FUNCTION trigger_set_timestamp();\n\n-- ------------------------------------------------------------------\n-- QUESTIONS\n-- ------------------------------------------------------------------\nCREATE TABLE IF NOT EXISTS public.questions (\n  id                 UUID          PRIMARY KEY DEFAULT gen_random_uuid(),\n  type               question_type NOT NULL,\n  question           TEXT          NOT NULL,\n  points             INTEGER       NOT NULL CHECK (points >= 0),\n  quiz_tag           TEXT          NOT NULL,\n  difficulty         difficulty    NOT NULL DEFAULT 'medium',\n  explanation        TEXT,\n  feedback_correct   TEXT          NOT NULL,\n  feedback_incorrect TEXT          NOT NULL,\n  created_at         TIMESTAMPTZ   NOT NULL DEFAULT now(),\n  updated_at         TIMESTAMPTZ   NOT NULL DEFAULT now(),\n  CONSTRAINT fk_questions_quiz\n    FOREIGN KEY (quiz_tag)\n    REFERENCES public.quizzes(id)\n    ON DELETE CASCADE\n);\nCREATE INDEX IF NOT EXISTS idx_questions_type       ON public.questions (type);\nCREATE INDEX IF NOT EXISTS idx_questions_quiz_tag   ON public.questions (quiz_tag);\nCREATE INDEX IF NOT EXISTS idx_questions_difficulty ON public.questions (difficulty);\n\n-- Add trigger for updated_at on questions\nDROP TRIGGER IF EXISTS set_timestamp_questions ON public.questions;\nCREATE TRIGGER set_timestamp_questions\nBEFORE UPDATE ON public.questions\nFOR EACH ROW\nEXECUTE FUNCTION trigger_set_timestamp();\n\n-- ------------------------------------------------------------------\n-- drag_and_drop\n-- ------------------------------------------------------------------\nCREATE TABLE IF NOT EXISTS public.drag_and_drop_targets (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  target_id   TEXT NOT NULL,\n  text        TEXT NOT NULL,\n  PRIMARY KEY (question_id, target_id)\n);\n\n-- *** Refined: Removed target_id and is_correct ***\nCREATE TABLE IF NOT EXISTS public.drag_and_drop_options (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  option_id   TEXT NOT NULL,\n  text        TEXT NOT NULL,\n  PRIMARY KEY (question_id, option_id)\n);\n\nCREATE TABLE IF NOT EXISTS public.drag_and_drop_correct_pairs (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  option_id   TEXT NOT NULL,\n  target_id   TEXT NOT NULL,\n  PRIMARY KEY (question_id, option_id, target_id),\n  FOREIGN KEY (question_id, option_id)\n    REFERENCES public.drag_and_drop_options(question_id, option_id) ON DELETE CASCADE,\n  FOREIGN KEY (question_id, target_id)\n    REFERENCES public.drag_and_drop_targets(question_id, target_id) ON DELETE CASCADE\n);\n\n-- ------------------------------------------------------------------\n-- dropdown_selection\n-- ------------------------------------------------------------------\n-- *** Reverted: Kept is_correct as quizApi.ts relies on it ***\nCREATE TABLE IF NOT EXISTS public.dropdown_selection_options (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  option_id   TEXT NOT NULL,\n  text        TEXT NOT NULL,\n  is_correct  BOOLEAN NOT NULL, -- Kept for quizApi logic\n  PRIMARY KEY (question_id, option_id)\n);\n\nCREATE TABLE IF NOT EXISTS public.dropdown_selection_targets (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  key         TEXT NOT NULL, -- Placeholder key in the question text e.g., 'city'\n  value       TEXT NOT NULL, -- The TEXT value of the correct option for this key\n  PRIMARY KEY (question_id, key)\n);\n\n-- ------------------------------------------------------------------\n-- multi (multi-select) - Structure is good\n-- ------------------------------------------------------------------\nCREATE TABLE IF NOT EXISTS public.multi_options (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  option_id   TEXT NOT NULL,\n  text        TEXT NOT NULL,\n  PRIMARY KEY (question_id, option_id)\n);\n\nCREATE TABLE IF NOT EXISTS public.multi_correct_answers (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  option_id   TEXT NOT NULL,\n  PRIMARY KEY (question_id, option_id),\n  FOREIGN KEY (question_id, option_id)\n    REFERENCES public.multi_options(question_id, option_id) ON DELETE CASCADE -- Added ON DELETE CASCADE\n);\n\n-- ------------------------------------------------------------------\n-- single_selection - Structure is good\n-- ------------------------------------------------------------------\nCREATE TABLE IF NOT EXISTS public.single_selection_options (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  option_id   TEXT NOT NULL,\n  text        TEXT NOT NULL,\n  PRIMARY KEY (question_id, option_id)\n);\n\nCREATE TABLE IF NOT EXISTS public.single_selection_correct_answer (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE PRIMARY KEY,\n  option_id   TEXT NOT NULL,\n  FOREIGN KEY (question_id, option_id)\n    REFERENCES public.single_selection_options(question_id, option_id) ON DELETE CASCADE -- Added ON DELETE CASCADE\n);\n\n-- ------------------------------------------------------------------\n-- order\n-- ------------------------------------------------------------------\n-- *** Refined: Removed position ***\nCREATE TABLE IF NOT EXISTS public.order_items (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  item_id     TEXT NOT NULL,\n  text        TEXT NOT NULL,\n  PRIMARY KEY (question_id, item_id)\n);\n\nCREATE TABLE IF NOT EXISTS public.order_correct_order (\n  question_id UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  item_id     TEXT NOT NULL,\n  position    INTEGER NOT NULL CHECK (position > 0),\n  PRIMARY KEY (question_id, item_id), -- Ensures each item has only one position\n  UNIQUE (question_id, position),      -- Ensures each position is used only once per question\n  FOREIGN KEY (question_id, item_id)\n    REFERENCES public.order_items(question_id, item_id) ON DELETE CASCADE -- Added ON DELETE CASCADE\n);\n\n-- ------------------------------------------------------------------\n-- yes_no - Structure is good\n-- ------------------------------------------------------------------\nCREATE TABLE IF NOT EXISTS public.yes_no_answer (\n  question_id    UUID REFERENCES public.questions(id) ON DELETE CASCADE PRIMARY KEY,\n  correct_answer BOOLEAN NOT NULL\n);\n\n-- ------------------------------------------------------------------\n-- yesno_multi - Structure is good\n-- ------------------------------------------------------------------\nCREATE TABLE IF NOT EXISTS public.yesno_multi_statements (\n  question_id  UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  statement_id TEXT NOT NULL,\n  text         TEXT NOT NULL,\n  PRIMARY KEY (question_id, statement_id)\n);\n\nCREATE TABLE IF NOT EXISTS public.yesno_multi_correct_answers (\n  question_id    UUID REFERENCES public.questions(id) ON DELETE CASCADE,\n  statement_id   TEXT NOT NULL,\n  correct_answer BOOLEAN NOT NULL,\n  PRIMARY KEY (question_id, statement_id),\n  FOREIGN KEY (question_id, statement_id)\n    REFERENCES public.yesno_multi_statements(question_id, statement_id) ON DELETE CASCADE -- Added ON DELETE CASCADE\n);\n\n-- ------------------------------------------------------------------\n-- Permissions\n-- ------------------------------------------------------------------\nGRANT USAGE ON SCHEMA public TO anon, authenticated, service_role;\nGRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public\n  TO anon, authenticated, service_role;"
    },
    {
      "filepath": "next.config.js",
      "content": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n  images: {\n    domains: [\n      // NextJS <Image> component needs to whitelist domains for src={}\n      \"lh3.googleusercontent.com\",\n      \"pbs.twimg.com\",\n      \"images.unsplash.com\",\n      \"logos-world.net\",\n    ],\n  },\n};\n\nmodule.exports = nextConfig;\n"
    },
    {
      "filepath": "next-sitemap.config.js",
      "content": "module.exports = {\n  // REQUIRED: add your own domain name here (e.g. https://shipfa.st),\n  siteUrl: process.env.SITE_URL || \"https://shipfa.st\",\n  generateRobotsTxt: true,\n  // use this to exclude routes from the sitemap (i.e. a user dashboard). By default, NextJS app router metadata files are excluded (https://nextjs.org/docs/app/api-reference/file-conventions/metadata)\n  exclude: [\"/twitter-image.*\", \"/opengraph-image.*\", \"/icon.*\"],\n};\n"
    },
    {
      "filepath": "collect_code_for_llm.py",
      "content": "#!/usr/bin/env python3\n\"\"\"\nA simple script to collect all code files from a project, including JSON files\nby default. Only excludes Markdown (.md) files.\nCan limit quiz JSON files to only 3 questions per quiz type.\n\nUsage:\n  python3 collect_code_for_llm.py\n  python3 collect_code_for_llm.py --output-dir=./output\n  python3 collect_code_for_llm.py --exclude large-data.json another-file.json\n  python3 collect_code_for_llm.py --limit-quiz-questions 3\n\"\"\"\n\nimport os\nimport json\nimport datetime\nfrom pathlib import Path\nimport argparse\nimport sys\n\n\ndef is_quiz_file(filepath, content):\n    \"\"\"Determines if a JSON file is a quiz file by checking for specific structures.\"\"\"\n    try:\n        data = json.loads(content)\n        # Check for quiz structure pattern\n        if 'quiz' in data and 'questions' in data['quiz']:\n            return True\n        # Check for questions array pattern (from separated quiz files)\n        if 'questions' in data and isinstance(data['questions'], list):\n            return True\n        return False\n    except (json.JSONDecodeError, TypeError):\n        return False\n\ndef limit_quiz_questions(content, max_questions=3):\n    \"\"\"Limits the number of questions in a quiz file to max_questions.\"\"\"\n    try:\n        data = json.loads(content)\n        \n        # Handle quiz structure\n        if 'quiz' in data and 'questions' in data['quiz']:\n            if len(data['quiz']['questions']) > max_questions:\n                data['quiz']['questions'] = data['quiz']['questions'][:max_questions]\n        \n        # Handle questions array structure (from separated quiz files)\n        elif 'questions' in data and isinstance(data['questions'], list):\n            if len(data['questions']) > max_questions:\n                data['questions'] = data['questions'][:max_questions]\n        \n        return json.dumps(data, indent=2)\n    except (json.JSONDecodeError, TypeError):\n        # If there's an error, return the original content\n        return content\n\ndef main():\n    # Parse command line arguments\n    parser = argparse.ArgumentParser(description='Collect code files for LLM analysis.')\n    parser.add_argument('--output-dir', default='.', help='Directory to save output files')\n    parser.add_argument('--exclude', nargs='+', default=[], \n                      help='JSON files to exclude (all other JSON files will be included)')\n    parser.add_argument('--root-dir', default='.', help='Root directory of the project')\n    parser.add_argument('--limit-quiz-questions', type=int, default=0,\n                      help='Limit the number of questions in quiz files (0 = no limit)')\n    args = parser.parse_args()\n\n    # Normalize paths\n    root_dir = Path(args.root_dir).absolute()\n    output_dir = Path(args.output_dir).absolute()\n    output_dir.mkdir(exist_ok=True)\n\n    # Generate timestamp for output files\n    timestamp = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')\n    json_outfile = output_dir / f\"cognitive_quiz_code_{timestamp}.json\"\n    md_outfile = output_dir / f\"cognitive_quiz_code_{timestamp}.md\"\n    \n    print(f\"Project root: {root_dir}\")\n    print(f\"Output directory: {output_dir}\")\n    print(f\"JSON files to exclude: {', '.join(args.exclude)}\")\n    if args.limit_quiz_questions > 0:\n        print(f\"Limiting quiz files to {args.limit_quiz_questions} questions per quiz type\")\n    \n    # Collection stats\n    stats = {\n        'total_files': 0,\n        'included_files': 0,\n        'json_excluded': 0,\n        'markdown_excluded': 0,\n        'binary_excluded': 0,\n        'ignored_dirs_excluded': 0,\n        'other_excluded': 0,\n        'quiz_files_limited': 0\n    }\n    \n    collected_files = []\n    errors = []\n    \n    # Directories to ignore\n    ignore_dirs = ['.git', 'node_modules', '.next', 'dist', 'build']\n    \n    # Extensions to treat as binary\n    binary_extensions = [\n        '.jpg', '.jpeg', '.png', '.gif', '.webp', '.ico', '.svg',\n        '.mp4', '.webm', '.mp3', '.ogg', '.wav',\n        '.pdf', '.docx', '.xlsx', '.pptx',\n        '.zip', '.tar', '.gz', '.7z',\n        '.ttf', '.woff', '.woff2', '.eot'\n    ]\n    \n    # Walk through the directory tree\n    for dirpath, dirnames, filenames in os.walk(root_dir):\n        # Skip ignored directories\n        dirnames[:] = [d for d in dirnames if d not in ignore_dirs]\n        \n        for filename in filenames:\n            stats['total_files'] += 1\n            filepath = Path(dirpath) / filename\n            rel_path = filepath.relative_to(root_dir)\n            rel_path_str = str(rel_path).replace(os.sep, '/')\n            \n            # Skip files in ignored directories\n            if any(ignore_dir in str(filepath) for ignore_dir in ignore_dirs):\n                stats['ignored_dirs_excluded'] += 1\n                continue\n                \n            # Handle JSON files\n            if filepath.suffix.lower() == '.json':\n                # Skip JSON files if they're in the exclude list\n                if any(exclude_file in filepath.name for exclude_file in args.exclude):\n                    print(f\"Excluding JSON file: {rel_path_str}\")\n                    stats['json_excluded'] += 1\n                    continue\n            \n            # Handle Markdown files - exclude all .md files\n            if filepath.suffix.lower() == '.md':\n                print(f\"Excluding Markdown file: {rel_path_str}\")\n                stats['markdown_excluded'] += 1\n                continue\n            \n            # Skip binary files\n            if filepath.suffix.lower() in binary_extensions:\n                print(f\"Skipping binary file: {rel_path_str}\")\n                stats['binary_excluded'] += 1\n                continue\n                \n            # Read the file\n            try:\n                with open(filepath, 'r', encoding='utf-8') as f:\n                    content = f.read()\n                \n                # Limit quiz JSON files if requested\n                if args.limit_quiz_questions > 0 and filepath.suffix.lower() == '.json':\n                    if is_quiz_file(filepath, content):\n                        original_content = content\n                        content = limit_quiz_questions(content, args.limit_quiz_questions)\n                        if content != original_content:\n                            stats['quiz_files_limited'] += 1\n                            print(f\"Limited quiz questions in: {rel_path_str}\")\n                    \n                collected_files.append({\n                    'filepath': rel_path_str,\n                    'content': content\n                })\n                \n                stats['included_files'] += 1\n                print(f\"Collected: {rel_path_str}\")\n                \n            except UnicodeDecodeError:\n                # Skip binary files that weren't caught by extension\n                print(f\"Skipping binary file (decode error): {rel_path_str}\")\n                stats['binary_excluded'] += 1\n            except Exception as e:\n                error_msg = f\"Error reading {rel_path_str}: {e}\"\n                print(f\"Error: {error_msg}\")\n                errors.append(error_msg)\n    \n    # Calculate other excluded files\n    stats['other_excluded'] = (stats['total_files'] - stats['included_files'] - \n                              stats['json_excluded'] - stats['markdown_excluded'] -\n                              stats['binary_excluded'] - stats['ignored_dirs_excluded'])\n    \n    # Create project structure\n    structure = sorted([f['filepath'] for f in collected_files])\n    \n    # Create output JSON\n    output = {\n        'date': datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'),\n        'project_structure': structure,\n        'files': collected_files\n    }\n    \n    # Write JSON output\n    with open(json_outfile, 'w', encoding='utf-8') as f:\n        json.dump(output, f, indent=2)\n    \n    # Write Markdown output\n    with open(md_outfile, 'w', encoding='utf-8') as f:\n        # Write header\n        f.write(f\"# Cognitive Quiz Codebase\\n\\n\")\n        f.write(f\"Generated on: {output['date']}\\n\\n\")\n        \n        # Write project structure\n        f.write(\"## Project Structure\\n\\n```\\n\")\n        for path in structure:\n            f.write(f\"{path}\\n\")\n        f.write(\"```\\n\\n\")\n        \n        # Write file contents\n        f.write(\"## File Contents\\n\\n\")\n        for file_data in collected_files:\n            f.write(f\"### {file_data['filepath']}\\n\\n\")\n            extension = os.path.splitext(file_data['filepath'])[1][1:] or 'text'\n            \n            # Map file extensions to markdown code block language identifiers\n            extension_map = {\n                'js': 'javascript',\n                'jsx': 'jsx',\n                'ts': 'typescript',\n                'tsx': 'tsx',\n                'py': 'python',\n                'css': 'css',\n                'scss': 'scss',\n                'html': 'html',\n                'md': 'markdown',\n                'json': 'json',\n                'yaml': 'yaml',\n                'yml': 'yaml',\n                'sh': 'bash',\n                'bash': 'bash',\n                'zsh': 'bash'\n            }\n            \n            lang = extension_map.get(extension.lower(), extension)\n            f.write(f\"```{lang}\\n{file_data['content']}\\n```\\n\\n\")\n    \n    # Print summary\n    print(\"\\nCollection complete:\")\n    print(f\"- Total files scanned: {stats['total_files']}\")\n    print(f\"- Files included: {stats['included_files']}\")\n    print(f\"- JSON files excluded: {stats['json_excluded']}\")\n    print(f\"- Markdown files excluded: {stats['markdown_excluded']}\")\n    print(f\"- Binary files excluded: {stats['binary_excluded']}\")\n    print(f\"- Files in ignored directories: {stats['ignored_dirs_excluded']}\")\n    print(f\"- Other files excluded: {stats['other_excluded']}\")\n    if args.limit_quiz_questions > 0:\n        print(f\"- Quiz files limited to {args.limit_quiz_questions} questions: {stats['quiz_files_limited']}\")\n    \n    print(f\"\\nOutput files created:\")\n    print(f\"- JSON: {json_outfile}\")\n    print(f\"- Markdown: {md_outfile}\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "filepath": "next-env.d.ts",
      "content": "/// <reference types=\"next\" />\n/// <reference types=\"next/image-types/global\" />\n\n// NOTE: This file should not be edited\n// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.\n"
    },
    {
      "filepath": "package-lock.json",
      "content": "{\n  \"name\": \"ship-fast-code\",\n  \"version\": \"0.1.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"ship-fast-code\",\n      \"version\": \"0.1.0\",\n      \"dependencies\": {\n        \"@headlessui/react\": \"^1.7.18\",\n        \"@mdx-js/loader\": \"^2.3.0\",\n        \"@mdx-js/react\": \"^2.3.0\",\n        \"@next/mdx\": \"^13.5.6\",\n        \"@supabase/auth-helpers-nextjs\": \"^0.8.7\",\n        \"@supabase/supabase-js\": \"^2.41.1\",\n        \"axios\": \"^1.6.8\",\n        \"crisp-sdk-web\": \"^1.0.22\",\n        \"dotenv\": \"^16.5.0\",\n        \"eslint\": \"8.47.0\",\n        \"eslint-config-next\": \"13.4.19\",\n        \"form-data\": \"^4.0.0\",\n        \"framer-motion\": \"^12.10.1\",\n        \"fs-extra\": \"^11.3.0\",\n        \"mailgun.js\": \"^9.4.1\",\n        \"next\": \"^15.3.2\",\n        \"next-plausible\": \"^3.12.0\",\n        \"next-sitemap\": \"^4.2.3\",\n        \"nextjs-toploader\": \"^1.6.11\",\n        \"nodemailer\": \"^6.9.13\",\n        \"react\": \"18.2.0\",\n        \"react-dom\": \"18.2.0\",\n        \"react-hot-toast\": \"^2.4.1\",\n        \"react-syntax-highlighter\": \"^15.5.0\",\n        \"react-tooltip\": \"^5.26.3\",\n        \"stripe\": \"^13.11.0\",\n        \"uuid\": \"^11.1.0\",\n        \"zod\": \"^3.22.4\"\n      },\n      \"devDependencies\": {\n        \"@types/dotenv\": \"^6.1.1\",\n        \"@types/jest\": \"^29.5.12\",\n        \"@types/mdx\": \"^2.0.12\",\n        \"@types/mongoose\": \"^5.11.97\",\n        \"@types/node\": \"^20.12.2\",\n        \"@types/react\": \"^18.2.73\",\n        \"@types/react-dom\": \"^18.2.23\",\n        \"@types/react-syntax-highlighter\": \"^15.5.11\",\n        \"@types/uuid\": \"^10.0.0\",\n        \"autoprefixer\": \"^10.4.19\",\n        \"daisyui\": \"^4.10.1\",\n        \"postcss\": \"^8.4.38\",\n        \"tailwindcss\": \"^3.4.3\",\n        \"typescript\": \"^5.4.3\"\n      }\n    },\n    \"node_modules/@aashutoshrathi/word-wrap\": {\n      \"version\": \"1.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/@aashutoshrathi/word-wrap/-/word-wrap-1.2.6.tgz\",\n      \"integrity\": \"sha512-1Yjs2SvM8TflER/OD3cOjhWWOZb58A2t7wpE2S9XfBYTiIl+XFhQG2bjy4Pu1I+EAlCNUzRDYDdFwFYUKvXcIA==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/@alloc/quick-lru\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz\",\n      \"integrity\": \"sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.24.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.24.2.tgz\",\n      \"integrity\": \"sha512-y5+tLQyV8pg3fsiln67BVLD1P13Eg4lh5RW9mF0zUuvLrv9uIQ4MCL+CRT+FTsBlBjcIan6PGsLcBN0m3ClUyQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/highlight\": \"^7.24.2\",\n        \"picocolors\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz\",\n      \"integrity\": \"sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight\": {\n      \"version\": \"7.24.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.24.2.tgz\",\n      \"integrity\": \"sha512-Yac1ao4flkTxTteCDZLEvdxg2fZfz1v8M4QpaGypq/WPDqg3ijHYbDfs+LG5hvzSoqaSZ9/Z9lKSP3CjZjv+pA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"chalk\": \"^2.4.2\",\n        \"js-tokens\": \"^4.0.0\",\n        \"picocolors\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\",\n      \"dev\": true\n    },\n    \"node_modules/@babel/highlight/node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.24.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.24.1.tgz\",\n      \"integrity\": \"sha512-+BIznRzyqBf+2wCTxcKE3wDjfGeCoVE61KSHGpkzqrLi8qxqFwBeUFyId2cxkTmm55fzDGnm0+yCxaxygrLUnQ==\",\n      \"dependencies\": {\n        \"regenerator-runtime\": \"^0.14.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@corex/deepmerge\": {\n      \"version\": \"4.0.43\",\n      \"resolved\": \"https://registry.npmjs.org/@corex/deepmerge/-/deepmerge-4.0.43.tgz\",\n      \"integrity\": \"sha512-N8uEMrMPL0cu/bdboEWpQYb/0i2K5Qn8eCsxzOmxSggJbbQte7ljMRoXm917AbntqTGOzdTu+vP3KOOzoC70HQ==\"\n    },\n    \"node_modules/@emnapi/runtime\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.4.3.tgz\",\n      \"integrity\": \"sha512-pBPWdu6MLKROBX05wSNKcNb++m5Er+KQ9QkB+WVM+pW2Kx9hoSrVTnu3BdkI5eBLZoKu/J6mW/B6i6bJB2ytXQ==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"tslib\": \"^2.4.0\"\n      }\n    },\n    \"node_modules/@eslint-community/eslint-utils\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz\",\n      \"integrity\": \"sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==\",\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n      }\n    },\n    \"node_modules/@eslint-community/regexpp\": {\n      \"version\": \"4.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.10.0.tgz\",\n      \"integrity\": \"sha512-Cu96Sd2By9mCNTx2iyKOmq10v22jUVQv0lQnlGNy16oE9589yE+QADPbrMGCkA51cKZSg3Pu/aTJVTGfL/qjUA==\",\n      \"engines\": {\n        \"node\": \"^12.0.0 || ^14.0.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc\": {\n      \"version\": \"2.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz\",\n      \"integrity\": \"sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==\",\n      \"dependencies\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.6.0\",\n        \"globals\": \"^13.19.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint/js\": {\n      \"version\": \"8.57.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-8.57.0.tgz\",\n      \"integrity\": \"sha512-Ys+3g2TaW7gADOJzPt83SJtCDhMjndcDMFVQ/Tj9iA1BfJzFKD9mAUXT3OenpuPHbI6P/myECxRJrofUsDx/5g==\",\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@floating-ui/core\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/@floating-ui/core/-/core-1.6.0.tgz\",\n      \"integrity\": \"sha512-PcF++MykgmTj3CIyOQbKA/hDzOAiqI3mhuoN44WRCopIs1sgoDoU4oty4Jtqaj/y3oDU6fnVSm4QG0a3t5i0+g==\",\n      \"dependencies\": {\n        \"@floating-ui/utils\": \"^0.2.1\"\n      }\n    },\n    \"node_modules/@floating-ui/dom\": {\n      \"version\": \"1.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@floating-ui/dom/-/dom-1.6.3.tgz\",\n      \"integrity\": \"sha512-RnDthu3mzPlQ31Ss/BTwQ1zjzIhr3lk1gZB1OC56h/1vEtaXkESrOqL5fQVMfXpwGtRwX+YsZBdyHtJMQnkArw==\",\n      \"dependencies\": {\n        \"@floating-ui/core\": \"^1.0.0\",\n        \"@floating-ui/utils\": \"^0.2.0\"\n      }\n    },\n    \"node_modules/@floating-ui/utils\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.1.tgz\",\n      \"integrity\": \"sha512-9TANp6GPoMtYzQdt54kfAyMmz1+osLlXdg2ENroU7zzrtflTLrrC/lgrIfaSe+Wu0b89GKccT7vxXA0MoAIO+Q==\"\n    },\n    \"node_modules/@headlessui/react\": {\n      \"version\": \"1.7.18\",\n      \"resolved\": \"https://registry.npmjs.org/@headlessui/react/-/react-1.7.18.tgz\",\n      \"integrity\": \"sha512-4i5DOrzwN4qSgNsL4Si61VMkUcWbcSKueUV7sFhpHzQcSShdlHENE5+QBntMSRvHt8NyoFO2AGG8si9lq+w4zQ==\",\n      \"dependencies\": {\n        \"@tanstack/react-virtual\": \"^3.0.0-beta.60\",\n        \"client-only\": \"^0.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16 || ^17 || ^18\",\n        \"react-dom\": \"^16 || ^17 || ^18\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array\": {\n      \"version\": \"0.11.14\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.14.tgz\",\n      \"integrity\": \"sha512-3T8LkOmg45BV5FICb15QQMsyUSWrQ8AygVfC7ZG32zOalnqrilm018ZVCw0eapXux8FtA33q8PSRSstjee3jSg==\",\n      \"dependencies\": {\n        \"@humanwhocodes/object-schema\": \"^2.0.2\",\n        \"debug\": \"^4.3.1\",\n        \"minimatch\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=10.10.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/module-importer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n      \"engines\": {\n        \"node\": \">=12.22\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@humanwhocodes/object-schema\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.2.tgz\",\n      \"integrity\": \"sha512-6EwiSjwWYP7pTckG6I5eyFANjPhmPjUX9JRLUSfNPC7FX7zK9gyZAfUEaECL6ALTpGX5AjnBq3C9XmVWPitNpw==\"\n    },\n    \"node_modules/@img/sharp-darwin-arm64\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.34.1.tgz\",\n      \"integrity\": \"sha512-pn44xgBtgpEbZsu+lWf2KNb6OAf70X68k+yk69Ic2Xz11zHR/w24/U49XT7AeRwJ0Px+mhALhU5LPci1Aymk7A==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-darwin-arm64\": \"1.1.0\"\n      }\n    },\n    \"node_modules/@img/sharp-darwin-x64\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-darwin-x64/-/sharp-darwin-x64-0.34.1.tgz\",\n      \"integrity\": \"sha512-VfuYgG2r8BpYiOUN+BfYeFo69nP/MIwAtSJ7/Zpxc5QF3KS22z8Pvg3FkrSFJBPNQ7mmcUcYQFBmEQp7eu1F8Q==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-darwin-x64\": \"1.1.0\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-darwin-arm64\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.1.0.tgz\",\n      \"integrity\": \"sha512-HZ/JUmPwrJSoM4DIQPv/BfNh9yrOA8tlBbqbLz4JZ5uew2+o22Ik+tHQJcih7QJuSa0zo5coHTfD5J8inqj9DA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-darwin-x64\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-darwin-x64/-/sharp-libvips-darwin-x64-1.1.0.tgz\",\n      \"integrity\": \"sha512-Xzc2ToEmHN+hfvsl9wja0RlnXEgpKNmftriQp6XzY/RaSfwD9th+MSh0WQKzUreLKKINb3afirxW7A0fz2YWuQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-arm\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-arm/-/sharp-libvips-linux-arm-1.1.0.tgz\",\n      \"integrity\": \"sha512-s8BAd0lwUIvYCJyRdFqvsj+BJIpDBSxs6ivrOPm/R7piTs5UIwY5OjXrP2bqXC9/moGsyRa37eYWYCOGVXxVrA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-arm64\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-arm64/-/sharp-libvips-linux-arm64-1.1.0.tgz\",\n      \"integrity\": \"sha512-IVfGJa7gjChDET1dK9SekxFFdflarnUB8PwW8aGwEoF3oAsSDuNUTYS+SKDOyOJxQyDC1aPFMuRYLoDInyV9Ew==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-ppc64\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-ppc64/-/sharp-libvips-linux-ppc64-1.1.0.tgz\",\n      \"integrity\": \"sha512-tiXxFZFbhnkWE2LA8oQj7KYR+bWBkiV2nilRldT7bqoEZ4HiDOcePr9wVDAZPi/Id5fT1oY9iGnDq20cwUz8lQ==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-s390x\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-s390x/-/sharp-libvips-linux-s390x-1.1.0.tgz\",\n      \"integrity\": \"sha512-xukSwvhguw7COyzvmjydRb3x/09+21HykyapcZchiCUkTThEQEOMtBj9UhkaBRLuBrgLFzQ2wbxdeCCJW/jgJA==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-x64\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-x64/-/sharp-libvips-linux-x64-1.1.0.tgz\",\n      \"integrity\": \"sha512-yRj2+reB8iMg9W5sULM3S74jVS7zqSzHG3Ol/twnAAkAhnGQnpjj6e4ayUz7V+FpKypwgs82xbRdYtchTTUB+Q==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linuxmusl-arm64\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-arm64/-/sharp-libvips-linuxmusl-arm64-1.1.0.tgz\",\n      \"integrity\": \"sha512-jYZdG+whg0MDK+q2COKbYidaqW/WTz0cc1E+tMAusiDygrM4ypmSCjOJPmFTvHHJ8j/6cAGyeDWZOsK06tP33w==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linuxmusl-x64\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-x64/-/sharp-libvips-linuxmusl-x64-1.1.0.tgz\",\n      \"integrity\": \"sha512-wK7SBdwrAiycjXdkPnGCPLjYb9lD4l6Ze2gSdAGVZrEL05AOUJESWU2lhlC+Ffn5/G+VKuSm6zzbQSzFX/P65A==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-linux-arm\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linux-arm/-/sharp-linux-arm-0.34.1.tgz\",\n      \"integrity\": \"sha512-anKiszvACti2sGy9CirTlNyk7BjjZPiML1jt2ZkTdcvpLU1YH6CXwRAZCA2UmRXnhiIftXQ7+Oh62Ji25W72jA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linux-arm\": \"1.1.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linux-arm64\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linux-arm64/-/sharp-linux-arm64-0.34.1.tgz\",\n      \"integrity\": \"sha512-kX2c+vbvaXC6vly1RDf/IWNXxrlxLNpBVWkdpRq5Ka7OOKj6nr66etKy2IENf6FtOgklkg9ZdGpEu9kwdlcwOQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linux-arm64\": \"1.1.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linux-s390x\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linux-s390x/-/sharp-linux-s390x-0.34.1.tgz\",\n      \"integrity\": \"sha512-7s0KX2tI9mZI2buRipKIw2X1ufdTeaRgwmRabt5bi9chYfhur+/C1OXg3TKg/eag1W+6CCWLVmSauV1owmRPxA==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linux-s390x\": \"1.1.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linux-x64\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linux-x64/-/sharp-linux-x64-0.34.1.tgz\",\n      \"integrity\": \"sha512-wExv7SH9nmoBW3Wr2gvQopX1k8q2g5V5Iag8Zk6AVENsjwd+3adjwxtp3Dcu2QhOXr8W9NusBU6XcQUohBZ5MA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linux-x64\": \"1.1.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linuxmusl-arm64\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linuxmusl-arm64/-/sharp-linuxmusl-arm64-0.34.1.tgz\",\n      \"integrity\": \"sha512-DfvyxzHxw4WGdPiTF0SOHnm11Xv4aQexvqhRDAoD00MzHekAj9a/jADXeXYCDFH/DzYruwHbXU7uz+H+nWmSOQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linuxmusl-arm64\": \"1.1.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linuxmusl-x64\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linuxmusl-x64/-/sharp-linuxmusl-x64-0.34.1.tgz\",\n      \"integrity\": \"sha512-pax/kTR407vNb9qaSIiWVnQplPcGU8LRIJpDT5o8PdAx5aAA7AS3X9PS8Isw1/WfqgQorPotjrZL3Pqh6C5EBg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linuxmusl-x64\": \"1.1.0\"\n      }\n    },\n    \"node_modules/@img/sharp-wasm32\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-wasm32/-/sharp-wasm32-0.34.1.tgz\",\n      \"integrity\": \"sha512-YDybQnYrLQfEpzGOQe7OKcyLUCML4YOXl428gOOzBgN6Gw0rv8dpsJ7PqTHxBnXnwXr8S1mYFSLSa727tpz0xg==\",\n      \"cpu\": [\n        \"wasm32\"\n      ],\n      \"license\": \"Apache-2.0 AND LGPL-3.0-or-later AND MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"@emnapi/runtime\": \"^1.4.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-win32-ia32\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-win32-ia32/-/sharp-win32-ia32-0.34.1.tgz\",\n      \"integrity\": \"sha512-WKf/NAZITnonBf3U1LfdjoMgNO5JYRSlhovhRhMxXVdvWYveM4kM3L8m35onYIdh75cOMCo1BexgVQcCDzyoWw==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"license\": \"Apache-2.0 AND LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-win32-x64\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-win32-x64/-/sharp-win32-x64-0.34.1.tgz\",\n      \"integrity\": \"sha512-hw1iIAHpNE8q3uMIRCgGOeDoz9KtFNarFLQclLxr/LK1VBkj8nby18RjFvr6aP7USRYAjTZW6yisnBWMX571Tw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"Apache-2.0 AND LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@isaacs/cliui\": {\n      \"version\": \"8.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n      \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^5.1.2\",\n        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n        \"strip-ansi\": \"^7.0.1\",\n        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n        \"wrap-ansi\": \"^8.1.0\",\n        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/expect-utils\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/expect-utils/-/expect-utils-29.7.0.tgz\",\n      \"integrity\": \"sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jest-get-type\": \"^29.6.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/schemas\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/schemas/-/schemas-29.6.3.tgz\",\n      \"integrity\": \"sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinclair/typebox\": \"^0.27.8\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/types\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\",\n      \"integrity\": \"sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"@types/istanbul-reports\": \"^3.0.0\",\n        \"@types/node\": \"*\",\n        \"@types/yargs\": \"^17.0.8\",\n        \"chalk\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz\",\n      \"integrity\": \"sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/set-array\": \"^1.2.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz\",\n      \"integrity\": \"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/set-array\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz\",\n      \"integrity\": \"sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.4.15\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz\",\n      \"integrity\": \"sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==\",\n      \"dev\": true\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.25\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz\",\n      \"integrity\": \"sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"node_modules/@mdx-js/loader\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@mdx-js/loader/-/loader-2.3.0.tgz\",\n      \"integrity\": \"sha512-IqsscXh7Q3Rzb+f5DXYk0HU71PK+WuFsEhf+mSV3fOhpLcEpgsHvTQ2h0T6TlZ5gHOaBeFjkXwB52by7ypMyNg==\",\n      \"dependencies\": {\n        \"@mdx-js/mdx\": \"^2.0.0\",\n        \"source-map\": \"^0.7.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      },\n      \"peerDependencies\": {\n        \"webpack\": \">=4\"\n      }\n    },\n    \"node_modules/@mdx-js/mdx\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@mdx-js/mdx/-/mdx-2.3.0.tgz\",\n      \"integrity\": \"sha512-jLuwRlz8DQfQNiUCJR50Y09CGPq3fLtmtUQfVrj79E0JWu3dvsVcxVIcfhR5h0iXu+/z++zDrYeiJqifRynJkA==\",\n      \"dependencies\": {\n        \"@types/estree-jsx\": \"^1.0.0\",\n        \"@types/mdx\": \"^2.0.0\",\n        \"estree-util-build-jsx\": \"^2.0.0\",\n        \"estree-util-is-identifier-name\": \"^2.0.0\",\n        \"estree-util-to-js\": \"^1.1.0\",\n        \"estree-walker\": \"^3.0.0\",\n        \"hast-util-to-estree\": \"^2.0.0\",\n        \"markdown-extensions\": \"^1.0.0\",\n        \"periscopic\": \"^3.0.0\",\n        \"remark-mdx\": \"^2.0.0\",\n        \"remark-parse\": \"^10.0.0\",\n        \"remark-rehype\": \"^10.0.0\",\n        \"unified\": \"^10.0.0\",\n        \"unist-util-position-from-estree\": \"^1.0.0\",\n        \"unist-util-stringify-position\": \"^3.0.0\",\n        \"unist-util-visit\": \"^4.0.0\",\n        \"vfile\": \"^5.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/@mdx-js/react\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@mdx-js/react/-/react-2.3.0.tgz\",\n      \"integrity\": \"sha512-zQH//gdOmuu7nt2oJR29vFhDv88oGPmVw6BggmrHeMI+xgEkp1B2dX9/bMBSYtK0dyLX/aOmesKS09g222K1/g==\",\n      \"dependencies\": {\n        \"@types/mdx\": \"^2.0.0\",\n        \"@types/react\": \">=16\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">=16\"\n      }\n    },\n    \"node_modules/@mongodb-js/saslprep\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.1.5.tgz\",\n      \"integrity\": \"sha512-XLNOMH66KhJzUJNwT/qlMnS4WsNDWD5ASdyaSH3EtK+F4r/CFGa3jT4GNi4mfOitGvWXtdLgQJkQjxSVrio+jA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"sparse-bitfield\": \"^3.0.3\"\n      }\n    },\n    \"node_modules/@next/env\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@next/env/-/env-15.3.2.tgz\",\n      \"integrity\": \"sha512-xURk++7P7qR9JG1jJtLzPzf0qEvqCN0A/T3DXf8IPMKo9/6FfjxtEffRJIIew/bIL4T3C2jLLqBor8B/zVlx6g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@next/eslint-plugin-next\": {\n      \"version\": \"13.4.19\",\n      \"resolved\": \"https://registry.npmjs.org/@next/eslint-plugin-next/-/eslint-plugin-next-13.4.19.tgz\",\n      \"integrity\": \"sha512-N/O+zGb6wZQdwu6atMZHbR7T9Np5SUFUjZqCbj0sXm+MwQO35M8TazVB4otm87GkXYs2l6OPwARd3/PUWhZBVQ==\",\n      \"dependencies\": {\n        \"glob\": \"7.1.7\"\n      }\n    },\n    \"node_modules/@next/mdx\": {\n      \"version\": \"13.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/@next/mdx/-/mdx-13.5.6.tgz\",\n      \"integrity\": \"sha512-2AMyCrz1SxSWNUpADyLz3RbPbq0GHrchbO7Msvg7IsH8MrTw3VYaZSI1KNa6JzZIoykwtNVSEL+uBmPZi106Jw==\",\n      \"dependencies\": {\n        \"source-map\": \"^0.7.0\"\n      },\n      \"peerDependencies\": {\n        \"@mdx-js/loader\": \">=0.15.0\",\n        \"@mdx-js/react\": \">=0.15.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@mdx-js/loader\": {\n          \"optional\": true\n        },\n        \"@mdx-js/react\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@next/swc-darwin-arm64\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.3.2.tgz\",\n      \"integrity\": \"sha512-2DR6kY/OGcokbnCsjHpNeQblqCZ85/1j6njYSkzRdpLn5At7OkSdmk7WyAmB9G0k25+VgqVZ/u356OSoQZ3z0g==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-darwin-x64\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.3.2.tgz\",\n      \"integrity\": \"sha512-ro/fdqaZWL6k1S/5CLv1I0DaZfDVJkWNaUU3un8Lg6m0YENWlDulmIWzV96Iou2wEYyEsZq51mwV8+XQXqMp3w==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-linux-arm64-gnu\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.3.2.tgz\",\n      \"integrity\": \"sha512-covwwtZYhlbRWK2HlYX9835qXum4xYZ3E2Mra1mdQ+0ICGoMiw1+nVAn4d9Bo7R3JqSmK1grMq/va+0cdh7bJA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-linux-arm64-musl\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.3.2.tgz\",\n      \"integrity\": \"sha512-KQkMEillvlW5Qk5mtGA/3Yz0/tzpNlSw6/3/ttsV1lNtMuOHcGii3zVeXZyi4EJmmLDKYcTcByV2wVsOhDt/zg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-linux-x64-gnu\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.3.2.tgz\",\n      \"integrity\": \"sha512-uRBo6THWei0chz+Y5j37qzx+BtoDRFIkDzZjlpCItBRXyMPIg079eIkOCl3aqr2tkxL4HFyJ4GHDes7W8HuAUg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-linux-x64-musl\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.3.2.tgz\",\n      \"integrity\": \"sha512-+uxFlPuCNx/T9PdMClOqeE8USKzj8tVz37KflT3Kdbx/LOlZBRI2yxuIcmx1mPNK8DwSOMNCr4ureSet7eyC0w==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-win32-arm64-msvc\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.3.2.tgz\",\n      \"integrity\": \"sha512-LLTKmaI5cfD8dVzh5Vt7+OMo+AIOClEdIU/TSKbXXT2iScUTSxOGoBhfuv+FU8R9MLmrkIL1e2fBMkEEjYAtPQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-win32-x64-msvc\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.3.2.tgz\",\n      \"integrity\": \"sha512-aW5B8wOPioJ4mBdMDXkt5f3j8pUr9W8AnlX0Df35uRWNT1Y6RIybxjnSUe+PhM+M1bwgyY8PHLmXZC6zT1o5tA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@pkgjs/parseargs\": {\n      \"version\": \"0.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\",\n      \"integrity\": \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/@rushstack/eslint-patch\": {\n      \"version\": \"1.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.10.1.tgz\",\n      \"integrity\": \"sha512-S3Kq8e7LqxkA9s7HKLqXGTGck1uwis5vAXan3FnU5yw1Ec5hsSGnq4s/UCaSqABPOnOTg7zASLyst7+ohgWexg==\"\n    },\n    \"node_modules/@sinclair/typebox\": {\n      \"version\": \"0.27.8\",\n      \"resolved\": \"https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.27.8.tgz\",\n      \"integrity\": \"sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==\",\n      \"dev\": true\n    },\n    \"node_modules/@supabase/auth-helpers-nextjs\": {\n      \"version\": \"0.8.7\",\n      \"resolved\": \"https://registry.npmjs.org/@supabase/auth-helpers-nextjs/-/auth-helpers-nextjs-0.8.7.tgz\",\n      \"integrity\": \"sha512-iYdOjFo0GkRvha340l8JdCiBiyXQuG9v8jnq7qMJ/2fakrskRgHTCOt7ryWbip1T6BExcWKC8SoJrhCzPOxhhg==\",\n      \"dependencies\": {\n        \"@supabase/auth-helpers-shared\": \"0.6.3\",\n        \"set-cookie-parser\": \"^2.6.0\"\n      },\n      \"peerDependencies\": {\n        \"@supabase/supabase-js\": \"^2.19.0\"\n      }\n    },\n    \"node_modules/@supabase/auth-helpers-shared\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@supabase/auth-helpers-shared/-/auth-helpers-shared-0.6.3.tgz\",\n      \"integrity\": \"sha512-xYQRLFeFkL4ZfwC7p9VKcarshj3FB2QJMgJPydvOY7J5czJe6xSG5/wM1z63RmAzGbCkKg+dzpq61oeSyWiGBQ==\",\n      \"dependencies\": {\n        \"jose\": \"^4.14.4\"\n      },\n      \"peerDependencies\": {\n        \"@supabase/supabase-js\": \"^2.19.0\"\n      }\n    },\n    \"node_modules/@supabase/auth-js\": {\n      \"version\": \"2.63.0\",\n      \"resolved\": \"https://registry.npmjs.org/@supabase/auth-js/-/auth-js-2.63.0.tgz\",\n      \"integrity\": \"sha512-yIgcHnlgv24GxHtVGUhwGqAFDyJkPIC/xjx7HostN08A8yCy8HIfl4JEkTKyBqD1v1L05jNEJOUke4Lf4O1+Qg==\",\n      \"dependencies\": {\n        \"@supabase/node-fetch\": \"^2.6.14\"\n      }\n    },\n    \"node_modules/@supabase/functions-js\": {\n      \"version\": \"2.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/@supabase/functions-js/-/functions-js-2.2.2.tgz\",\n      \"integrity\": \"sha512-sJGq1nludmi7pY/fdtCpyY/pYonx7MfHdN408bqb736guWcVI1AChYVbI4kUM978EuOE4Ci6l7bUudfGg07QRw==\",\n      \"dependencies\": {\n        \"@supabase/node-fetch\": \"^2.6.14\"\n      }\n    },\n    \"node_modules/@supabase/node-fetch\": {\n      \"version\": \"2.6.15\",\n      \"resolved\": \"https://registry.npmjs.org/@supabase/node-fetch/-/node-fetch-2.6.15.tgz\",\n      \"integrity\": \"sha512-1ibVeYUacxWYi9i0cf5efil6adJ9WRyZBLivgjs+AUpewx1F3xPi7gLgaASI2SmIQxPoCEjAsLAzKPgMJVgOUQ==\",\n      \"dependencies\": {\n        \"whatwg-url\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"4.x || >=6.0.0\"\n      }\n    },\n    \"node_modules/@supabase/postgrest-js\": {\n      \"version\": \"1.9.2\",\n      \"resolved\": \"https://registry.npmjs.org/@supabase/postgrest-js/-/postgrest-js-1.9.2.tgz\",\n      \"integrity\": \"sha512-I6yHo8CC9cxhOo6DouDMy9uOfW7hjdsnCxZiaJuIVZm1dBGTFiQPgfMa9zXCamEWzNyWRjZvupAUuX+tqcl5Sw==\",\n      \"dependencies\": {\n        \"@supabase/node-fetch\": \"^2.6.14\"\n      }\n    },\n    \"node_modules/@supabase/realtime-js\": {\n      \"version\": \"2.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/@supabase/realtime-js/-/realtime-js-2.9.3.tgz\",\n      \"integrity\": \"sha512-lAp50s2n3FhGJFq+wTSXLNIDPw5Y0Wxrgt44eM5nLSA3jZNUUP3Oq2Ccd1CbZdVntPCWLZvJaU//pAd2NE+QnQ==\",\n      \"dependencies\": {\n        \"@supabase/node-fetch\": \"^2.6.14\",\n        \"@types/phoenix\": \"^1.5.4\",\n        \"@types/ws\": \"^8.5.10\",\n        \"ws\": \"^8.14.2\"\n      }\n    },\n    \"node_modules/@supabase/storage-js\": {\n      \"version\": \"2.5.5\",\n      \"resolved\": \"https://registry.npmjs.org/@supabase/storage-js/-/storage-js-2.5.5.tgz\",\n      \"integrity\": \"sha512-OpLoDRjFwClwc2cjTJZG8XviTiQH4Ik8sCiMK5v7et0MDu2QlXjCAW3ljxJB5+z/KazdMOTnySi+hysxWUPu3w==\",\n      \"dependencies\": {\n        \"@supabase/node-fetch\": \"^2.6.14\"\n      }\n    },\n    \"node_modules/@supabase/supabase-js\": {\n      \"version\": \"2.41.1\",\n      \"resolved\": \"https://registry.npmjs.org/@supabase/supabase-js/-/supabase-js-2.41.1.tgz\",\n      \"integrity\": \"sha512-xmECLhYugMo/6SObpsOhu5xaxVfsk+JK/d4JSh055bpESmgmN3PLpzbfqejKCpaUeeUNF21+lrJp/U9HQzT9mA==\",\n      \"dependencies\": {\n        \"@supabase/auth-js\": \"2.63.0\",\n        \"@supabase/functions-js\": \"2.2.2\",\n        \"@supabase/node-fetch\": \"2.6.15\",\n        \"@supabase/postgrest-js\": \"1.9.2\",\n        \"@supabase/realtime-js\": \"2.9.3\",\n        \"@supabase/storage-js\": \"2.5.5\"\n      }\n    },\n    \"node_modules/@swc/counter\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@swc/counter/-/counter-0.1.3.tgz\",\n      \"integrity\": \"sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==\",\n      \"license\": \"Apache-2.0\"\n    },\n    \"node_modules/@swc/helpers\": {\n      \"version\": \"0.5.15\",\n      \"resolved\": \"https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.15.tgz\",\n      \"integrity\": \"sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"tslib\": \"^2.8.0\"\n      }\n    },\n    \"node_modules/@tanstack/react-virtual\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@tanstack/react-virtual/-/react-virtual-3.2.0.tgz\",\n      \"integrity\": \"sha512-OEdMByf2hEfDa6XDbGlZN8qO6bTjlNKqjM3im9JG+u3mCL8jALy0T/67oDI001raUUPh1Bdmfn4ZvPOV5knpcg==\",\n      \"dependencies\": {\n        \"@tanstack/virtual-core\": \"3.2.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/tannerlinsley\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\",\n        \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\"\n      }\n    },\n    \"node_modules/@tanstack/virtual-core\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@tanstack/virtual-core/-/virtual-core-3.2.0.tgz\",\n      \"integrity\": \"sha512-P5XgYoAw/vfW65byBbJQCw+cagdXDT/qH6wmABiLt4v4YBT2q2vqCOhihe+D1Nt325F/S/0Tkv6C5z0Lv+VBQQ==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/tannerlinsley\"\n      }\n    },\n    \"node_modules/@types/acorn\": {\n      \"version\": \"4.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/acorn/-/acorn-4.0.6.tgz\",\n      \"integrity\": \"sha512-veQTnWP+1D/xbxVrPC3zHnCZRjSrKfhbMUlEA43iMZLu7EsnTtkJklIuwrCPbOi8YkvDQAiW05VQQFvvz9oieQ==\",\n      \"dependencies\": {\n        \"@types/estree\": \"*\"\n      }\n    },\n    \"node_modules/@types/debug\": {\n      \"version\": \"4.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/@types/debug/-/debug-4.1.12.tgz\",\n      \"integrity\": \"sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==\",\n      \"dependencies\": {\n        \"@types/ms\": \"*\"\n      }\n    },\n    \"node_modules/@types/dotenv\": {\n      \"version\": \"6.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/dotenv/-/dotenv-6.1.1.tgz\",\n      \"integrity\": \"sha512-ftQl3DtBvqHl9L16tpqqzA4YzCSXZfi7g8cQceTz5rOlYtk/IZbFjAv3mLOQlNIgOaylCQWQoBdDQHPgEBJPHg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/estree\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.5.tgz\",\n      \"integrity\": \"sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==\"\n    },\n    \"node_modules/@types/estree-jsx\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/estree-jsx/-/estree-jsx-1.0.5.tgz\",\n      \"integrity\": \"sha512-52CcUVNFyfb1A2ALocQw/Dd1BQFNmSdkuC3BkZ6iqhdMfQz7JWOFRuJFloOzjk+6WijU56m9oKXFAXc7o3Towg==\",\n      \"dependencies\": {\n        \"@types/estree\": \"*\"\n      }\n    },\n    \"node_modules/@types/hast\": {\n      \"version\": \"2.3.10\",\n      \"resolved\": \"https://registry.npmjs.org/@types/hast/-/hast-2.3.10.tgz\",\n      \"integrity\": \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2\"\n      }\n    },\n    \"node_modules/@types/istanbul-lib-coverage\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.6.tgz\",\n      \"integrity\": \"sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/istanbul-lib-report\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.3.tgz\",\n      \"integrity\": \"sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/istanbul-lib-coverage\": \"*\"\n      }\n    },\n    \"node_modules/@types/istanbul-reports\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.4.tgz\",\n      \"integrity\": \"sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/istanbul-lib-report\": \"*\"\n      }\n    },\n    \"node_modules/@types/jest\": {\n      \"version\": \"29.5.12\",\n      \"resolved\": \"https://registry.npmjs.org/@types/jest/-/jest-29.5.12.tgz\",\n      \"integrity\": \"sha512-eDC8bTvT/QhYdxJAulQikueigY5AsdBRH2yDKW3yveW7svY3+DzN84/2NUgkw10RTiJbWqZrTtoGVdYlvFJdLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"expect\": \"^29.0.0\",\n        \"pretty-format\": \"^29.0.0\"\n      }\n    },\n    \"node_modules/@types/json5\": {\n      \"version\": \"0.0.29\",\n      \"resolved\": \"https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz\",\n      \"integrity\": \"sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==\"\n    },\n    \"node_modules/@types/mdast\": {\n      \"version\": \"3.0.15\",\n      \"resolved\": \"https://registry.npmjs.org/@types/mdast/-/mdast-3.0.15.tgz\",\n      \"integrity\": \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2\"\n      }\n    },\n    \"node_modules/@types/mdx\": {\n      \"version\": \"2.0.12\",\n      \"resolved\": \"https://registry.npmjs.org/@types/mdx/-/mdx-2.0.12.tgz\",\n      \"integrity\": \"sha512-H9VZ9YqE+H28FQVchC83RCs5xQ2J7mAAv6qdDEaWmXEVl3OpdH+xfrSUzQ1lp7U7oSTRZ0RvW08ASPJsYBi7Cw==\"\n    },\n    \"node_modules/@types/mongoose\": {\n      \"version\": \"5.11.97\",\n      \"resolved\": \"https://registry.npmjs.org/@types/mongoose/-/mongoose-5.11.97.tgz\",\n      \"integrity\": \"sha512-cqwOVYT3qXyLiGw7ueU2kX9noE8DPGRY6z8eUxudhXY8NZ7DMKYAxyZkLSevGfhCX3dO/AoX5/SO9lAzfjon0Q==\",\n      \"deprecated\": \"Mongoose publishes its own types, so you do not need to install this package.\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mongoose\": \"*\"\n      }\n    },\n    \"node_modules/@types/ms\": {\n      \"version\": \"0.7.34\",\n      \"resolved\": \"https://registry.npmjs.org/@types/ms/-/ms-0.7.34.tgz\",\n      \"integrity\": \"sha512-nG96G3Wp6acyAgJqGasjODb+acrI7KltPiRxzHPXnP3NgI28bpQDRv53olbqGXbfcgF5aiiHmO3xpwEpS5Ld9g==\"\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"20.12.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.12.2.tgz\",\n      \"integrity\": \"sha512-zQ0NYO87hyN6Xrclcqp7f8ZbXNbRfoGWNcMvHTPQp9UUrwI0mI7XBz+cu7/W6/VClYo2g63B0cjull/srU7LgQ==\",\n      \"dependencies\": {\n        \"undici-types\": \"~5.26.4\"\n      }\n    },\n    \"node_modules/@types/nprogress\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/nprogress/-/nprogress-0.2.3.tgz\",\n      \"integrity\": \"sha512-k7kRA033QNtC+gLc4VPlfnue58CM1iQLgn1IMAU8VPHGOj7oIHPp9UlhedEnD/Gl8evoCjwkZjlBORtZ3JByUA==\"\n    },\n    \"node_modules/@types/phoenix\": {\n      \"version\": \"1.6.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/phoenix/-/phoenix-1.6.4.tgz\",\n      \"integrity\": \"sha512-B34A7uot1Cv0XtaHRYDATltAdKx0BvVKNgYNqE4WjtPUa4VQJM7kxeXcVKaH+KS+kCmZ+6w+QaUdcljiheiBJA==\"\n    },\n    \"node_modules/@types/prop-types\": {\n      \"version\": \"15.7.12\",\n      \"resolved\": \"https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.12.tgz\",\n      \"integrity\": \"sha512-5zvhXYtRNRluoE/jAp4GVsSduVUzNWKkOZrCDBWYtE7biZywwdC2AcEzg+cSMLFRfVgeAFqpfNabiPjxFddV1Q==\"\n    },\n    \"node_modules/@types/react\": {\n      \"version\": \"18.2.73\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react/-/react-18.2.73.tgz\",\n      \"integrity\": \"sha512-XcGdod0Jjv84HOC7N5ziY3x+qL0AfmubvKOZ9hJjJ2yd5EE+KYjWhdOjt387e9HPheHkdggF9atTifMRtyAaRA==\",\n      \"dependencies\": {\n        \"@types/prop-types\": \"*\",\n        \"csstype\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/@types/react-dom\": {\n      \"version\": \"18.2.23\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react-dom/-/react-dom-18.2.23.tgz\",\n      \"integrity\": \"sha512-ZQ71wgGOTmDYpnav2knkjr3qXdAFu0vsk8Ci5w3pGAIdj7/kKAyn+VsQDhXsmzzzepAiI9leWMmubXz690AI/A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/react\": \"*\"\n      }\n    },\n    \"node_modules/@types/react-syntax-highlighter\": {\n      \"version\": \"15.5.11\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react-syntax-highlighter/-/react-syntax-highlighter-15.5.11.tgz\",\n      \"integrity\": \"sha512-ZqIJl+Pg8kD+47kxUjvrlElrraSUrYa4h0dauY/U/FTUuprSCqvUj+9PNQNQzVc6AJgIWUUxn87/gqsMHNbRjw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/react\": \"*\"\n      }\n    },\n    \"node_modules/@types/stack-utils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.3.tgz\",\n      \"integrity\": \"sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/unist\": {\n      \"version\": \"2.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/@types/unist/-/unist-2.0.10.tgz\",\n      \"integrity\": \"sha512-IfYcSBWE3hLpBg8+X2SEa8LVkJdJEkT2Ese2aaLs3ptGdVtABxndrMaxuFlQ1qdFf9Q5rDvDpxI3WwgvKFAsQA==\"\n    },\n    \"node_modules/@types/uuid\": {\n      \"version\": \"10.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/uuid/-/uuid-10.0.0.tgz\",\n      \"integrity\": \"sha512-7gqG38EyHgyP1S+7+xomFtL+ZNHcKv6DwNaCZmJmo1vgMugyF3TCnXVg4t1uk89mLNwnLtnY3TpOpCOyp1/xHQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/webidl-conversions\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.3.tgz\",\n      \"integrity\": \"sha512-CiJJvcRtIgzadHCYXw7dqEnMNRjhGZlYK05Mj9OyktqV8uVT8fD2BFOB7S1uwBE3Kj2Z+4UyPmFw/Ixgw/LAlA==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/whatwg-url\": {\n      \"version\": \"11.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-11.0.4.tgz\",\n      \"integrity\": \"sha512-lXCmTWSHJvf0TRSO58nm978b8HJ/EdsSsEKLd3ODHFjo+3VGAyyTp4v50nWvwtzBxSMQrVOK7tcuN0zGPLICMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/webidl-conversions\": \"*\"\n      }\n    },\n    \"node_modules/@types/ws\": {\n      \"version\": \"8.5.10\",\n      \"resolved\": \"https://registry.npmjs.org/@types/ws/-/ws-8.5.10.tgz\",\n      \"integrity\": \"sha512-vmQSUcfalpIq0R9q7uTo2lXs6eGIpt9wtnLdMv9LVpIjCA/+ufZRozlVoVelIYixx1ugCBKDhn89vnsEGOCx9A==\",\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/yargs\": {\n      \"version\": \"17.0.32\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs/-/yargs-17.0.32.tgz\",\n      \"integrity\": \"sha512-xQ67Yc/laOG5uMfX/093MRlGGCIBzZMarVa+gfNKJxWAIgykYpVGkBdbqEzGDDfCrVUj6Hiff4mTZ5BA6TmAog==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/yargs-parser\": \"*\"\n      }\n    },\n    \"node_modules/@types/yargs-parser\": {\n      \"version\": \"21.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.3.tgz\",\n      \"integrity\": \"sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@typescript-eslint/parser\": {\n      \"version\": \"6.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\",\n      \"integrity\": \"sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\",\n      \"dependencies\": {\n        \"@typescript-eslint/scope-manager\": \"6.21.0\",\n        \"@typescript-eslint/types\": \"6.21.0\",\n        \"@typescript-eslint/typescript-estree\": \"6.21.0\",\n        \"@typescript-eslint/visitor-keys\": \"6.21.0\",\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \"^16.0.0 || >=18.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^7.0.0 || ^8.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/scope-manager\": {\n      \"version\": \"6.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-6.21.0.tgz\",\n      \"integrity\": \"sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==\",\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"6.21.0\",\n        \"@typescript-eslint/visitor-keys\": \"6.21.0\"\n      },\n      \"engines\": {\n        \"node\": \"^16.0.0 || >=18.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/types\": {\n      \"version\": \"6.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-6.21.0.tgz\",\n      \"integrity\": \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\",\n      \"engines\": {\n        \"node\": \"^16.0.0 || >=18.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree\": {\n      \"version\": \"6.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-6.21.0.tgz\",\n      \"integrity\": \"sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==\",\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"6.21.0\",\n        \"@typescript-eslint/visitor-keys\": \"6.21.0\",\n        \"debug\": \"^4.3.4\",\n        \"globby\": \"^11.1.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"minimatch\": \"9.0.3\",\n        \"semver\": \"^7.5.4\",\n        \"ts-api-utils\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^16.0.0 || >=18.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch\": {\n      \"version\": \"9.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\",\n      \"integrity\": \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/@typescript-eslint/visitor-keys\": {\n      \"version\": \"6.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-6.21.0.tgz\",\n      \"integrity\": \"sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==\",\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"6.21.0\",\n        \"eslint-visitor-keys\": \"^3.4.1\"\n      },\n      \"engines\": {\n        \"node\": \"^16.0.0 || >=18.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/acorn\": {\n      \"version\": \"8.11.3\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.11.3.tgz\",\n      \"integrity\": \"sha512-Y9rRfJG5jcKOE0CLisYbojUjIrIEE7AGMzA/Sm4BslANhbS+cDMpgBdcPT91oJ7OuJ9hYJBx59RjbhxVnrF8Xg==\",\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n      \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n      \"peerDependencies\": {\n        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"6.12.6\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/any-promise\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz\",\n      \"integrity\": \"sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==\",\n      \"dev\": true\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/arg\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/arg/-/arg-5.0.2.tgz\",\n      \"integrity\": \"sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==\",\n      \"dev\": true\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\"\n    },\n    \"node_modules/aria-query\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.3.0.tgz\",\n      \"integrity\": \"sha512-b0P0sZPKtyu8HkeRAfCq0IfURZK+SuwMjY1UXGBU27wpAiTwQAIlq56IbIO+ytk/JjS1fMR14ee5WBBfKi5J6A==\",\n      \"dependencies\": {\n        \"dequal\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/array-buffer-byte-length\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.1.tgz\",\n      \"integrity\": \"sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"is-array-buffer\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-includes\": {\n      \"version\": \"3.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/array-includes/-/array-includes-3.1.8.tgz\",\n      \"integrity\": \"sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"is-string\": \"^1.0.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-union\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n      \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/array.prototype.findlast\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz\",\n      \"integrity\": \"sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"es-shim-unscopables\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.findlastindex\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.findlastindex/-/array.prototype.findlastindex-1.2.5.tgz\",\n      \"integrity\": \"sha512-zfETvRFA8o7EiNn++N5f/kaCw221hrpGsDmcpndVupkPzEc1Wuf3VgC0qby1BbHs7f5DVYjgtEU2LLh5bqeGfQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"es-shim-unscopables\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flat\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.2.tgz\",\n      \"integrity\": \"sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flatmap\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.2.tgz\",\n      \"integrity\": \"sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.toreversed\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.toreversed/-/array.prototype.toreversed-1.1.2.tgz\",\n      \"integrity\": \"sha512-wwDCoT4Ck4Cz7sLtgUmzR5UV3YF5mFHUlbChCzZBQZ+0m2cl/DH3tKgvphv1nKgFsJ48oCSg6p91q2Vm0I/ZMA==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/array.prototype.tosorted\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.3.tgz\",\n      \"integrity\": \"sha512-/DdH4TiTmOKzyQbp/eadcCVexiCb36xJg7HshYOYJnNZFDj33GEv0P7GxsynpShhq4OLYJzbGcBDkLsDt7MnNg==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.22.3\",\n        \"es-errors\": \"^1.1.0\",\n        \"es-shim-unscopables\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/arraybuffer.prototype.slice\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.3.tgz\",\n      \"integrity\": \"sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==\",\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.1\",\n        \"call-bind\": \"^1.0.5\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.22.3\",\n        \"es-errors\": \"^1.2.1\",\n        \"get-intrinsic\": \"^1.2.3\",\n        \"is-array-buffer\": \"^3.0.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/ast-types-flow\": {\n      \"version\": \"0.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.8.tgz\",\n      \"integrity\": \"sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==\"\n    },\n    \"node_modules/astring\": {\n      \"version\": \"1.8.6\",\n      \"resolved\": \"https://registry.npmjs.org/astring/-/astring-1.8.6.tgz\",\n      \"integrity\": \"sha512-ISvCdHdlTDlH5IpxQJIex7BWBywFWgjJSVdwst+/iQCoEYnyOaQ95+X1JGshuBjGp6nxKUy1jMgE3zPqN7fQdg==\",\n      \"bin\": {\n        \"astring\": \"bin/astring\"\n      }\n    },\n    \"node_modules/asynckit\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n      \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\"\n    },\n    \"node_modules/autoprefixer\": {\n      \"version\": \"10.4.19\",\n      \"resolved\": \"https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.19.tgz\",\n      \"integrity\": \"sha512-BaENR2+zBZ8xXhM4pUaKUxlVdxZ0EZhjvbopwnXmxRUfqDmwSpC2lAi/QXvx7NRdPCo1WKEcEF6mV64si1z4Ew==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/autoprefixer\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"browserslist\": \"^4.23.0\",\n        \"caniuse-lite\": \"^1.0.30001599\",\n        \"fraction.js\": \"^4.3.7\",\n        \"normalize-range\": \"^0.1.2\",\n        \"picocolors\": \"^1.0.0\",\n        \"postcss-value-parser\": \"^4.2.0\"\n      },\n      \"bin\": {\n        \"autoprefixer\": \"bin/autoprefixer\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.1.0\"\n      }\n    },\n    \"node_modules/available-typed-arrays\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz\",\n      \"integrity\": \"sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==\",\n      \"dependencies\": {\n        \"possible-typed-array-names\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/axe-core\": {\n      \"version\": \"4.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/axe-core/-/axe-core-4.7.0.tgz\",\n      \"integrity\": \"sha512-M0JtH+hlOL5pLQwHOLNYZaXuhqmvS8oExsqB1SBYgA4Dk7u/xx+YdGHXaK5pyUfed5mYXdlYiphWq3G8cRi5JQ==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/axios\": {\n      \"version\": \"1.6.8\",\n      \"resolved\": \"https://registry.npmjs.org/axios/-/axios-1.6.8.tgz\",\n      \"integrity\": \"sha512-v/ZHtJDU39mDpyBoFVkETcd/uNdxrWRrg3bKpOKzXFA6Bvqopts6ALSMU3y6ijYxbw2B+wPrIv46egTzJXCLGQ==\",\n      \"dependencies\": {\n        \"follow-redirects\": \"^1.15.6\",\n        \"form-data\": \"^4.0.0\",\n        \"proxy-from-env\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/axobject-query\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/axobject-query/-/axobject-query-3.2.1.tgz\",\n      \"integrity\": \"sha512-jsyHu61e6N4Vbz/v18DHwWYKK0bSWLqn47eeDSKPB7m8tqMHF9YJ+mhIk2lVteyZrY8tnSj/jHOv4YiTCuCJgg==\",\n      \"dependencies\": {\n        \"dequal\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/bail\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/bail/-/bail-2.0.2.tgz\",\n      \"integrity\": \"sha512-0xO6mYd7JB2YesxDKplafRpsiOzPt9V02ddPCLbY1xYGPOX24NTyN50qnUxgCPcSoYMhKpAuBTjQoRZCAkUDRw==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"\n    },\n    \"node_modules/base-64\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/base-64/-/base-64-1.0.0.tgz\",\n      \"integrity\": \"sha512-kwDPIFCGx0NZHog36dj+tHiwP4QMzsZ3AgMViUBKI0+V5n4U0ufTCUMhnQ04diaRI8EX/QcPfql7zlhZ7j4zgg==\"\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/browserslist\": {\n      \"version\": \"4.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.23.0.tgz\",\n      \"integrity\": \"sha512-QW8HiM1shhT2GuzkvklfjcKDiWFXHOeFCIA/huJPwHsslwcydgk7X+z2zXpEijP98UCY7HbubZt5J2Zgvf0CaQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"caniuse-lite\": \"^1.0.30001587\",\n        \"electron-to-chromium\": \"^1.4.668\",\n        \"node-releases\": \"^2.0.14\",\n        \"update-browserslist-db\": \"^1.0.13\"\n      },\n      \"bin\": {\n        \"browserslist\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7\"\n      }\n    },\n    \"node_modules/bson\": {\n      \"version\": \"6.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/bson/-/bson-6.5.0.tgz\",\n      \"integrity\": \"sha512-DXf1BTAS8vKyR90BO4x5v3rKVarmkdkzwOrnYDFdjAY694ILNDkmA3uRh1xXJEl+C1DAh8XCvAQ+Gh3kzubtpg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=16.20.1\"\n      }\n    },\n    \"node_modules/busboy\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz\",\n      \"integrity\": \"sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==\",\n      \"dependencies\": {\n        \"streamsearch\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.16.0\"\n      }\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/camelcase-css\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz\",\n      \"integrity\": \"sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/caniuse-lite\": {\n      \"version\": \"1.0.30001603\",\n      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001603.tgz\",\n      \"integrity\": \"sha512-iL2iSS0eDILMb9n5yKQoTBim9jMZ0Yrk8g0N9K7UzYyWnfIKzXBZD5ngpM37ZcL/cv0Mli8XtVMRYMQAfFpi5Q==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/caniuse-lite\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ]\n    },\n    \"node_modules/ccount\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ccount/-/ccount-2.0.1.tgz\",\n      \"integrity\": \"sha512-eyrF0jiFpY+3drT6383f1qhkbGsLSifNAjA61IUjZjmLCWjItY6LB9ft9YhoDgwfmclB2zhu51Lc7+95b8NRAg==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/character-entities\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/character-entities/-/character-entities-2.0.2.tgz\",\n      \"integrity\": \"sha512-shx7oQ0Awen/BRIdkjkvz54PnEEI/EjwXDSIZp86/KKdbafHh1Df/RYGBhn4hbe2+uKC9FnT5UCEdyPz3ai9hQ==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/character-entities-html4\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/character-entities-html4/-/character-entities-html4-2.1.0.tgz\",\n      \"integrity\": \"sha512-1v7fgQRj6hnSwFpq1Eu0ynr/CDEw0rXo2B61qXrLNdHZmPKgb7fqS1a2JwF0rISo9q77jDI8VMEHoApn8qDoZA==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/character-entities-legacy\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/character-entities-legacy/-/character-entities-legacy-1.1.4.tgz\",\n      \"integrity\": \"sha512-3Xnr+7ZFS1uxeiUDvV02wQ+QDbc55o97tIV5zHScSPJpcLm/r0DFPcoY3tYRp+VZukxuMeKgXYmsXQHO05zQeA==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/character-reference-invalid\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/character-reference-invalid/-/character-reference-invalid-1.1.4.tgz\",\n      \"integrity\": \"sha512-mKKUkUbhPpQlCOfIuZkvSEgktjPFIsZKRRbC6KWVEMvlzblj3i3asQv5ODsrwt0N3pHAEvjP8KTQPHkp0+6jOg==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/chokidar/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/ci-info\": {\n      \"version\": \"3.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-3.9.0.tgz\",\n      \"integrity\": \"sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/sibiraj-s\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/classnames\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/classnames/-/classnames-2.5.1.tgz\",\n      \"integrity\": \"sha512-saHYOzhIQs6wy2sVxTM6bUDsQO4F50V9RQ22qBpEdCW+I+/Wmke2HOl6lS6dTpdxVhb88/I6+Hs+438c3lfUow==\"\n    },\n    \"node_modules/client-only\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz\",\n      \"integrity\": \"sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==\"\n    },\n    \"node_modules/color\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/color/-/color-4.2.3.tgz\",\n      \"integrity\": \"sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\",\n        \"color-string\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12.5.0\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\"\n    },\n    \"node_modules/color-string\": {\n      \"version\": \"1.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz\",\n      \"integrity\": \"sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"color-name\": \"^1.0.0\",\n        \"simple-swizzle\": \"^0.2.2\"\n      }\n    },\n    \"node_modules/combined-stream\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n      \"dependencies\": {\n        \"delayed-stream\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/comma-separated-tokens\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/comma-separated-tokens/-/comma-separated-tokens-2.0.3.tgz\",\n      \"integrity\": \"sha512-Fu4hJdvzeylCfQPp9SGWidpzrMs7tTrlu6Vb8XGaRGck8QSNZJJp538Wrb60Lax4fPwR64ViY468OIUTbRlGZg==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/commander\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n      \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\"\n    },\n    \"node_modules/crisp-sdk-web\": {\n      \"version\": \"1.0.22\",\n      \"resolved\": \"https://registry.npmjs.org/crisp-sdk-web/-/crisp-sdk-web-1.0.22.tgz\",\n      \"integrity\": \"sha512-5LakqSr638Cv1J/FuM/RhCGVEaHmrbPpEY14h9GdoEUeNF+jzDhV2KwTVVL5hDwTo5Vhc1J+hprUzgqUv9xH4Q==\"\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/css-selector-tokenizer\": {\n      \"version\": \"0.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/css-selector-tokenizer/-/css-selector-tokenizer-0.8.0.tgz\",\n      \"integrity\": \"sha512-Jd6Ig3/pe62/qe5SBPTN8h8LeUg/pT4lLgtavPf7updwwHpvFzxvOQBHYj2LZDMjUnBzgvIUSjRcf6oT5HzHFg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cssesc\": \"^3.0.0\",\n        \"fastparse\": \"^1.1.2\"\n      }\n    },\n    \"node_modules/cssesc\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz\",\n      \"integrity\": \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"cssesc\": \"bin/cssesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/csstype\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz\",\n      \"integrity\": \"sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==\"\n    },\n    \"node_modules/culori\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/culori/-/culori-3.3.0.tgz\",\n      \"integrity\": \"sha512-pHJg+jbuFsCjz9iclQBqyL3B2HLCBF71BwVNujUYEvCeQMvV97R59MNK3R2+jgJ3a1fcZgI9B3vYgz8lzr/BFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      }\n    },\n    \"node_modules/daisyui\": {\n      \"version\": \"4.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/daisyui/-/daisyui-4.10.1.tgz\",\n      \"integrity\": \"sha512-Ds0Z0Fv+Xf6ZEqV4Q5JIOeKfg83xxnww0Lzid0V94vPtlQ0yYmucEa33zSctsX2VEgBALtmk5zVEqd59pnUbuQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"css-selector-tokenizer\": \"^0.8\",\n        \"culori\": \"^3\",\n        \"picocolors\": \"^1\",\n        \"postcss-js\": \"^4\"\n      },\n      \"engines\": {\n        \"node\": \">=16.9.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/daisyui\"\n      }\n    },\n    \"node_modules/damerau-levenshtein\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.8.tgz\",\n      \"integrity\": \"sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==\"\n    },\n    \"node_modules/data-view-buffer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.1.tgz\",\n      \"integrity\": \"sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/data-view-byte-length\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.1.tgz\",\n      \"integrity\": \"sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/data-view-byte-offset\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.0.tgz\",\n      \"integrity\": \"sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/decode-named-character-reference\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/decode-named-character-reference/-/decode-named-character-reference-1.0.2.tgz\",\n      \"integrity\": \"sha512-O8x12RzrUF8xyVcY0KJowWsmaJxQbmy0/EtnNtHRpsOcT7dFk5W598coHqBVpmWo1oQQfsCqfCmkZN5DJrZVdg==\",\n      \"dependencies\": {\n        \"character-entities\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/deep-is\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\"\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/define-properties\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz\",\n      \"integrity\": \"sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/delayed-stream\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n      \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\",\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/dequal\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz\",\n      \"integrity\": \"sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/detect-libc\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz\",\n      \"integrity\": \"sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==\",\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/didyoumean\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz\",\n      \"integrity\": \"sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==\",\n      \"dev\": true\n    },\n    \"node_modules/diff\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-5.2.0.tgz\",\n      \"integrity\": \"sha512-uIFDxqpRZGZ6ThOk84hEfqWoHx2devRFvpTZcTHur85vImfaxUbTW9Ryh4CpCuDnToOP1CEtXKIgytHBPVff5A==\",\n      \"engines\": {\n        \"node\": \">=0.3.1\"\n      }\n    },\n    \"node_modules/diff-sequences\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz\",\n      \"integrity\": \"sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/dir-glob\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n      \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n      \"dependencies\": {\n        \"path-type\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/dlv\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz\",\n      \"integrity\": \"sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==\",\n      \"dev\": true\n    },\n    \"node_modules/doctrine\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\",\n      \"integrity\": \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\",\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/dotenv\": {\n      \"version\": \"16.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.5.0.tgz\",\n      \"integrity\": \"sha512-m/C+AwOAr9/W1UOIZUo232ejMNnJAJtYQjUbHoNTBNTJSvqzzDh7vnrei3o3r3m9blf6ZoDkvcw0VmozNRFJxg==\",\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://dotenvx.com\"\n      }\n    },\n    \"node_modules/eastasianwidth\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n      \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\",\n      \"dev\": true\n    },\n    \"node_modules/electron-to-chromium\": {\n      \"version\": \"1.4.722\",\n      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.722.tgz\",\n      \"integrity\": \"sha512-5nLE0TWFFpZ80Crhtp4pIp8LXCztjYX41yUcV6b+bKR2PqzjskTMOOlBi1VjBHlvHwS+4gar7kNKOrsbsewEZQ==\",\n      \"dev\": true\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\"\n    },\n    \"node_modules/enhanced-resolve\": {\n      \"version\": \"5.16.0\",\n      \"resolved\": \"https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.16.0.tgz\",\n      \"integrity\": \"sha512-O+QWCviPNSSLAD9Ucn8Awv+poAkqn3T1XY5/N7kR7rQO9yfSGWkYZDwpJ+iKF7B8rxaQKWngSqACpgzeapSyoA==\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.2.4\",\n        \"tapable\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/es-abstract\": {\n      \"version\": \"1.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.3.tgz\",\n      \"integrity\": \"sha512-e+HfNH61Bj1X9/jLc5v1owaLYuHdeHHSQlkhCBiTK8rBvKaULl/beGMxwrMXjpYrv4pz22BlY570vVePA2ho4A==\",\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.1\",\n        \"arraybuffer.prototype.slice\": \"^1.0.3\",\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.7\",\n        \"data-view-buffer\": \"^1.0.1\",\n        \"data-view-byte-length\": \"^1.0.1\",\n        \"data-view-byte-offset\": \"^1.0.0\",\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"es-set-tostringtag\": \"^2.0.3\",\n        \"es-to-primitive\": \"^1.2.1\",\n        \"function.prototype.name\": \"^1.1.6\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"get-symbol-description\": \"^1.0.2\",\n        \"globalthis\": \"^1.0.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\",\n        \"has-proto\": \"^1.0.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.2\",\n        \"internal-slot\": \"^1.0.7\",\n        \"is-array-buffer\": \"^3.0.4\",\n        \"is-callable\": \"^1.2.7\",\n        \"is-data-view\": \"^1.0.1\",\n        \"is-negative-zero\": \"^2.0.3\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.3\",\n        \"is-string\": \"^1.0.7\",\n        \"is-typed-array\": \"^1.1.13\",\n        \"is-weakref\": \"^1.0.2\",\n        \"object-inspect\": \"^1.13.1\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.5\",\n        \"regexp.prototype.flags\": \"^1.5.2\",\n        \"safe-array-concat\": \"^1.1.2\",\n        \"safe-regex-test\": \"^1.0.3\",\n        \"string.prototype.trim\": \"^1.2.9\",\n        \"string.prototype.trimend\": \"^1.0.8\",\n        \"string.prototype.trimstart\": \"^1.0.8\",\n        \"typed-array-buffer\": \"^1.0.2\",\n        \"typed-array-byte-length\": \"^1.0.1\",\n        \"typed-array-byte-offset\": \"^1.0.2\",\n        \"typed-array-length\": \"^1.0.6\",\n        \"unbox-primitive\": \"^1.0.2\",\n        \"which-typed-array\": \"^1.1.15\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-iterator-helpers\": {\n      \"version\": \"1.0.18\",\n      \"resolved\": \"https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.0.18.tgz\",\n      \"integrity\": \"sha512-scxAJaewsahbqTYrGKJihhViaM6DDZDDoucfvzNbK0pOren1g/daDQ3IAhzn+1G14rBG7w+i5N+qul60++zlKA==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-set-tostringtag\": \"^2.0.3\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"globalthis\": \"^1.0.3\",\n        \"has-property-descriptors\": \"^1.0.2\",\n        \"has-proto\": \"^1.0.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"internal-slot\": \"^1.0.7\",\n        \"iterator.prototype\": \"^1.1.2\",\n        \"safe-array-concat\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz\",\n      \"integrity\": \"sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-set-tostringtag\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.0.3.tgz\",\n      \"integrity\": \"sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.4\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"hasown\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-shim-unscopables\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.2.tgz\",\n      \"integrity\": \"sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==\",\n      \"dependencies\": {\n        \"hasown\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/es-to-primitive\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz\",\n      \"integrity\": \"sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==\",\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.4\",\n        \"is-date-object\": \"^1.0.1\",\n        \"is-symbol\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.2.tgz\",\n      \"integrity\": \"sha512-ErCHMCae19vR8vQGe50xIsVomy19rg6gFu3+r3jkEO46suLMWBksvVyoGgQV+jOfl84ZSOSlmv6Gxa89PmTGmA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint\": {\n      \"version\": \"8.47.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.47.0.tgz\",\n      \"integrity\": \"sha512-spUQWrdPt+pRVP1TTJLmfRNJJHHZryFmptzcafwSvHsceV81djHOdnEeDmkdotZyLNjDhrOasNK8nikkoG1O8Q==\",\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n        \"@eslint-community/regexpp\": \"^4.6.1\",\n        \"@eslint/eslintrc\": \"^2.1.2\",\n        \"@eslint/js\": \"^8.47.0\",\n        \"@humanwhocodes/config-array\": \"^0.11.10\",\n        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n        \"@nodelib/fs.walk\": \"^1.2.8\",\n        \"ajv\": \"^6.12.4\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.2.2\",\n        \"eslint-visitor-keys\": \"^3.4.3\",\n        \"espree\": \"^9.6.1\",\n        \"esquery\": \"^1.4.2\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"find-up\": \"^5.0.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"globals\": \"^13.19.0\",\n        \"graphemer\": \"^1.4.0\",\n        \"ignore\": \"^5.2.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"is-path-inside\": \"^3.0.3\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.3\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"text-table\": \"^0.2.0\"\n      },\n      \"bin\": {\n        \"eslint\": \"bin/eslint.js\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-config-next\": {\n      \"version\": \"13.4.19\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-config-next/-/eslint-config-next-13.4.19.tgz\",\n      \"integrity\": \"sha512-WE8367sqMnjhWHvR5OivmfwENRQ1ixfNE9hZwQqNCsd+iM3KnuMc1V8Pt6ytgjxjf23D+xbesADv9x3xaKfT3g==\",\n      \"dependencies\": {\n        \"@next/eslint-plugin-next\": \"13.4.19\",\n        \"@rushstack/eslint-patch\": \"^1.1.3\",\n        \"@typescript-eslint/parser\": \"^5.4.2 || ^6.0.0\",\n        \"eslint-import-resolver-node\": \"^0.3.6\",\n        \"eslint-import-resolver-typescript\": \"^3.5.2\",\n        \"eslint-plugin-import\": \"^2.26.0\",\n        \"eslint-plugin-jsx-a11y\": \"^6.5.1\",\n        \"eslint-plugin-react\": \"^7.31.7\",\n        \"eslint-plugin-react-hooks\": \"^4.5.0 || 5.0.0-canary-7118f5dd7-20230705\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^7.23.0 || ^8.0.0\",\n        \"typescript\": \">=3.3.1\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/eslint-import-resolver-node\": {\n      \"version\": \"0.3.9\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.9.tgz\",\n      \"integrity\": \"sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==\",\n      \"dependencies\": {\n        \"debug\": \"^3.2.7\",\n        \"is-core-module\": \"^2.13.0\",\n        \"resolve\": \"^1.22.4\"\n      }\n    },\n    \"node_modules/eslint-import-resolver-node/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-import-resolver-typescript\": {\n      \"version\": \"3.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-import-resolver-typescript/-/eslint-import-resolver-typescript-3.6.1.tgz\",\n      \"integrity\": \"sha512-xgdptdoi5W3niYeuQxKmzVDTATvLYqhpwmykwsh7f6HIOStGWEIL9iqZgQDF9u9OEzrRwR8no5q2VT+bjAujTg==\",\n      \"dependencies\": {\n        \"debug\": \"^4.3.4\",\n        \"enhanced-resolve\": \"^5.12.0\",\n        \"eslint-module-utils\": \"^2.7.4\",\n        \"fast-glob\": \"^3.3.1\",\n        \"get-tsconfig\": \"^4.5.0\",\n        \"is-core-module\": \"^2.11.0\",\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.18.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/unts/projects/eslint-import-resolver-ts\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"*\",\n        \"eslint-plugin-import\": \"*\"\n      }\n    },\n    \"node_modules/eslint-module-utils\": {\n      \"version\": \"2.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.8.1.tgz\",\n      \"integrity\": \"sha512-rXDXR3h7cs7dy9RNpUlQf80nX31XWJEyGq1tRMo+6GsO5VmTe4UTwtmonAD4ZkAsrfMVDA2wlGJ3790Ys+D49Q==\",\n      \"dependencies\": {\n        \"debug\": \"^3.2.7\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependenciesMeta\": {\n        \"eslint\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/eslint-module-utils/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-import\": {\n      \"version\": \"2.29.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.29.1.tgz\",\n      \"integrity\": \"sha512-BbPC0cuExzhiMo4Ff1BTVwHpjjv28C5R+btTOGaCRC7UEz801up0JadwkeSk5Ued6TG34uaczuVuH6qyy5YUxw==\",\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.7\",\n        \"array.prototype.findlastindex\": \"^1.2.3\",\n        \"array.prototype.flat\": \"^1.3.2\",\n        \"array.prototype.flatmap\": \"^1.3.2\",\n        \"debug\": \"^3.2.7\",\n        \"doctrine\": \"^2.1.0\",\n        \"eslint-import-resolver-node\": \"^0.3.9\",\n        \"eslint-module-utils\": \"^2.8.0\",\n        \"hasown\": \"^2.0.0\",\n        \"is-core-module\": \"^2.13.1\",\n        \"is-glob\": \"^4.0.3\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.fromentries\": \"^2.0.7\",\n        \"object.groupby\": \"^1.0.1\",\n        \"object.values\": \"^1.1.7\",\n        \"semver\": \"^6.3.1\",\n        \"tsconfig-paths\": \"^3.15.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8\"\n      }\n    },\n    \"node_modules/eslint-plugin-import/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-import/node_modules/doctrine\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n      \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eslint-plugin-import/node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/eslint-plugin-jsx-a11y\": {\n      \"version\": \"6.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.8.0.tgz\",\n      \"integrity\": \"sha512-Hdh937BS3KdwwbBaKd5+PLCOmYY6U4f2h9Z2ktwtNKvIdIEu137rjYbcb9ApSbVJfWxANNuiKTD/9tOKjK9qOA==\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.23.2\",\n        \"aria-query\": \"^5.3.0\",\n        \"array-includes\": \"^3.1.7\",\n        \"array.prototype.flatmap\": \"^1.3.2\",\n        \"ast-types-flow\": \"^0.0.8\",\n        \"axe-core\": \"=4.7.0\",\n        \"axobject-query\": \"^3.2.1\",\n        \"damerau-levenshtein\": \"^1.0.8\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"es-iterator-helpers\": \"^1.0.15\",\n        \"hasown\": \"^2.0.0\",\n        \"jsx-ast-utils\": \"^3.3.5\",\n        \"language-tags\": \"^1.0.9\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.entries\": \"^1.1.7\",\n        \"object.fromentries\": \"^2.0.7\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8\"\n      }\n    },\n    \"node_modules/eslint-plugin-react\": {\n      \"version\": \"7.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.34.1.tgz\",\n      \"integrity\": \"sha512-N97CxlouPT1AHt8Jn0mhhN2RrADlUAsk1/atcT2KyA/l9Q/E6ll7OIGwNumFmWfZ9skV3XXccYS19h80rHtgkw==\",\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.7\",\n        \"array.prototype.findlast\": \"^1.2.4\",\n        \"array.prototype.flatmap\": \"^1.3.2\",\n        \"array.prototype.toreversed\": \"^1.1.2\",\n        \"array.prototype.tosorted\": \"^1.1.3\",\n        \"doctrine\": \"^2.1.0\",\n        \"es-iterator-helpers\": \"^1.0.17\",\n        \"estraverse\": \"^5.3.0\",\n        \"jsx-ast-utils\": \"^2.4.1 || ^3.0.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.entries\": \"^1.1.7\",\n        \"object.fromentries\": \"^2.0.7\",\n        \"object.hasown\": \"^1.1.3\",\n        \"object.values\": \"^1.1.7\",\n        \"prop-types\": \"^15.8.1\",\n        \"resolve\": \"^2.0.0-next.5\",\n        \"semver\": \"^6.3.1\",\n        \"string.prototype.matchall\": \"^4.0.10\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8\"\n      }\n    },\n    \"node_modules/eslint-plugin-react-hooks\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-4.6.0.tgz\",\n      \"integrity\": \"sha512-oFc7Itz9Qxh2x4gNHStv3BqJq54ExXmfC+a1NjAta66IAN87Wu0R/QArgIS9qKzX3dXKPI9H5crl9QchNMY9+g==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/doctrine\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n      \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/resolve\": {\n      \"version\": \"2.0.0-next.5\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz\",\n      \"integrity\": \"sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==\",\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/eslint-scope\": {\n      \"version\": \"7.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz\",\n      \"integrity\": \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\",\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/espree\": {\n      \"version\": \"9.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.6.1.tgz\",\n      \"integrity\": \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\",\n      \"dependencies\": {\n        \"acorn\": \"^8.9.0\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.4.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/esquery\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.5.0.tgz\",\n      \"integrity\": \"sha512-YQLXUplAwJgCydQ78IMJywZCceoqk1oH01OERdSAJc/7U2AylwjhSCLDEtqwg811idIS/9fIU5GjG73IgjKMVg==\",\n      \"dependencies\": {\n        \"estraverse\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n      \"dependencies\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estree-util-attach-comments\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/estree-util-attach-comments/-/estree-util-attach-comments-2.1.1.tgz\",\n      \"integrity\": \"sha512-+5Ba/xGGS6mnwFbXIuQiDPTbuTxuMCooq3arVv7gPZtYpjp+VXH/NkHAP35OOefPhNG/UGqU3vt/LTABwcHX0w==\",\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/estree-util-build-jsx\": {\n      \"version\": \"2.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/estree-util-build-jsx/-/estree-util-build-jsx-2.2.2.tgz\",\n      \"integrity\": \"sha512-m56vOXcOBuaF+Igpb9OPAy7f9w9OIkb5yhjsZuaPm7HoGi4oTOQi0h2+yZ+AtKklYFZ+rPC4n0wYCJCEU1ONqg==\",\n      \"dependencies\": {\n        \"@types/estree-jsx\": \"^1.0.0\",\n        \"estree-util-is-identifier-name\": \"^2.0.0\",\n        \"estree-walker\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/estree-util-is-identifier-name\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/estree-util-is-identifier-name/-/estree-util-is-identifier-name-2.1.0.tgz\",\n      \"integrity\": \"sha512-bEN9VHRyXAUOjkKVQVvArFym08BTWB0aJPppZZr0UNyAqWsLaVfAqP7hbaTJjzHifmB5ebnR8Wm7r7yGN/HonQ==\",\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/estree-util-to-js\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/estree-util-to-js/-/estree-util-to-js-1.2.0.tgz\",\n      \"integrity\": \"sha512-IzU74r1PK5IMMGZXUVZbmiu4A1uhiPgW5hm1GjcOfr4ZzHaMPpLNJjR7HjXiIOzi25nZDrgFTobHTkV5Q6ITjA==\",\n      \"dependencies\": {\n        \"@types/estree-jsx\": \"^1.0.0\",\n        \"astring\": \"^1.8.0\",\n        \"source-map\": \"^0.7.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/estree-util-visit\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/estree-util-visit/-/estree-util-visit-1.2.1.tgz\",\n      \"integrity\": \"sha512-xbgqcrkIVbIG+lI/gzbvd9SGTJL4zqJKBFttUl5pP27KhAjtMKbX/mQXJ7qgyXpMgVy/zvpm0xoQQaGL8OloOw==\",\n      \"dependencies\": {\n        \"@types/estree-jsx\": \"^1.0.0\",\n        \"@types/unist\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/estree-walker\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz\",\n      \"integrity\": \"sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==\",\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/expect\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/expect/-/expect-29.7.0.tgz\",\n      \"integrity\": \"sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/expect-utils\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-matcher-utils\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/extend\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.2.tgz\",\n      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\"\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\"\n    },\n    \"node_modules/fast-glob\": {\n      \"version\": \"3.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz\",\n      \"integrity\": \"sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==\",\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"^2.0.2\",\n        \"@nodelib/fs.walk\": \"^1.2.3\",\n        \"glob-parent\": \"^5.1.2\",\n        \"merge2\": \"^1.3.0\",\n        \"micromatch\": \"^4.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6.0\"\n      }\n    },\n    \"node_modules/fast-glob/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\"\n    },\n    \"node_modules/fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\"\n    },\n    \"node_modules/fastparse\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/fastparse/-/fastparse-1.1.2.tgz\",\n      \"integrity\": \"sha512-483XLLxTVIwWK3QTrMGRqUfUpoOs/0hbQrl2oz4J0pAcm3A3bu84wxTFqGqkJzewCLdME38xJLJAxBABfQT8sQ==\",\n      \"dev\": true\n    },\n    \"node_modules/fastq\": {\n      \"version\": \"1.17.1\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.17.1.tgz\",\n      \"integrity\": \"sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==\",\n      \"dependencies\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"node_modules/fault\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/fault/-/fault-1.0.4.tgz\",\n      \"integrity\": \"sha512-CJ0HCB5tL5fYTEA7ToAq5+kTwd++Borf1/bifxd9iT70QcXr4MRrO3Llf8Ifs70q+SJcGHFtnIE/Nw6giCtECA==\",\n      \"dependencies\": {\n        \"format\": \"^0.2.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\",\n      \"integrity\": \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\",\n      \"dependencies\": {\n        \"flat-cache\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dependencies\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/flat-cache\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz\",\n      \"integrity\": \"sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==\",\n      \"dependencies\": {\n        \"flatted\": \"^3.2.9\",\n        \"keyv\": \"^4.5.3\",\n        \"rimraf\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.3.1.tgz\",\n      \"integrity\": \"sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==\"\n    },\n    \"node_modules/follow-redirects\": {\n      \"version\": \"1.15.6\",\n      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.6.tgz\",\n      \"integrity\": \"sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\",\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://github.com/sponsors/RubenVerborgh\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \">=4.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"debug\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/for-each\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz\",\n      \"integrity\": \"sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==\",\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.3\"\n      }\n    },\n    \"node_modules/foreground-child\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.1.1.tgz\",\n      \"integrity\": \"sha512-TMKDUnIte6bfb5nWv7V/caI169OHgvwjb7V4WkeUvbQQdjr5rWKqHFiKWb/fcOwB+CzBT+qbWjvj+DVwRskpIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"signal-exit\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/form-data\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz\",\n      \"integrity\": \"sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==\",\n      \"dependencies\": {\n        \"asynckit\": \"^0.4.0\",\n        \"combined-stream\": \"^1.0.8\",\n        \"mime-types\": \"^2.1.12\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/format\": {\n      \"version\": \"0.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/format/-/format-0.2.2.tgz\",\n      \"integrity\": \"sha512-wzsgA6WOq+09wrU1tsJ09udeR/YZRaeArL9e1wPbFg3GG2yDnC2ldKpxs4xunpFF9DgqCqOIra3bc1HWrJ37Ww==\",\n      \"engines\": {\n        \"node\": \">=0.4.x\"\n      }\n    },\n    \"node_modules/fraction.js\": {\n      \"version\": \"4.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz\",\n      \"integrity\": \"sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"type\": \"patreon\",\n        \"url\": \"https://github.com/sponsors/rawify\"\n      }\n    },\n    \"node_modules/framer-motion\": {\n      \"version\": \"12.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/framer-motion/-/framer-motion-12.10.1.tgz\",\n      \"integrity\": \"sha512-g+fANUVC17SzQc6eA0CtomBW4n67ckhS2hq5fjkKZneKzv7sbdXK3zzjnnAKB22Ck+Qhh+IlO5RjHNKULsq99Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"motion-dom\": \"^12.10.1\",\n        \"motion-utils\": \"^12.9.4\",\n        \"tslib\": \"^2.4.0\"\n      },\n      \"peerDependencies\": {\n        \"@emotion/is-prop-valid\": \"*\",\n        \"react\": \"^18.0.0 || ^19.0.0\",\n        \"react-dom\": \"^18.0.0 || ^19.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@emotion/is-prop-valid\": {\n          \"optional\": true\n        },\n        \"react\": {\n          \"optional\": true\n        },\n        \"react-dom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/fs-extra\": {\n      \"version\": \"11.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-11.3.0.tgz\",\n      \"integrity\": \"sha512-Z4XaCL6dUDHfP/jT25jJKMmtxvuwbkrD1vNSMFlo9lNLY2c5FHYSQgHPRZUjAB26TpDEoW9HCOgplrdbaPV/ew==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.2.0\",\n        \"jsonfile\": \"^6.0.1\",\n        \"universalify\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14.14\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\"\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/function.prototype.name\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.6.tgz\",\n      \"integrity\": \"sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"functions-have-names\": \"^1.2.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functions-have-names\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz\",\n      \"integrity\": \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-symbol-description\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.2.tgz\",\n      \"integrity\": \"sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-tsconfig\": {\n      \"version\": \"4.7.3\",\n      \"resolved\": \"https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.7.3.tgz\",\n      \"integrity\": \"sha512-ZvkrzoUA0PQZM6fy6+/Hce561s+faD1rsNwhnO5FelNjyy7EMGJ3Rz1AQ8GYDWjhRs/7dBLOEJvhK8MiEJOAFg==\",\n      \"dependencies\": {\n        \"resolve-pkg-maps\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/privatenumber/get-tsconfig?sponsor=1\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.7.tgz\",\n      \"integrity\": \"sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/globals\": {\n      \"version\": \"13.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.24.0.tgz\",\n      \"integrity\": \"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\",\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/globalthis\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/globalthis/-/globalthis-1.0.3.tgz\",\n      \"integrity\": \"sha512-sFdI5LyBiNTHjRd7cGPWapiHWMOXKyuBNX/cWJ3NfzrZQVa8GI/8cofCl74AOVqq9W5kNmguTIzJ/1s2gyI9wA==\",\n      \"dependencies\": {\n        \"define-properties\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/globby\": {\n      \"version\": \"11.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.1.0.tgz\",\n      \"integrity\": \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\",\n      \"dependencies\": {\n        \"array-union\": \"^2.1.0\",\n        \"dir-glob\": \"^3.0.1\",\n        \"fast-glob\": \"^3.2.9\",\n        \"ignore\": \"^5.2.0\",\n        \"merge2\": \"^1.4.1\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/goober\": {\n      \"version\": \"2.1.14\",\n      \"resolved\": \"https://registry.npmjs.org/goober/-/goober-2.1.14.tgz\",\n      \"integrity\": \"sha512-4UpC0NdGyAFqLNPnhCT2iHpza2q+RAY3GV85a/mRPdzyPQMsj0KmMMuetdIkzWRbJ+Hgau1EZztq8ImmiMGhsg==\",\n      \"peerDependencies\": {\n        \"csstype\": \"^3.0.10\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\"\n    },\n    \"node_modules/graphemer\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz\",\n      \"integrity\": \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\"\n    },\n    \"node_modules/has-bigints\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz\",\n      \"integrity\": \"sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-tostringtag\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz\",\n      \"integrity\": \"sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==\",\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/hast-util-parse-selector\": {\n      \"version\": \"2.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/hast-util-parse-selector/-/hast-util-parse-selector-2.2.5.tgz\",\n      \"integrity\": \"sha512-7j6mrk/qqkSehsM92wQjdIgWM2/BW61u/53G6xmC8i1OmEdKLHbk419QKQUjz6LglWsfqoiHmyMRkP1BGjecNQ==\",\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/hast-util-to-estree\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/hast-util-to-estree/-/hast-util-to-estree-2.3.3.tgz\",\n      \"integrity\": \"sha512-ihhPIUPxN0v0w6M5+IiAZZrn0LH2uZomeWwhn7uP7avZC6TE7lIiEh2yBMPr5+zi1aUCXq6VoYRgs2Bw9xmycQ==\",\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\",\n        \"@types/estree-jsx\": \"^1.0.0\",\n        \"@types/hast\": \"^2.0.0\",\n        \"@types/unist\": \"^2.0.0\",\n        \"comma-separated-tokens\": \"^2.0.0\",\n        \"estree-util-attach-comments\": \"^2.0.0\",\n        \"estree-util-is-identifier-name\": \"^2.0.0\",\n        \"hast-util-whitespace\": \"^2.0.0\",\n        \"mdast-util-mdx-expression\": \"^1.0.0\",\n        \"mdast-util-mdxjs-esm\": \"^1.0.0\",\n        \"property-information\": \"^6.0.0\",\n        \"space-separated-tokens\": \"^2.0.0\",\n        \"style-to-object\": \"^0.4.1\",\n        \"unist-util-position\": \"^4.0.0\",\n        \"zwitch\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/hast-util-whitespace\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/hast-util-whitespace/-/hast-util-whitespace-2.0.1.tgz\",\n      \"integrity\": \"sha512-nAxA0v8+vXSBDt3AnRUNjyRIQ0rD+ntpbAp4LnPkumc5M9yUbSMa4XDU9Q6etY4f1Wp4bNgvc1yjiZtsTTrSng==\",\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/hastscript\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/hastscript/-/hastscript-6.0.0.tgz\",\n      \"integrity\": \"sha512-nDM6bvd7lIqDUiYEiu5Sl/+6ReP0BMk/2f4U/Rooccxkj0P5nm+acM5PrGJ/t5I8qPGiqZSE6hVAwZEdZIvP4w==\",\n      \"dependencies\": {\n        \"@types/hast\": \"^2.0.0\",\n        \"comma-separated-tokens\": \"^1.0.0\",\n        \"hast-util-parse-selector\": \"^2.0.0\",\n        \"property-information\": \"^5.0.0\",\n        \"space-separated-tokens\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/hastscript/node_modules/comma-separated-tokens\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/comma-separated-tokens/-/comma-separated-tokens-1.0.8.tgz\",\n      \"integrity\": \"sha512-GHuDRO12Sypu2cV70d1dkA2EUmXHgntrzbpvOB+Qy+49ypNfGgFQIC2fhhXbnyrJRynDCAARsT7Ou0M6hirpfw==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/hastscript/node_modules/property-information\": {\n      \"version\": \"5.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/property-information/-/property-information-5.6.0.tgz\",\n      \"integrity\": \"sha512-YUHSPk+A30YPv+0Qf8i9Mbfe/C0hdPXk1s1jPVToV8pk8BQtpw10ct89Eo7OWkutrwqvT0eicAxlOg3dOAu8JA==\",\n      \"dependencies\": {\n        \"xtend\": \"^4.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/hastscript/node_modules/space-separated-tokens\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/space-separated-tokens/-/space-separated-tokens-1.1.5.tgz\",\n      \"integrity\": \"sha512-q/JSVd1Lptzhf5bkYm4ob4iWPjx0KiRe3sRFBNrVqbJkFaBm5vbbowy1mymoPNLRa52+oadOhJ+K49wsSeSjTA==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/highlight.js\": {\n      \"version\": \"10.7.3\",\n      \"resolved\": \"https://registry.npmjs.org/highlight.js/-/highlight.js-10.7.3.tgz\",\n      \"integrity\": \"sha512-tzcUFauisWKNHaRkN4Wjl/ZA07gENAjFl3J/c480dprkGTg5EQstgaNFqBfUqCq54kZRIEcreTsAgF/m2quD7A==\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.3.1.tgz\",\n      \"integrity\": \"sha512-5Fytz/IraMjqpwfd34ke28PTVMjZjJG2MPn5t7OE4eUCUNf8BAa7b5WUS9/Qvr6mwOQS7Mk6vdsMno5he+T8Xw==\",\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n      \"dependencies\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n      \"engines\": {\n        \"node\": \">=0.8.19\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n    },\n    \"node_modules/inline-style-parser\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/inline-style-parser/-/inline-style-parser-0.1.1.tgz\",\n      \"integrity\": \"sha512-7NXolsK4CAS5+xvdj5OMMbI962hU/wvwoxk+LWR9Ek9bVtyuuYScDN6eS0rUm6TxApFpw7CX1o4uJzcd4AyD3Q==\"\n    },\n    \"node_modules/internal-slot\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.7.tgz\",\n      \"integrity\": \"sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"hasown\": \"^2.0.0\",\n        \"side-channel\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/is-alphabetical\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-alphabetical/-/is-alphabetical-1.0.4.tgz\",\n      \"integrity\": \"sha512-DwzsA04LQ10FHTZuL0/grVDk4rFoVH1pjAToYwBrHSxcrBIGQuXrQMtD5U1b0U2XVgKZCTLLP8u2Qxqhy3l2Vg==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/is-alphanumerical\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-alphanumerical/-/is-alphanumerical-1.0.4.tgz\",\n      \"integrity\": \"sha512-UzoZUr+XfVz3t3v4KyGEniVL9BDRoQtY7tOyrRybkVNjDFWyo1yhXNGrrBTQxp3ib9BLAWs7k2YKBQsFRkZG9A==\",\n      \"dependencies\": {\n        \"is-alphabetical\": \"^1.0.0\",\n        \"is-decimal\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/is-array-buffer\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.4.tgz\",\n      \"integrity\": \"sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-arrayish\": {\n      \"version\": \"0.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz\",\n      \"integrity\": \"sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==\",\n      \"license\": \"MIT\",\n      \"optional\": true\n    },\n    \"node_modules/is-async-function\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-async-function/-/is-async-function-2.0.0.tgz\",\n      \"integrity\": \"sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-bigint\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz\",\n      \"integrity\": \"sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==\",\n      \"dependencies\": {\n        \"has-bigints\": \"^1.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-boolean-object\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz\",\n      \"integrity\": \"sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-buffer\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.5.tgz\",\n      \"integrity\": \"sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/is-callable\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz\",\n      \"integrity\": \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\n      \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\n      \"dependencies\": {\n        \"hasown\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-data-view\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.1.tgz\",\n      \"integrity\": \"sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==\",\n      \"dependencies\": {\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-date-object\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz\",\n      \"integrity\": \"sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-decimal\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-decimal/-/is-decimal-1.0.4.tgz\",\n      \"integrity\": \"sha512-RGdriMmQQvZ2aqaQq3awNA6dCGtKpiDFcOzrTWrDAT2MiWrKQVPmxLGHl7Y2nNu6led0kEyoX0enY0qXYsv9zw==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-finalizationregistry\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.0.2.tgz\",\n      \"integrity\": \"sha512-0by5vtUJs8iFQb5TYUHHPudOR+qXYIMKtiUzvLIZITZUjknFmziyBJuLhVRc+Ds0dREFlskDNJKYIdIzu/9pfw==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-generator-function\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.0.10.tgz\",\n      \"integrity\": \"sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-hexadecimal\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-hexadecimal/-/is-hexadecimal-1.0.4.tgz\",\n      \"integrity\": \"sha512-gyPJuv83bHMpocVYoqof5VDiZveEoGoFL8m3BXNb2VW8Xs+rz9kqO8LOQ5DH6EsuvilT1ApazU0pyl+ytbPtlw==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/is-map\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz\",\n      \"integrity\": \"sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-negative-zero\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz\",\n      \"integrity\": \"sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-number-object\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz\",\n      \"integrity\": \"sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-path-inside\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-plain-obj\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-4.1.0.tgz\",\n      \"integrity\": \"sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-reference\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-reference/-/is-reference-3.0.2.tgz\",\n      \"integrity\": \"sha512-v3rht/LgVcsdZa3O2Nqs+NMowLOxeOm7Ay9+/ARQ2F+qEoANRcqrjAZKGN0v8ymUetZGgkp26LTnGT7H0Qo9Pg==\",\n      \"dependencies\": {\n        \"@types/estree\": \"*\"\n      }\n    },\n    \"node_modules/is-regex\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz\",\n      \"integrity\": \"sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-set\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz\",\n      \"integrity\": \"sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-shared-array-buffer\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.3.tgz\",\n      \"integrity\": \"sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-string\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz\",\n      \"integrity\": \"sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-symbol\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz\",\n      \"integrity\": \"sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==\",\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-typed-array\": {\n      \"version\": \"1.1.13\",\n      \"resolved\": \"https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.13.tgz\",\n      \"integrity\": \"sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==\",\n      \"dependencies\": {\n        \"which-typed-array\": \"^1.1.14\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakmap\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz\",\n      \"integrity\": \"sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakref\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz\",\n      \"integrity\": \"sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakset\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.3.tgz\",\n      \"integrity\": \"sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz\",\n      \"integrity\": \"sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\"\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\"\n    },\n    \"node_modules/iterator.prototype\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.2.tgz\",\n      \"integrity\": \"sha512-DR33HMMr8EzwuRL8Y9D3u2BMj8+RqSE850jfGu59kS7tbmPLzGkZmVSfyCFSDxuZiEY6Rzt3T2NA/qU+NwVj1w==\",\n      \"dependencies\": {\n        \"define-properties\": \"^1.2.1\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"reflect.getprototypeof\": \"^1.0.4\",\n        \"set-function-name\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/jackspeak\": {\n      \"version\": \"2.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-2.3.6.tgz\",\n      \"integrity\": \"sha512-N3yCS/NegsOBokc8GAdM8UcmfsKiSS8cipheD/nivzr700H+nsMOxJjQnvwOcRYVuFkdH0wGUvW2WbXGmrZGbQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@isaacs/cliui\": \"^8.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      },\n      \"optionalDependencies\": {\n        \"@pkgjs/parseargs\": \"^0.11.0\"\n      }\n    },\n    \"node_modules/jest-diff\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-diff/-/jest-diff-29.7.0.tgz\",\n      \"integrity\": \"sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"diff-sequences\": \"^29.6.3\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-get-type\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/jest-get-type/-/jest-get-type-29.6.3.tgz\",\n      \"integrity\": \"sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-29.7.0.tgz\",\n      \"integrity\": \"sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"jest-diff\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-message-util\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-message-util/-/jest-message-util-29.7.0.tgz\",\n      \"integrity\": \"sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.12.13\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/stack-utils\": \"^2.0.0\",\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"micromatch\": \"^4.0.4\",\n        \"pretty-format\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"stack-utils\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-util\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\",\n      \"integrity\": \"sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"picomatch\": \"^2.2.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jiti\": {\n      \"version\": \"1.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/jiti/-/jiti-1.21.0.tgz\",\n      \"integrity\": \"sha512-gFqAIbuKyyso/3G2qhiO2OM6shY6EPP/R0+mkDbyspxKazh8BXDC5FiFsUjlczgdNz/vfra0da2y+aHrusLG/Q==\",\n      \"dev\": true,\n      \"bin\": {\n        \"jiti\": \"bin/jiti.js\"\n      }\n    },\n    \"node_modules/jose\": {\n      \"version\": \"4.15.5\",\n      \"resolved\": \"https://registry.npmjs.org/jose/-/jose-4.15.5.tgz\",\n      \"integrity\": \"sha512-jc7BFxgKPKi94uOvEmzlSWFFe2+vASyXaKUpdQKatWAESU2MWjDfFf0fdfc83CDKcA5QecabZeNLyfhe3yKNkg==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/panva\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/json-buffer\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz\",\n      \"integrity\": \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\"\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\"\n    },\n    \"node_modules/json-stable-stringify-without-jsonify\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\",\n      \"integrity\": \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\"\n    },\n    \"node_modules/json5\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.2.tgz\",\n      \"integrity\": \"sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==\",\n      \"dependencies\": {\n        \"minimist\": \"^1.2.0\"\n      },\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      }\n    },\n    \"node_modules/jsonfile\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\",\n      \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"universalify\": \"^2.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"graceful-fs\": \"^4.1.6\"\n      }\n    },\n    \"node_modules/jsx-ast-utils\": {\n      \"version\": \"3.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz\",\n      \"integrity\": \"sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==\",\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.flat\": \"^1.3.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"object.values\": \"^1.1.6\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/kareem\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/kareem/-/kareem-2.5.1.tgz\",\n      \"integrity\": \"sha512-7jFxRVm+jD+rkq3kY0iZDJfsO2/t4BBPeEb2qKn2lR/9KhuksYk5hxzfRYWMPV8P/x2d0kHD306YyWLzjjH+uA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/keyv\": {\n      \"version\": \"4.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz\",\n      \"integrity\": \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\",\n      \"dependencies\": {\n        \"json-buffer\": \"3.0.1\"\n      }\n    },\n    \"node_modules/kleur\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/kleur/-/kleur-4.1.5.tgz\",\n      \"integrity\": \"sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/language-subtag-registry\": {\n      \"version\": \"0.3.22\",\n      \"resolved\": \"https://registry.npmjs.org/language-subtag-registry/-/language-subtag-registry-0.3.22.tgz\",\n      \"integrity\": \"sha512-tN0MCzyWnoz/4nHS6uxdlFWoUZT7ABptwKPQ52Ea7URk6vll88bWBVhodtnlfEuCcKWNGoc+uGbw1cwa9IKh/w==\"\n    },\n    \"node_modules/language-tags\": {\n      \"version\": \"1.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/language-tags/-/language-tags-1.0.9.tgz\",\n      \"integrity\": \"sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==\",\n      \"dependencies\": {\n        \"language-subtag-registry\": \"^0.3.20\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/levn\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n      \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/lilconfig\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-2.1.0.tgz\",\n      \"integrity\": \"sha512-utWOt/GHzuUxnLKxB6dk81RoOeoNeHgbrXiuGk4yyF5qlRz+iIVWu56E2fqGHFrXz0QNUhLB/8nKqvRH66JKGQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/lines-and-columns\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\",\n      \"dev\": true\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dependencies\": {\n        \"p-locate\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/lodash.merge\": {\n      \"version\": \"4.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\",\n      \"integrity\": \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\"\n    },\n    \"node_modules/longest-streak\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/longest-streak/-/longest-streak-3.1.0.tgz\",\n      \"integrity\": \"sha512-9Ri+o0JYgehTaVBBDoMqIl8GXtbWg711O3srftcHhZ0dqnETqLaoIK0x17fUw9rFSlK/0NlsKe0Ahhyl5pXE2g==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/loose-envify\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz\",\n      \"integrity\": \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\",\n      \"dependencies\": {\n        \"js-tokens\": \"^3.0.0 || ^4.0.0\"\n      },\n      \"bin\": {\n        \"loose-envify\": \"cli.js\"\n      }\n    },\n    \"node_modules/lowlight\": {\n      \"version\": \"1.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/lowlight/-/lowlight-1.20.0.tgz\",\n      \"integrity\": \"sha512-8Ktj+prEb1RoCPkEOrPMYUN/nCggB7qAWe3a7OpMjWQkh3l2RD5wKRQ+o8Q8YuI9RG/xs95waaI/E6ym/7NsTw==\",\n      \"dependencies\": {\n        \"fault\": \"^1.0.0\",\n        \"highlight.js\": \"~10.7.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/mailgun.js\": {\n      \"version\": \"9.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/mailgun.js/-/mailgun.js-9.4.1.tgz\",\n      \"integrity\": \"sha512-PUXZvSR6MImDHIf/EhF7uajkv2pP0fbwVfKnRCQ2xDO8uR731U6pWkGHscUxebDkU8tsLb+0zCH5t1+KP6cX3g==\",\n      \"dependencies\": {\n        \"axios\": \"^1.6.0\",\n        \"base-64\": \"^1.0.0\",\n        \"url-join\": \"^4.0.1\"\n      }\n    },\n    \"node_modules/markdown-extensions\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/markdown-extensions/-/markdown-extensions-1.1.1.tgz\",\n      \"integrity\": \"sha512-WWC0ZuMzCyDHYCasEGs4IPvLyTGftYwh6wIEOULOF0HXcqZlhwRzrK0w2VUlxWA98xnvb/jszw4ZSkJ6ADpM6Q==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/mdast-util-definitions\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-definitions/-/mdast-util-definitions-5.1.2.tgz\",\n      \"integrity\": \"sha512-8SVPMuHqlPME/z3gqVwWY4zVXn8lqKv/pAhC57FuJ40ImXyBpmO5ukh98zB2v7Blql2FiHjHv9LVztSIqjY+MA==\",\n      \"dependencies\": {\n        \"@types/mdast\": \"^3.0.0\",\n        \"@types/unist\": \"^2.0.0\",\n        \"unist-util-visit\": \"^4.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-from-markdown\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-from-markdown/-/mdast-util-from-markdown-1.3.1.tgz\",\n      \"integrity\": \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\",\n      \"dependencies\": {\n        \"@types/mdast\": \"^3.0.0\",\n        \"@types/unist\": \"^2.0.0\",\n        \"decode-named-character-reference\": \"^1.0.0\",\n        \"mdast-util-to-string\": \"^3.1.0\",\n        \"micromark\": \"^3.0.0\",\n        \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\",\n        \"micromark-util-decode-string\": \"^1.0.0\",\n        \"micromark-util-normalize-identifier\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\",\n        \"unist-util-stringify-position\": \"^3.0.0\",\n        \"uvu\": \"^0.5.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-mdx\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-mdx/-/mdast-util-mdx-2.0.1.tgz\",\n      \"integrity\": \"sha512-38w5y+r8nyKlGvNjSEqWrhG0w5PmnRA+wnBvm+ulYCct7nsGYhFVb0lljS9bQav4psDAS1eGkP2LMVcZBi/aqw==\",\n      \"dependencies\": {\n        \"mdast-util-from-markdown\": \"^1.0.0\",\n        \"mdast-util-mdx-expression\": \"^1.0.0\",\n        \"mdast-util-mdx-jsx\": \"^2.0.0\",\n        \"mdast-util-mdxjs-esm\": \"^1.0.0\",\n        \"mdast-util-to-markdown\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-mdx-expression\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-mdx-expression/-/mdast-util-mdx-expression-1.3.2.tgz\",\n      \"integrity\": \"sha512-xIPmR5ReJDu/DHH1OoIT1HkuybIfRGYRywC+gJtI7qHjCJp/M9jrmBEJW22O8lskDWm562BX2W8TiAwRTb0rKA==\",\n      \"dependencies\": {\n        \"@types/estree-jsx\": \"^1.0.0\",\n        \"@types/hast\": \"^2.0.0\",\n        \"@types/mdast\": \"^3.0.0\",\n        \"mdast-util-from-markdown\": \"^1.0.0\",\n        \"mdast-util-to-markdown\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-mdx-jsx\": {\n      \"version\": \"2.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-mdx-jsx/-/mdast-util-mdx-jsx-2.1.4.tgz\",\n      \"integrity\": \"sha512-DtMn9CmVhVzZx3f+optVDF8yFgQVt7FghCRNdlIaS3X5Bnym3hZwPbg/XW86vdpKjlc1PVj26SpnLGeJBXD3JA==\",\n      \"dependencies\": {\n        \"@types/estree-jsx\": \"^1.0.0\",\n        \"@types/hast\": \"^2.0.0\",\n        \"@types/mdast\": \"^3.0.0\",\n        \"@types/unist\": \"^2.0.0\",\n        \"ccount\": \"^2.0.0\",\n        \"mdast-util-from-markdown\": \"^1.1.0\",\n        \"mdast-util-to-markdown\": \"^1.3.0\",\n        \"parse-entities\": \"^4.0.0\",\n        \"stringify-entities\": \"^4.0.0\",\n        \"unist-util-remove-position\": \"^4.0.0\",\n        \"unist-util-stringify-position\": \"^3.0.0\",\n        \"vfile-message\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-mdx-jsx/node_modules/character-entities-legacy\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/character-entities-legacy/-/character-entities-legacy-3.0.0.tgz\",\n      \"integrity\": \"sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/mdast-util-mdx-jsx/node_modules/character-reference-invalid\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/character-reference-invalid/-/character-reference-invalid-2.0.1.tgz\",\n      \"integrity\": \"sha512-iBZ4F4wRbyORVsu0jPV7gXkOsGYjGHPmAyv+HiHG8gi5PtC9KI2j1+v8/tlibRvjoWX027ypmG/n0HtO5t7unw==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/mdast-util-mdx-jsx/node_modules/is-alphabetical\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-alphabetical/-/is-alphabetical-2.0.1.tgz\",\n      \"integrity\": \"sha512-FWyyY60MeTNyeSRpkM2Iry0G9hpr7/9kD40mD/cGQEuilcZYS4okz8SN2Q6rLCJ8gbCt6fN+rC+6tMGS99LaxQ==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/mdast-util-mdx-jsx/node_modules/is-alphanumerical\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-alphanumerical/-/is-alphanumerical-2.0.1.tgz\",\n      \"integrity\": \"sha512-hmbYhX/9MUMF5uh7tOXyK/n0ZvWpad5caBA17GsC6vyuCqaWliRG5K1qS9inmUhEMaOBIW7/whAnSwveW/LtZw==\",\n      \"dependencies\": {\n        \"is-alphabetical\": \"^2.0.0\",\n        \"is-decimal\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/mdast-util-mdx-jsx/node_modules/is-decimal\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-decimal/-/is-decimal-2.0.1.tgz\",\n      \"integrity\": \"sha512-AAB9hiomQs5DXWcRB1rqsxGUstbRroFOPPVAomNk/3XHR5JyEZChOyTWe2oayKnsSsr/kcGqF+z6yuH6HHpN0A==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/mdast-util-mdx-jsx/node_modules/is-hexadecimal\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-hexadecimal/-/is-hexadecimal-2.0.1.tgz\",\n      \"integrity\": \"sha512-DgZQp241c8oO6cA1SbTEWiXeoxV42vlcJxgH+B3hi1AiqqKruZR3ZGF8In3fj4+/y/7rHvlOZLZtgJ/4ttYGZg==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/mdast-util-mdx-jsx/node_modules/parse-entities\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/parse-entities/-/parse-entities-4.0.1.tgz\",\n      \"integrity\": \"sha512-SWzvYcSJh4d/SGLIOQfZ/CoNv6BTlI6YEQ7Nj82oDVnRpwe/Z/F1EMx42x3JAOwGBlCjeCH0BRJQbQ/opHL17w==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"character-entities\": \"^2.0.0\",\n        \"character-entities-legacy\": \"^3.0.0\",\n        \"character-reference-invalid\": \"^2.0.0\",\n        \"decode-named-character-reference\": \"^1.0.0\",\n        \"is-alphanumerical\": \"^2.0.0\",\n        \"is-decimal\": \"^2.0.0\",\n        \"is-hexadecimal\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/mdast-util-mdxjs-esm\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-mdxjs-esm/-/mdast-util-mdxjs-esm-1.3.1.tgz\",\n      \"integrity\": \"sha512-SXqglS0HrEvSdUEfoXFtcg7DRl7S2cwOXc7jkuusG472Mmjag34DUDeOJUZtl+BVnyeO1frIgVpHlNRWc2gk/w==\",\n      \"dependencies\": {\n        \"@types/estree-jsx\": \"^1.0.0\",\n        \"@types/hast\": \"^2.0.0\",\n        \"@types/mdast\": \"^3.0.0\",\n        \"mdast-util-from-markdown\": \"^1.0.0\",\n        \"mdast-util-to-markdown\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-phrasing\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-phrasing/-/mdast-util-phrasing-3.0.1.tgz\",\n      \"integrity\": \"sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==\",\n      \"dependencies\": {\n        \"@types/mdast\": \"^3.0.0\",\n        \"unist-util-is\": \"^5.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-to-hast\": {\n      \"version\": \"12.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-to-hast/-/mdast-util-to-hast-12.3.0.tgz\",\n      \"integrity\": \"sha512-pits93r8PhnIoU4Vy9bjW39M2jJ6/tdHyja9rrot9uujkN7UTU9SDnE6WNJz/IGyQk3XHX6yNNtrBH6cQzm8Hw==\",\n      \"dependencies\": {\n        \"@types/hast\": \"^2.0.0\",\n        \"@types/mdast\": \"^3.0.0\",\n        \"mdast-util-definitions\": \"^5.0.0\",\n        \"micromark-util-sanitize-uri\": \"^1.1.0\",\n        \"trim-lines\": \"^3.0.0\",\n        \"unist-util-generated\": \"^2.0.0\",\n        \"unist-util-position\": \"^4.0.0\",\n        \"unist-util-visit\": \"^4.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-to-markdown\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-to-markdown/-/mdast-util-to-markdown-1.5.0.tgz\",\n      \"integrity\": \"sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==\",\n      \"dependencies\": {\n        \"@types/mdast\": \"^3.0.0\",\n        \"@types/unist\": \"^2.0.0\",\n        \"longest-streak\": \"^3.0.0\",\n        \"mdast-util-phrasing\": \"^3.0.0\",\n        \"mdast-util-to-string\": \"^3.0.0\",\n        \"micromark-util-decode-string\": \"^1.0.0\",\n        \"unist-util-visit\": \"^4.0.0\",\n        \"zwitch\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-to-string\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-to-string/-/mdast-util-to-string-3.2.0.tgz\",\n      \"integrity\": \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\",\n      \"dependencies\": {\n        \"@types/mdast\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/memory-pager\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz\",\n      \"integrity\": \"sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==\",\n      \"dev\": true\n    },\n    \"node_modules/merge2\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n      \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/micromark\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark/-/micromark-3.2.0.tgz\",\n      \"integrity\": \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"@types/debug\": \"^4.0.0\",\n        \"debug\": \"^4.0.0\",\n        \"decode-named-character-reference\": \"^1.0.0\",\n        \"micromark-core-commonmark\": \"^1.0.1\",\n        \"micromark-factory-space\": \"^1.0.0\",\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-chunked\": \"^1.0.0\",\n        \"micromark-util-combine-extensions\": \"^1.0.0\",\n        \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\",\n        \"micromark-util-encode\": \"^1.0.0\",\n        \"micromark-util-normalize-identifier\": \"^1.0.0\",\n        \"micromark-util-resolve-all\": \"^1.0.0\",\n        \"micromark-util-sanitize-uri\": \"^1.0.0\",\n        \"micromark-util-subtokenize\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.1\",\n        \"uvu\": \"^0.5.0\"\n      }\n    },\n    \"node_modules/micromark-core-commonmark\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-core-commonmark/-/micromark-core-commonmark-1.1.0.tgz\",\n      \"integrity\": \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"decode-named-character-reference\": \"^1.0.0\",\n        \"micromark-factory-destination\": \"^1.0.0\",\n        \"micromark-factory-label\": \"^1.0.0\",\n        \"micromark-factory-space\": \"^1.0.0\",\n        \"micromark-factory-title\": \"^1.0.0\",\n        \"micromark-factory-whitespace\": \"^1.0.0\",\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-chunked\": \"^1.0.0\",\n        \"micromark-util-classify-character\": \"^1.0.0\",\n        \"micromark-util-html-tag-name\": \"^1.0.0\",\n        \"micromark-util-normalize-identifier\": \"^1.0.0\",\n        \"micromark-util-resolve-all\": \"^1.0.0\",\n        \"micromark-util-subtokenize\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.1\",\n        \"uvu\": \"^0.5.0\"\n      }\n    },\n    \"node_modules/micromark-extension-mdx-expression\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-mdx-expression/-/micromark-extension-mdx-expression-1.0.8.tgz\",\n      \"integrity\": \"sha512-zZpeQtc5wfWKdzDsHRBY003H2Smg+PUi2REhqgIhdzAa5xonhP03FcXxqFSerFiNUr5AWmHpaNPQTBVOS4lrXw==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\",\n        \"micromark-factory-mdx-expression\": \"^1.0.0\",\n        \"micromark-factory-space\": \"^1.0.0\",\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-events-to-acorn\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\",\n        \"uvu\": \"^0.5.0\"\n      }\n    },\n    \"node_modules/micromark-extension-mdx-jsx\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-mdx-jsx/-/micromark-extension-mdx-jsx-1.0.5.tgz\",\n      \"integrity\": \"sha512-gPH+9ZdmDflbu19Xkb8+gheqEDqkSpdCEubQyxuz/Hn8DOXiXvrXeikOoBA71+e8Pfi0/UYmU3wW3H58kr7akA==\",\n      \"dependencies\": {\n        \"@types/acorn\": \"^4.0.0\",\n        \"@types/estree\": \"^1.0.0\",\n        \"estree-util-is-identifier-name\": \"^2.0.0\",\n        \"micromark-factory-mdx-expression\": \"^1.0.0\",\n        \"micromark-factory-space\": \"^1.0.0\",\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\",\n        \"uvu\": \"^0.5.0\",\n        \"vfile-message\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-mdx-md\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-mdx-md/-/micromark-extension-mdx-md-1.0.1.tgz\",\n      \"integrity\": \"sha512-7MSuj2S7xjOQXAjjkbjBsHkMtb+mDGVW6uI2dBL9snOBCbZmoNgDAeZ0nSn9j3T42UE/g2xVNMn18PJxZvkBEA==\",\n      \"dependencies\": {\n        \"micromark-util-types\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-mdxjs\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-mdxjs/-/micromark-extension-mdxjs-1.0.1.tgz\",\n      \"integrity\": \"sha512-7YA7hF6i5eKOfFUzZ+0z6avRG52GpWR8DL+kN47y3f2KhxbBZMhmxe7auOeaTBrW2DenbbZTf1ea9tA2hDpC2Q==\",\n      \"dependencies\": {\n        \"acorn\": \"^8.0.0\",\n        \"acorn-jsx\": \"^5.0.0\",\n        \"micromark-extension-mdx-expression\": \"^1.0.0\",\n        \"micromark-extension-mdx-jsx\": \"^1.0.0\",\n        \"micromark-extension-mdx-md\": \"^1.0.0\",\n        \"micromark-extension-mdxjs-esm\": \"^1.0.0\",\n        \"micromark-util-combine-extensions\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-mdxjs-esm\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-mdxjs-esm/-/micromark-extension-mdxjs-esm-1.0.5.tgz\",\n      \"integrity\": \"sha512-xNRBw4aoURcyz/S69B19WnZAkWJMxHMT5hE36GtDAyhoyn/8TuAeqjFJQlwk+MKQsUD7b3l7kFX+vlfVWgcX1w==\",\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\",\n        \"micromark-core-commonmark\": \"^1.0.0\",\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-events-to-acorn\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\",\n        \"unist-util-position-from-estree\": \"^1.1.0\",\n        \"uvu\": \"^0.5.0\",\n        \"vfile-message\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-factory-destination\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-factory-destination/-/micromark-factory-destination-1.1.0.tgz\",\n      \"integrity\": \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-factory-label\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-factory-label/-/micromark-factory-label-1.1.0.tgz\",\n      \"integrity\": \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\",\n        \"uvu\": \"^0.5.0\"\n      }\n    },\n    \"node_modules/micromark-factory-mdx-expression\": {\n      \"version\": \"1.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-factory-mdx-expression/-/micromark-factory-mdx-expression-1.0.9.tgz\",\n      \"integrity\": \"sha512-jGIWzSmNfdnkJq05c7b0+Wv0Kfz3NJ3N4cBjnbO4zjXIlxJr+f8lk+5ZmwFvqdAbUy2q6B5rCY//g0QAAaXDWA==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\",\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-events-to-acorn\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\",\n        \"unist-util-position-from-estree\": \"^1.0.0\",\n        \"uvu\": \"^0.5.0\",\n        \"vfile-message\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/micromark-factory-space\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-factory-space/-/micromark-factory-space-1.1.0.tgz\",\n      \"integrity\": \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-factory-title\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-factory-title/-/micromark-factory-title-1.1.0.tgz\",\n      \"integrity\": \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-factory-space\": \"^1.0.0\",\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-factory-whitespace\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-factory-whitespace/-/micromark-factory-whitespace-1.1.0.tgz\",\n      \"integrity\": \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-factory-space\": \"^1.0.0\",\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-character\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-character/-/micromark-util-character-1.2.0.tgz\",\n      \"integrity\": \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-chunked\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-chunked/-/micromark-util-chunked-1.1.0.tgz\",\n      \"integrity\": \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-symbol\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-classify-character\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-classify-character/-/micromark-util-classify-character-1.1.0.tgz\",\n      \"integrity\": \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-combine-extensions\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-combine-extensions/-/micromark-util-combine-extensions-1.1.0.tgz\",\n      \"integrity\": \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-chunked\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-decode-numeric-character-reference\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-decode-numeric-character-reference/-/micromark-util-decode-numeric-character-reference-1.1.0.tgz\",\n      \"integrity\": \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-symbol\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-decode-string\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-decode-string/-/micromark-util-decode-string-1.1.0.tgz\",\n      \"integrity\": \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"decode-named-character-reference\": \"^1.0.0\",\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-encode\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-encode/-/micromark-util-encode-1.1.0.tgz\",\n      \"integrity\": \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ]\n    },\n    \"node_modules/micromark-util-events-to-acorn\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-events-to-acorn/-/micromark-util-events-to-acorn-1.2.3.tgz\",\n      \"integrity\": \"sha512-ij4X7Wuc4fED6UoLWkmo0xJQhsktfNh1J0m8g4PbIMPlx+ek/4YdW5mvbye8z/aZvAPUoxgXHrwVlXAPKMRp1w==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"@types/acorn\": \"^4.0.0\",\n        \"@types/estree\": \"^1.0.0\",\n        \"@types/unist\": \"^2.0.0\",\n        \"estree-util-visit\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\",\n        \"uvu\": \"^0.5.0\",\n        \"vfile-message\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-html-tag-name\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-html-tag-name/-/micromark-util-html-tag-name-1.2.0.tgz\",\n      \"integrity\": \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ]\n    },\n    \"node_modules/micromark-util-normalize-identifier\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-normalize-identifier/-/micromark-util-normalize-identifier-1.1.0.tgz\",\n      \"integrity\": \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-symbol\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-resolve-all\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-resolve-all/-/micromark-util-resolve-all-1.1.0.tgz\",\n      \"integrity\": \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-types\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-sanitize-uri\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-sanitize-uri/-/micromark-util-sanitize-uri-1.2.0.tgz\",\n      \"integrity\": \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-character\": \"^1.0.0\",\n        \"micromark-util-encode\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/micromark-util-subtokenize\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-subtokenize/-/micromark-util-subtokenize-1.1.0.tgz\",\n      \"integrity\": \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"dependencies\": {\n        \"micromark-util-chunked\": \"^1.0.0\",\n        \"micromark-util-symbol\": \"^1.0.0\",\n        \"micromark-util-types\": \"^1.0.0\",\n        \"uvu\": \"^0.5.0\"\n      }\n    },\n    \"node_modules/micromark-util-symbol\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-symbol/-/micromark-util-symbol-1.1.0.tgz\",\n      \"integrity\": \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ]\n    },\n    \"node_modules/micromark-util-types\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-util-types/-/micromark-util-types-1.1.0.tgz\",\n      \"integrity\": \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ]\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz\",\n      \"integrity\": \"sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==\",\n      \"dependencies\": {\n        \"braces\": \"^3.0.2\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n      \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/minipass\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.0.4.tgz\",\n      \"integrity\": \"sha512-jYofLM5Dam9279rdkWzqHozUo4ybjdZmCsDHePy5V/PbBcVMiSZR97gmAy45aqi8CK1lG2ECd356FU86avfwUQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      }\n    },\n    \"node_modules/mongodb\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/mongodb/-/mongodb-6.3.0.tgz\",\n      \"integrity\": \"sha512-tt0KuGjGtLUhLoU263+xvQmPHEGTw5LbcNC73EoFRYgSHwZt5tsoJC110hDyO1kjQzpgNrpdcSza9PknWN4LrA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@mongodb-js/saslprep\": \"^1.1.0\",\n        \"bson\": \"^6.2.0\",\n        \"mongodb-connection-string-url\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16.20.1\"\n      },\n      \"peerDependencies\": {\n        \"@aws-sdk/credential-providers\": \"^3.188.0\",\n        \"@mongodb-js/zstd\": \"^1.1.0\",\n        \"gcp-metadata\": \"^5.2.0\",\n        \"kerberos\": \"^2.0.1\",\n        \"mongodb-client-encryption\": \">=6.0.0 <7\",\n        \"snappy\": \"^7.2.2\",\n        \"socks\": \"^2.7.1\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@aws-sdk/credential-providers\": {\n          \"optional\": true\n        },\n        \"@mongodb-js/zstd\": {\n          \"optional\": true\n        },\n        \"gcp-metadata\": {\n          \"optional\": true\n        },\n        \"kerberos\": {\n          \"optional\": true\n        },\n        \"mongodb-client-encryption\": {\n          \"optional\": true\n        },\n        \"snappy\": {\n          \"optional\": true\n        },\n        \"socks\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/mongodb-connection-string-url\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-3.0.0.tgz\",\n      \"integrity\": \"sha512-t1Vf+m1I5hC2M5RJx/7AtxgABy1cZmIPQRMXw+gEIPn/cZNF3Oiy+l0UIypUwVB5trcWHq3crg2g3uAR9aAwsQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/whatwg-url\": \"^11.0.2\",\n        \"whatwg-url\": \"^13.0.0\"\n      }\n    },\n    \"node_modules/mongodb-connection-string-url/node_modules/tr46\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-4.1.1.tgz\",\n      \"integrity\": \"sha512-2lv/66T7e5yNyhAAC4NaKe5nVavzuGJQVVtRYLyQ2OI8tsJ61PMLlelehb0wi2Hx6+hT/OJUWZcw8MjlSRnxvw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/mongodb-connection-string-url/node_modules/webidl-conversions\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n      \"integrity\": \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/mongodb-connection-string-url/node_modules/whatwg-url\": {\n      \"version\": \"13.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-13.0.0.tgz\",\n      \"integrity\": \"sha512-9WWbymnqj57+XEuqADHrCJ2eSXzn8WXIW/YSGaZtb2WKAInQ6CHfaUUcTyyver0p8BDg5StLQq8h1vtZuwmOig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tr46\": \"^4.1.1\",\n        \"webidl-conversions\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16\"\n      }\n    },\n    \"node_modules/mongoose\": {\n      \"version\": \"8.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/mongoose/-/mongoose-8.2.4.tgz\",\n      \"integrity\": \"sha512-da/r6zpG+2eAXuhBGUnL6jcBd03zlytoCc5/wq+LyTsmrY9hhPQmSpnugwnfqldtBmUOhB6iMLoV4hNtHRq+ww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bson\": \"^6.2.0\",\n        \"kareem\": \"2.5.1\",\n        \"mongodb\": \"6.3.0\",\n        \"mpath\": \"0.9.0\",\n        \"mquery\": \"5.0.0\",\n        \"ms\": \"2.1.3\",\n        \"sift\": \"16.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16.20.1\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/mongoose\"\n      }\n    },\n    \"node_modules/mongoose/node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"node_modules/motion-dom\": {\n      \"version\": \"12.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/motion-dom/-/motion-dom-12.10.1.tgz\",\n      \"integrity\": \"sha512-rY8DNqgKh4LeFSQBkuXpe/7sycYS9RM+4luukjHpHogF1liSvIp0Hedx0q2QsWNz+AHuZ5bZQ9j9QZSUCA8bbw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"motion-utils\": \"^12.9.4\"\n      }\n    },\n    \"node_modules/motion-utils\": {\n      \"version\": \"12.9.4\",\n      \"resolved\": \"https://registry.npmjs.org/motion-utils/-/motion-utils-12.9.4.tgz\",\n      \"integrity\": \"sha512-BW3I65zeM76CMsfh3kHid9ansEJk9Qvl+K5cu4DVHKGsI52n76OJ4z2CUJUV+Mn3uEP9k1JJA3tClG0ggSrRcg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/mpath\": {\n      \"version\": \"0.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz\",\n      \"integrity\": \"sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/mquery\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mquery/-/mquery-5.0.0.tgz\",\n      \"integrity\": \"sha512-iQMncpmEK8R8ncT8HJGsGc9Dsp8xcgYMVSbs5jgnm1lFHTZqMJTUWTDx1LBO8+mK3tPNZWFLBghQEIOULSTHZg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"4.x\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      }\n    },\n    \"node_modules/mri\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/mri/-/mri-1.2.0.tgz\",\n      \"integrity\": \"sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/mz\": {\n      \"version\": \"2.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/mz/-/mz-2.7.0.tgz\",\n      \"integrity\": \"sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"any-promise\": \"^1.0.0\",\n        \"object-assign\": \"^4.0.1\",\n        \"thenify-all\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/nanoid\": {\n      \"version\": \"3.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz\",\n      \"integrity\": \"sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"bin\": {\n        \"nanoid\": \"bin/nanoid.cjs\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n      }\n    },\n    \"node_modules/natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n      \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\"\n    },\n    \"node_modules/next\": {\n      \"version\": \"15.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/next/-/next-15.3.2.tgz\",\n      \"integrity\": \"sha512-CA3BatMyHkxZ48sgOCLdVHjFU36N7TF1HhqAHLFOkV6buwZnvMI84Cug8xD56B9mCuKrqXnLn94417GrZ/jjCQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@next/env\": \"15.3.2\",\n        \"@swc/counter\": \"0.1.3\",\n        \"@swc/helpers\": \"0.5.15\",\n        \"busboy\": \"1.6.0\",\n        \"caniuse-lite\": \"^1.0.30001579\",\n        \"postcss\": \"8.4.31\",\n        \"styled-jsx\": \"5.1.6\"\n      },\n      \"bin\": {\n        \"next\": \"dist/bin/next\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || ^19.8.0 || >= 20.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"@next/swc-darwin-arm64\": \"15.3.2\",\n        \"@next/swc-darwin-x64\": \"15.3.2\",\n        \"@next/swc-linux-arm64-gnu\": \"15.3.2\",\n        \"@next/swc-linux-arm64-musl\": \"15.3.2\",\n        \"@next/swc-linux-x64-gnu\": \"15.3.2\",\n        \"@next/swc-linux-x64-musl\": \"15.3.2\",\n        \"@next/swc-win32-arm64-msvc\": \"15.3.2\",\n        \"@next/swc-win32-x64-msvc\": \"15.3.2\",\n        \"sharp\": \"^0.34.1\"\n      },\n      \"peerDependencies\": {\n        \"@opentelemetry/api\": \"^1.1.0\",\n        \"@playwright/test\": \"^1.41.2\",\n        \"babel-plugin-react-compiler\": \"*\",\n        \"react\": \"^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\",\n        \"react-dom\": \"^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\",\n        \"sass\": \"^1.3.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@opentelemetry/api\": {\n          \"optional\": true\n        },\n        \"@playwright/test\": {\n          \"optional\": true\n        },\n        \"babel-plugin-react-compiler\": {\n          \"optional\": true\n        },\n        \"sass\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/next-plausible\": {\n      \"version\": \"3.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/next-plausible/-/next-plausible-3.12.0.tgz\",\n      \"integrity\": \"sha512-SSkEqKQ6PgR8fx3sYfIAT69k2xuCUXO5ngkSS19CjxY97lAoZxsfZpYednxB4zo0mHYv87JzhPynrdBPlCBVHg==\",\n      \"funding\": {\n        \"url\": \"https://github.com/4lejandrito/next-plausible?sponsor=1\"\n      },\n      \"peerDependencies\": {\n        \"next\": \"^11.1.0 || ^12.0.0 || ^13.0.0 || ^14.0.0\",\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\",\n        \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\"\n      }\n    },\n    \"node_modules/next-sitemap\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/next-sitemap/-/next-sitemap-4.2.3.tgz\",\n      \"integrity\": \"sha512-vjdCxeDuWDzldhCnyFCQipw5bfpl4HmZA7uoo3GAaYGjGgfL4Cxb1CiztPuWGmS+auYs7/8OekRS8C2cjdAsjQ==\",\n      \"funding\": [\n        {\n          \"url\": \"https://github.com/iamvishnusankar/next-sitemap.git\"\n        }\n      ],\n      \"dependencies\": {\n        \"@corex/deepmerge\": \"^4.0.43\",\n        \"@next/env\": \"^13.4.3\",\n        \"fast-glob\": \"^3.2.12\",\n        \"minimist\": \"^1.2.8\"\n      },\n      \"bin\": {\n        \"next-sitemap\": \"bin/next-sitemap.mjs\",\n        \"next-sitemap-cjs\": \"bin/next-sitemap.cjs\"\n      },\n      \"engines\": {\n        \"node\": \">=14.18\"\n      },\n      \"peerDependencies\": {\n        \"next\": \"*\"\n      }\n    },\n    \"node_modules/next-sitemap/node_modules/@next/env\": {\n      \"version\": \"13.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/@next/env/-/env-13.5.6.tgz\",\n      \"integrity\": \"sha512-Yac/bV5sBGkkEXmAX5FWPS9Mmo2rthrOPRQQNfycJPkjUAUclomCPH7QFVCDQ4Mp2k2K1SSM6m0zrxYrOwtFQw==\"\n    },\n    \"node_modules/next/node_modules/postcss\": {\n      \"version\": \"8.4.31\",\n      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz\",\n      \"integrity\": \"sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"nanoid\": \"^3.3.6\",\n        \"picocolors\": \"^1.0.0\",\n        \"source-map-js\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      }\n    },\n    \"node_modules/nextjs-toploader\": {\n      \"version\": \"1.6.11\",\n      \"resolved\": \"https://registry.npmjs.org/nextjs-toploader/-/nextjs-toploader-1.6.11.tgz\",\n      \"integrity\": \"sha512-2mt+YDj3I7s8JGv136TRdJo9amd2BBeb2u1U4tyvZpR08eqeBgqp3xsw2Yu1AUT7C3NZQhbQN11EXwnlqsPEIA==\",\n      \"dependencies\": {\n        \"@types/nprogress\": \"^0.2.2\",\n        \"nprogress\": \"^0.2.0\",\n        \"prop-types\": \"^15.8.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/TheSGJ\"\n      },\n      \"peerDependencies\": {\n        \"next\": \">= 6.0.0\",\n        \"react\": \">= 16.0.0\",\n        \"react-dom\": \">= 16.0.0\"\n      }\n    },\n    \"node_modules/node-releases\": {\n      \"version\": \"2.0.14\",\n      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.14.tgz\",\n      \"integrity\": \"sha512-y10wOWt8yZpqXmOgRo77WaHEmhYQYGNA6y421PKsKYWEK8aW+cqAphborZDhqfyKrbZEN92CN1X2KbafY2s7Yw==\",\n      \"dev\": true\n    },\n    \"node_modules/nodemailer\": {\n      \"version\": \"6.9.13\",\n      \"resolved\": \"https://registry.npmjs.org/nodemailer/-/nodemailer-6.9.13.tgz\",\n      \"integrity\": \"sha512-7o38Yogx6krdoBf3jCAqnIN4oSQFx+fMa0I7dK1D+me9kBxx12D+/33wSb+fhOCtIxvYJ+4x4IMEhmhCKfAiOA==\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/normalize-range\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz\",\n      \"integrity\": \"sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/nprogress\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/nprogress/-/nprogress-0.2.0.tgz\",\n      \"integrity\": \"sha512-I19aIingLgR1fmhftnbWWO3dXc0hSxqHQHQb3H8m+K3TnEn/iSeTZZOyvKXWqQESMwuUVnatlCnZdLBZZt2VSA==\"\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-hash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz\",\n      \"integrity\": \"sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz\",\n      \"integrity\": \"sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-keys\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz\",\n      \"integrity\": \"sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.assign\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/object.assign/-/object.assign-4.1.5.tgz\",\n      \"integrity\": \"sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"define-properties\": \"^1.2.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.entries\": {\n      \"version\": \"1.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/object.entries/-/object.entries-1.1.8.tgz\",\n      \"integrity\": \"sha512-cmopxi8VwRIAw/fkijJohSfpef5PdN0pMQJN6VC/ZKvn0LIknWD8KtgY6KlQdEc4tIjcQ3HxSMmnvtzIscdaYQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.fromentries\": {\n      \"version\": \"2.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz\",\n      \"integrity\": \"sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.groupby\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/object.groupby/-/object.groupby-1.0.3.tgz\",\n      \"integrity\": \"sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.hasown\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/object.hasown/-/object.hasown-1.1.4.tgz\",\n      \"integrity\": \"sha512-FZ9LZt9/RHzGySlBARE3VF+gE26TxR38SdmqOqliuTnl9wrKulaQs+4dee1V+Io8VfxqzAfHu6YuRgUy8OHoTg==\",\n      \"dependencies\": {\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.values\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/object.values/-/object.values-1.2.0.tgz\",\n      \"integrity\": \"sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/optionator\": {\n      \"version\": \"0.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.3.tgz\",\n      \"integrity\": \"sha512-JjCoypp+jKn1ttEFExxhetCKeJt9zhAgAve5FXHixTvFDW/5aEktX9bufBKLRRMdU7bNtpLfcGu94B3cdEJgjg==\",\n      \"dependencies\": {\n        \"@aashutoshrathi/word-wrap\": \"^1.2.3\",\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dependencies\": {\n        \"p-limit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/parent-module\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n      \"dependencies\": {\n        \"callsites\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/parse-entities\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-entities/-/parse-entities-2.0.0.tgz\",\n      \"integrity\": \"sha512-kkywGpCcRYhqQIchaWqZ875wzpS/bMKhz5HnN3p7wveJTkTtyAB/AlnS0f8DFSqYW1T82t6yEAkEcB+A1I3MbQ==\",\n      \"dependencies\": {\n        \"character-entities\": \"^1.0.0\",\n        \"character-entities-legacy\": \"^1.0.0\",\n        \"character-reference-invalid\": \"^1.0.0\",\n        \"is-alphanumerical\": \"^1.0.0\",\n        \"is-decimal\": \"^1.0.0\",\n        \"is-hexadecimal\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/parse-entities/node_modules/character-entities\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/character-entities/-/character-entities-1.2.4.tgz\",\n      \"integrity\": \"sha512-iBMyeEHxfVnIakwOuDXpVkc54HijNgCyQB2w0VfGQThle6NXn50zU6V/u+LDhxHcDUPojn6Kpga3PTAD8W1bQw==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\"\n    },\n    \"node_modules/path-scurry\": {\n      \"version\": \"1.10.2\",\n      \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-1.10.2.tgz\",\n      \"integrity\": \"sha512-7xTavNy5RQXnsjANvVvMkEjvloOinkAjv/Z6Ildz9v2RinZ4SBKTWFOVRbaF8p0vpHnyjV/UwNDdKuUv6M5qcA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^10.2.0\",\n        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/path-scurry/node_modules/lru-cache\": {\n      \"version\": \"10.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.2.0.tgz\",\n      \"integrity\": \"sha512-2bIM8x+VAf6JT4bKAljS1qUWgMsqZRPGJS6FSahIMPVvctcNhyVp7AJu7quxOW9jwkryBReKZY5tY5JYv2n/7Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"14 || >=16.14\"\n      }\n    },\n    \"node_modules/path-type\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n      \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/periscopic\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/periscopic/-/periscopic-3.1.0.tgz\",\n      \"integrity\": \"sha512-vKiQ8RRtkl9P+r/+oefh25C3fhybptkHKCZSPlcXiJux2tJF55GnEj3BVn4A5gKfq9NWWXXrxkHBwVPUfH0opw==\",\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\",\n        \"estree-walker\": \"^3.0.0\",\n        \"is-reference\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/picocolors\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz\",\n      \"integrity\": \"sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ==\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz\",\n      \"integrity\": \"sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pirates\": {\n      \"version\": \"4.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/pirates/-/pirates-4.0.6.tgz\",\n      \"integrity\": \"sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/possible-typed-array-names\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.0.0.tgz\",\n      \"integrity\": \"sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/postcss\": {\n      \"version\": \"8.4.38\",\n      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.4.38.tgz\",\n      \"integrity\": \"sha512-Wglpdk03BSfXkHoQa3b/oulrotAkwrlLDRSOb9D0bN86FdRyE9lppSp33aHNPgBa0JKCoB+drFLZkQoRRYae5A==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"nanoid\": \"^3.3.7\",\n        \"picocolors\": \"^1.0.0\",\n        \"source-map-js\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      }\n    },\n    \"node_modules/postcss-import\": {\n      \"version\": \"15.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz\",\n      \"integrity\": \"sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"postcss-value-parser\": \"^4.0.0\",\n        \"read-cache\": \"^1.0.0\",\n        \"resolve\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.0.0\"\n      }\n    },\n    \"node_modules/postcss-js\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz\",\n      \"integrity\": \"sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camelcase-css\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12 || ^14 || >= 16\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.4.21\"\n      }\n    },\n    \"node_modules/postcss-load-config\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz\",\n      \"integrity\": \"sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"lilconfig\": \"^3.0.0\",\n        \"yaml\": \"^2.3.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \">=8.0.9\",\n        \"ts-node\": \">=9.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"postcss\": {\n          \"optional\": true\n        },\n        \"ts-node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/postcss-load-config/node_modules/lilconfig\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.1.tgz\",\n      \"integrity\": \"sha512-O18pf7nyvHTckunPWCV1XUNXU1piu01y2b7ATJ0ppkUkk8ocqVWBrYjJBCwHDjD/ZWcfyrA0P4gKhzWGi5EINQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/antonk52\"\n      }\n    },\n    \"node_modules/postcss-nested\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.0.1.tgz\",\n      \"integrity\": \"sha512-mEp4xPMi5bSWiMbsgoPfcP74lsWLHkQbZc3sY+jWYd65CUwXrUaTp0fmNpa01ZcETKlIgUdFN/MpS2xZtqL9dQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"postcss-selector-parser\": \"^6.0.11\"\n      },\n      \"engines\": {\n        \"node\": \">=12.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.2.14\"\n      }\n    },\n    \"node_modules/postcss-selector-parser\": {\n      \"version\": \"6.0.16\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.16.tgz\",\n      \"integrity\": \"sha512-A0RVJrX+IUkVZbW3ClroRWurercFhieevHB38sr2+l9eUClMqome3LmEmnhlNy+5Mr2EYN6B2Kaw9wYdd+VHiw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cssesc\": \"^3.0.0\",\n        \"util-deprecate\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/postcss-value-parser\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz\",\n      \"integrity\": \"sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==\",\n      \"dev\": true\n    },\n    \"node_modules/prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n      \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/prismjs\": {\n      \"version\": \"1.29.0\",\n      \"resolved\": \"https://registry.npmjs.org/prismjs/-/prismjs-1.29.0.tgz\",\n      \"integrity\": \"sha512-Kx/1w86q/epKcmte75LNrEoT+lX8pBpavuAbvJWRXar7Hz8jrtF+e3vY751p0R8H9HdArwaCTNDDzHg/ScJK1Q==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/prop-types\": {\n      \"version\": \"15.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz\",\n      \"integrity\": \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.4.0\",\n        \"object-assign\": \"^4.1.1\",\n        \"react-is\": \"^16.13.1\"\n      }\n    },\n    \"node_modules/prop-types/node_modules/react-is\": {\n      \"version\": \"16.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz\",\n      \"integrity\": \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\"\n    },\n    \"node_modules/property-information\": {\n      \"version\": \"6.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/property-information/-/property-information-6.4.1.tgz\",\n      \"integrity\": \"sha512-OHYtXfu5aI2sS2LWFSN5rgJjrQ4pCy8i1jubJLe2QvMF8JJ++HXTUIVWFLfXJoaOfvYYjk2SN8J2wFUWIGXT4w==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/proxy-from-env\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\n      \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\"\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.12.0.tgz\",\n      \"integrity\": \"sha512-trVZiI6RMOkO476zLGaBIzszOdFPnCCXHPG9kn0yuS1uz6xdVxPfZdB3vUig9pxPFDM9BRAgz/YUIVQ1/vuiUg==\",\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/queue-microtask\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/react\": {\n      \"version\": \"18.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/react/-/react-18.2.0.tgz\",\n      \"integrity\": \"sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/react-dom\": {\n      \"version\": \"18.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-dom/-/react-dom-18.2.0.tgz\",\n      \"integrity\": \"sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\",\n        \"scheduler\": \"^0.23.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^18.2.0\"\n      }\n    },\n    \"node_modules/react-hot-toast\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-hot-toast/-/react-hot-toast-2.4.1.tgz\",\n      \"integrity\": \"sha512-j8z+cQbWIM5LY37pR6uZR6D4LfseplqnuAO4co4u8917hBUvXlEqyP1ZzqVLcqoyUesZZv/ImreoCeHVDpE5pQ==\",\n      \"dependencies\": {\n        \"goober\": \"^2.1.10\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">=16\",\n        \"react-dom\": \">=16\"\n      }\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"18.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.2.0.tgz\",\n      \"integrity\": \"sha512-xWGDIW6x921xtzPkhiULtthJHoJvBbF3q26fzloPCK0hsvxtPVelvftw3zjbHWSkR2km9Z+4uxbDDK/6Zw9B8w==\",\n      \"dev\": true\n    },\n    \"node_modules/react-syntax-highlighter\": {\n      \"version\": \"15.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-syntax-highlighter/-/react-syntax-highlighter-15.5.0.tgz\",\n      \"integrity\": \"sha512-+zq2myprEnQmH5yw6Gqc8lD55QHnpKaU8TOcFeC/Lg/MQSs8UknEA0JC4nTZGFAXC2J2Hyj/ijJ7NlabyPi2gg==\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.3.1\",\n        \"highlight.js\": \"^10.4.1\",\n        \"lowlight\": \"^1.17.0\",\n        \"prismjs\": \"^1.27.0\",\n        \"refractor\": \"^3.6.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">= 0.14.0\"\n      }\n    },\n    \"node_modules/react-tooltip\": {\n      \"version\": \"5.26.3\",\n      \"resolved\": \"https://registry.npmjs.org/react-tooltip/-/react-tooltip-5.26.3.tgz\",\n      \"integrity\": \"sha512-MpYAws8CEHUd/RC4GaDCdoceph/T4KHM5vS5Dbk8FOmLMvvIht2ymP2htWdrke7K6lqPO8rz8+bnwWUIXeDlzg==\",\n      \"dependencies\": {\n        \"@floating-ui/dom\": \"^1.6.1\",\n        \"classnames\": \"^2.3.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">=16.14.0\",\n        \"react-dom\": \">=16.14.0\"\n      }\n    },\n    \"node_modules/read-cache\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz\",\n      \"integrity\": \"sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pify\": \"^2.3.0\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/reflect.getprototypeof\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.6.tgz\",\n      \"integrity\": \"sha512-fmfw4XgoDke3kdI6h4xcUz1dG8uaiv5q9gcEwLS4Pnth2kxT+GZ7YehS1JTMGBQmtV7Y4GFGbs2re2NqhdozUg==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"globalthis\": \"^1.0.3\",\n        \"which-builtin-type\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/refractor\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/refractor/-/refractor-3.6.0.tgz\",\n      \"integrity\": \"sha512-MY9W41IOWxxk31o+YvFCNyNzdkc9M20NoZK5vq6jkv4I/uh2zkWcfudj0Q1fovjUQJrNewS9NMzeTtqPf+n5EA==\",\n      \"dependencies\": {\n        \"hastscript\": \"^6.0.0\",\n        \"parse-entities\": \"^2.0.0\",\n        \"prismjs\": \"~1.27.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/refractor/node_modules/prismjs\": {\n      \"version\": \"1.27.0\",\n      \"resolved\": \"https://registry.npmjs.org/prismjs/-/prismjs-1.27.0.tgz\",\n      \"integrity\": \"sha512-t13BGPUlFDR7wRB5kQDG4jjl7XeuH6jbJGt11JHPL96qwsEHNX2+68tFXqc1/k+/jALsbSWJKUOT/hcYAZ5LkA==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz\",\n      \"integrity\": \"sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==\"\n    },\n    \"node_modules/regexp.prototype.flags\": {\n      \"version\": \"1.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.2.tgz\",\n      \"integrity\": \"sha512-NcDiDkTLuPR+++OCKB0nWafEmhg/Da8aUPLPMQbK+bxKKCm1/S5he+AqYa4PlMCVBalb4/yxIRub6qkEx5yJbw==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"set-function-name\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/remark-mdx\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/remark-mdx/-/remark-mdx-2.3.0.tgz\",\n      \"integrity\": \"sha512-g53hMkpM0I98MU266IzDFMrTD980gNF3BJnkyFcmN+dD873mQeD5rdMO3Y2X+x8umQfbSE0PcoEDl7ledSA+2g==\",\n      \"dependencies\": {\n        \"mdast-util-mdx\": \"^2.0.0\",\n        \"micromark-extension-mdxjs\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/remark-parse\": {\n      \"version\": \"10.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/remark-parse/-/remark-parse-10.0.2.tgz\",\n      \"integrity\": \"sha512-3ydxgHa/ZQzG8LvC7jTXccARYDcRld3VfcgIIFs7bI6vbRSxJJmzgLEIIoYKyrfhaY+ujuWaf/PJiMZXoiCXgw==\",\n      \"dependencies\": {\n        \"@types/mdast\": \"^3.0.0\",\n        \"mdast-util-from-markdown\": \"^1.0.0\",\n        \"unified\": \"^10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/remark-rehype\": {\n      \"version\": \"10.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/remark-rehype/-/remark-rehype-10.1.0.tgz\",\n      \"integrity\": \"sha512-EFmR5zppdBp0WQeDVZ/b66CWJipB2q2VLNFMabzDSGR66Z2fQii83G5gTBbgGEnEEA0QRussvrFHxk1HWGJskw==\",\n      \"dependencies\": {\n        \"@types/hast\": \"^2.0.0\",\n        \"@types/mdast\": \"^3.0.0\",\n        \"mdast-util-to-hast\": \"^12.1.0\",\n        \"unified\": \"^10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.22.8\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\n      \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/resolve-pkg-maps\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz\",\n      \"integrity\": \"sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==\",\n      \"funding\": {\n        \"url\": \"https://github.com/privatenumber/resolve-pkg-maps?sponsor=1\"\n      }\n    },\n    \"node_modules/reusify\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz\",\n      \"integrity\": \"sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==\",\n      \"engines\": {\n        \"iojs\": \">=1.0.0\",\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\",\n      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/run-parallel\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"queue-microtask\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/sade\": {\n      \"version\": \"1.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/sade/-/sade-1.8.1.tgz\",\n      \"integrity\": \"sha512-xal3CZX1Xlo/k4ApwCFrHVACi9fBqJ7V+mwhBsuf/1IOKbBy098Fex+Wa/5QMubw09pSZ/u8EY8PWgevJsXp1A==\",\n      \"dependencies\": {\n        \"mri\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/safe-array-concat\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.2.tgz\",\n      \"integrity\": \"sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"has-symbols\": \"^1.0.3\",\n        \"isarray\": \"^2.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/safe-regex-test\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.3.tgz\",\n      \"integrity\": \"sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-regex\": \"^1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/scheduler\": {\n      \"version\": \"0.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/scheduler/-/scheduler-0.23.0.tgz\",\n      \"integrity\": \"sha512-CtuThmgHNg7zIZWAXi3AsyIzA3n4xx7aNyjwC2VJldO2LMVDhFK+63xGqq6CsJH4rTAt6/M+N4GhZiDYPx9eUw==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/semver\": {\n      \"version\": \"7.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.1.tgz\",\n      \"integrity\": \"sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==\",\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/set-cookie-parser\": {\n      \"version\": \"2.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.6.0.tgz\",\n      \"integrity\": \"sha512-RVnVQxTXuerk653XfuliOxBP81Sf0+qfQE73LIYKcyMYHG94AuH0kgrQpRDuTZnSmjpysHmzxJXKNfa6PjFhyQ==\"\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/set-function-name\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz\",\n      \"integrity\": \"sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"functions-have-names\": \"^1.2.3\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/sharp\": {\n      \"version\": \"0.34.1\",\n      \"resolved\": \"https://registry.npmjs.org/sharp/-/sharp-0.34.1.tgz\",\n      \"integrity\": \"sha512-1j0w61+eVxu7DawFJtnfYcvSv6qPFvfTaqzTQ2BLknVhHTwGS8sc63ZBF4rzkWMBVKybo4S5OBtDdZahh2A1xg==\",\n      \"hasInstallScript\": true,\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"color\": \"^4.2.3\",\n        \"detect-libc\": \"^2.0.3\",\n        \"semver\": \"^7.7.1\"\n      },\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-darwin-arm64\": \"0.34.1\",\n        \"@img/sharp-darwin-x64\": \"0.34.1\",\n        \"@img/sharp-libvips-darwin-arm64\": \"1.1.0\",\n        \"@img/sharp-libvips-darwin-x64\": \"1.1.0\",\n        \"@img/sharp-libvips-linux-arm\": \"1.1.0\",\n        \"@img/sharp-libvips-linux-arm64\": \"1.1.0\",\n        \"@img/sharp-libvips-linux-ppc64\": \"1.1.0\",\n        \"@img/sharp-libvips-linux-s390x\": \"1.1.0\",\n        \"@img/sharp-libvips-linux-x64\": \"1.1.0\",\n        \"@img/sharp-libvips-linuxmusl-arm64\": \"1.1.0\",\n        \"@img/sharp-libvips-linuxmusl-x64\": \"1.1.0\",\n        \"@img/sharp-linux-arm\": \"0.34.1\",\n        \"@img/sharp-linux-arm64\": \"0.34.1\",\n        \"@img/sharp-linux-s390x\": \"0.34.1\",\n        \"@img/sharp-linux-x64\": \"0.34.1\",\n        \"@img/sharp-linuxmusl-arm64\": \"0.34.1\",\n        \"@img/sharp-linuxmusl-x64\": \"0.34.1\",\n        \"@img/sharp-wasm32\": \"0.34.1\",\n        \"@img/sharp-win32-ia32\": \"0.34.1\",\n        \"@img/sharp-win32-x64\": \"0.34.1\"\n      }\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"object-inspect\": \"^1.13.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/sift\": {\n      \"version\": \"16.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/sift/-/sift-16.0.1.tgz\",\n      \"integrity\": \"sha512-Wv6BjQ5zbhW7VFefWusVP33T/EM0vYikCaQ2qR8yULbsilAT8/wQaXvuQ3ptGLpoKx+lihJE3y2UTgKDyyNHZQ==\",\n      \"dev\": true\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/simple-swizzle\": {\n      \"version\": \"0.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz\",\n      \"integrity\": \"sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"is-arrayish\": \"^0.3.1\"\n      }\n    },\n    \"node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.7.4.tgz\",\n      \"integrity\": \"sha512-l3BikUxvPOcn5E74dZiq5BGsTb5yEwhaTSzccU6t4sDOH8NWJCstKO5QT2CvtFoK6F0saL7p9xHAqHOlCPJygA==\",\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/source-map-js\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.0.tgz\",\n      \"integrity\": \"sha512-itJW8lvSA0TXEphiRoawsCksnlf8SyvmFzIhltqAHluXd88pkCd+cXJVHTDwdCr0IzwptSm035IHQktUu1QUMg==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/space-separated-tokens\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/space-separated-tokens/-/space-separated-tokens-2.0.2.tgz\",\n      \"integrity\": \"sha512-PEGlAwrG8yXGXRjW32fGbg66JAlOAwbObuqVoJpv/mRgoWDQfgH1wDPvtzWyUSNAXBGSk8h755YDbbcEy3SH2Q==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/sparse-bitfield\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz\",\n      \"integrity\": \"sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"memory-pager\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/stack-utils\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.6.tgz\",\n      \"integrity\": \"sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/stack-utils/node_modules/escape-string-regexp\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz\",\n      \"integrity\": \"sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/streamsearch\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz\",\n      \"integrity\": \"sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==\",\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/string-width-cjs\": {\n      \"name\": \"string-width\",\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width-cjs/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/string-width/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/string-width/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/string.prototype.matchall\": {\n      \"version\": \"4.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.11.tgz\",\n      \"integrity\": \"sha512-NUdh0aDavY2og7IbBPenWqR9exH+E26Sv8e0/eTe1tltDGZL+GtBkDAnnyBtmekfK6/Dq3MkcGtzXFEd1LQrtg==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"internal-slot\": \"^1.0.7\",\n        \"regexp.prototype.flags\": \"^1.5.2\",\n        \"set-function-name\": \"^2.0.2\",\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trim\": {\n      \"version\": \"1.2.9\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.9.tgz\",\n      \"integrity\": \"sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.0\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimend\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.8.tgz\",\n      \"integrity\": \"sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimstart\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz\",\n      \"integrity\": \"sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/stringify-entities\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/stringify-entities/-/stringify-entities-4.0.3.tgz\",\n      \"integrity\": \"sha512-BP9nNHMhhfcMbiuQKCqMjhDP5yBCAxsPu4pHFFzJ6Alo9dZgY4VLDPutXqIjpRiMoKdp7Av85Gr73Q5uH9k7+g==\",\n      \"dependencies\": {\n        \"character-entities-html4\": \"^2.0.0\",\n        \"character-entities-legacy\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/stringify-entities/node_modules/character-entities-legacy\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/character-entities-legacy/-/character-entities-legacy-3.0.0.tgz\",\n      \"integrity\": \"sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi-cjs\": {\n      \"name\": \"strip-ansi\",\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-bom\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz\",\n      \"integrity\": \"sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/stripe\": {\n      \"version\": \"13.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/stripe/-/stripe-13.11.0.tgz\",\n      \"integrity\": \"sha512-yPxVJxUzP1QHhHeFnYjJl48QwDS1+5befcL7ju7+t+i88D5r0rbsL+GkCCS6zgcU+TiV5bF9eMGcKyJfLf8BZQ==\",\n      \"dependencies\": {\n        \"@types/node\": \">=8.1.0\",\n        \"qs\": \"^6.11.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12.*\"\n      }\n    },\n    \"node_modules/style-to-object\": {\n      \"version\": \"0.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/style-to-object/-/style-to-object-0.4.4.tgz\",\n      \"integrity\": \"sha512-HYNoHZa2GorYNyqiCaBgsxvcJIn7OHq6inEga+E6Ke3m5JkoqpQbnFssk4jwe+K7AhGa2fcha4wSOf1Kn01dMg==\",\n      \"dependencies\": {\n        \"inline-style-parser\": \"0.1.1\"\n      }\n    },\n    \"node_modules/styled-jsx\": {\n      \"version\": \"5.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.6.tgz\",\n      \"integrity\": \"sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"client-only\": \"0.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 12.0.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@babel/core\": {\n          \"optional\": true\n        },\n        \"babel-plugin-macros\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/sucrase\": {\n      \"version\": \"3.35.0\",\n      \"resolved\": \"https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz\",\n      \"integrity\": \"sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"commander\": \"^4.0.0\",\n        \"glob\": \"^10.3.10\",\n        \"lines-and-columns\": \"^1.1.6\",\n        \"mz\": \"^2.7.0\",\n        \"pirates\": \"^4.0.1\",\n        \"ts-interface-checker\": \"^0.1.9\"\n      },\n      \"bin\": {\n        \"sucrase\": \"bin/sucrase\",\n        \"sucrase-node\": \"bin/sucrase-node\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      }\n    },\n    \"node_modules/sucrase/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/sucrase/node_modules/glob\": {\n      \"version\": \"10.3.12\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.3.12.tgz\",\n      \"integrity\": \"sha512-TCNv8vJ+xz4QiqTpfOJA7HvYv+tNIRHKfUWw/q+v2jdgN4ebz+KY9tGx5J4rHP0o84mNP+ApH66HRX8us3Khqg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^2.3.6\",\n        \"minimatch\": \"^9.0.1\",\n        \"minipass\": \"^7.0.4\",\n        \"path-scurry\": \"^1.10.2\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/esm/bin.mjs\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/sucrase/node_modules/minimatch\": {\n      \"version\": \"9.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.4.tgz\",\n      \"integrity\": \"sha512-KqWh+VchfxcMNRAJjj2tnsSJdNbHsVgnkBhTNrW7AjVo6OvLtxw8zfT9oLw1JSohlFzJ8jCoTgaoXvJ+kHt6fw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/tailwindcss\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.3.tgz\",\n      \"integrity\": \"sha512-U7sxQk/n397Bmx4JHbJx/iSOOv5G+II3f1kpLpY2QeUv5DcPdcTsYLlusZfq1NthHS1c1cZoyFmmkex1rzke0A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@alloc/quick-lru\": \"^5.2.0\",\n        \"arg\": \"^5.0.2\",\n        \"chokidar\": \"^3.5.3\",\n        \"didyoumean\": \"^1.2.2\",\n        \"dlv\": \"^1.1.3\",\n        \"fast-glob\": \"^3.3.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"is-glob\": \"^4.0.3\",\n        \"jiti\": \"^1.21.0\",\n        \"lilconfig\": \"^2.1.0\",\n        \"micromatch\": \"^4.0.5\",\n        \"normalize-path\": \"^3.0.0\",\n        \"object-hash\": \"^3.0.0\",\n        \"picocolors\": \"^1.0.0\",\n        \"postcss\": \"^8.4.23\",\n        \"postcss-import\": \"^15.1.0\",\n        \"postcss-js\": \"^4.0.1\",\n        \"postcss-load-config\": \"^4.0.1\",\n        \"postcss-nested\": \"^6.0.1\",\n        \"postcss-selector-parser\": \"^6.0.11\",\n        \"resolve\": \"^1.22.2\",\n        \"sucrase\": \"^3.32.0\"\n      },\n      \"bin\": {\n        \"tailwind\": \"lib/cli.js\",\n        \"tailwindcss\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      }\n    },\n    \"node_modules/tapable\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/tapable/-/tapable-2.2.1.tgz\",\n      \"integrity\": \"sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/text-table\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n      \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\"\n    },\n    \"node_modules/thenify\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz\",\n      \"integrity\": \"sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"any-promise\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/thenify-all\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz\",\n      \"integrity\": \"sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"thenify\": \">= 3.1.0 < 4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/tr46\": {\n      \"version\": \"0.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz\",\n      \"integrity\": \"sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==\"\n    },\n    \"node_modules/trim-lines\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/trim-lines/-/trim-lines-3.0.1.tgz\",\n      \"integrity\": \"sha512-kRj8B+YHZCc9kQYdWfJB2/oUl9rA99qbowYYBtr4ui4mZyAQ2JpvVBd/6U2YloATfqBhBTSMhTpgBHtU0Mf3Rg==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/trough\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/trough/-/trough-2.2.0.tgz\",\n      \"integrity\": \"sha512-tmMpK00BjZiUyVyvrBK7knerNgmgvcV/KLVyuma/SC+TQN167GrMRciANTz09+k3zW8L8t60jWO1GpfkZdjTaw==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/ts-api-utils\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.3.0.tgz\",\n      \"integrity\": \"sha512-UQMIo7pb8WRomKR1/+MFVLTroIvDVtMX3K6OUir8ynLyzB8Jeriont2bTAtmNPa1ekAgN7YPDyf6V+ygrdU+eQ==\",\n      \"engines\": {\n        \"node\": \">=16\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \">=4.2.0\"\n      }\n    },\n    \"node_modules/ts-interface-checker\": {\n      \"version\": \"0.1.13\",\n      \"resolved\": \"https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz\",\n      \"integrity\": \"sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==\",\n      \"dev\": true\n    },\n    \"node_modules/tsconfig-paths\": {\n      \"version\": \"3.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz\",\n      \"integrity\": \"sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==\",\n      \"dependencies\": {\n        \"@types/json5\": \"^0.0.29\",\n        \"json5\": \"^1.0.2\",\n        \"minimist\": \"^1.2.6\",\n        \"strip-bom\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"2.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz\",\n      \"integrity\": \"sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==\",\n      \"license\": \"0BSD\"\n    },\n    \"node_modules/type-check\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n      \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typed-array-buffer\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.2.tgz\",\n      \"integrity\": \"sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/typed-array-byte-length\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.1.tgz\",\n      \"integrity\": \"sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-proto\": \"^1.0.3\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-byte-offset\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.2.tgz\",\n      \"integrity\": \"sha512-Ous0vodHa56FviZucS2E63zkgtgrACj7omjwd/8lTEMEPFFyjfixMZ1ZXenpgCFBBt4EC1J2XsyVS2gkG0eTFA==\",\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-proto\": \"^1.0.3\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-length\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.6.tgz\",\n      \"integrity\": \"sha512-/OxDN6OtAk5KBpGb28T+HZc2M+ADtvRxXrKKbUwtsLgdoxgX13hyy7ek6bFRl5+aBs2yZzB0c4CnQfAtVypW/g==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-proto\": \"^1.0.3\",\n        \"is-typed-array\": \"^1.1.13\",\n        \"possible-typed-array-names\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.4.3.tgz\",\n      \"integrity\": \"sha512-KrPd3PKaCLr78MalgiwJnA25Nm8HAmdwN3mYUYZgG/wizIo9EainNVQI9/yDavtVFRN2h3k8uf3GLHuhDMgEHg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    },\n    \"node_modules/unbox-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-bigints\": \"^1.0.2\",\n        \"has-symbols\": \"^1.0.3\",\n        \"which-boxed-primitive\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"5.26.5\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz\",\n      \"integrity\": \"sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==\"\n    },\n    \"node_modules/unified\": {\n      \"version\": \"10.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/unified/-/unified-10.1.2.tgz\",\n      \"integrity\": \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"bail\": \"^2.0.0\",\n        \"extend\": \"^3.0.0\",\n        \"is-buffer\": \"^2.0.0\",\n        \"is-plain-obj\": \"^4.0.0\",\n        \"trough\": \"^2.0.0\",\n        \"vfile\": \"^5.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-generated\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-generated/-/unist-util-generated-2.0.1.tgz\",\n      \"integrity\": \"sha512-qF72kLmPxAw0oN2fwpWIqbXAVyEqUzDHMsbtPvOudIlUzXYFIeQIuxXQCRCFh22B7cixvU0MG7m3MW8FTq/S+A==\",\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-is\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-is/-/unist-util-is-5.2.1.tgz\",\n      \"integrity\": \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-position\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-position/-/unist-util-position-4.0.4.tgz\",\n      \"integrity\": \"sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-position-from-estree\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-position-from-estree/-/unist-util-position-from-estree-1.1.2.tgz\",\n      \"integrity\": \"sha512-poZa0eXpS+/XpoQwGwl79UUdea4ol2ZuCYguVaJS4qzIOMDzbqz8a3erUCOmubSZkaOuGamb3tX790iwOIROww==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-remove-position\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-remove-position/-/unist-util-remove-position-4.0.2.tgz\",\n      \"integrity\": \"sha512-TkBb0HABNmxzAcfLf4qsIbFbaPDvMO6wa3b3j4VcEzFVaw1LBKwnW4/sRJ/atSLSzoIg41JWEdnE7N6DIhGDGQ==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"unist-util-visit\": \"^4.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-stringify-position\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-3.0.3.tgz\",\n      \"integrity\": \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-visit\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-visit/-/unist-util-visit-4.1.2.tgz\",\n      \"integrity\": \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"unist-util-is\": \"^5.0.0\",\n        \"unist-util-visit-parents\": \"^5.1.1\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-visit-parents\": {\n      \"version\": \"5.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-visit-parents/-/unist-util-visit-parents-5.1.3.tgz\",\n      \"integrity\": \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"unist-util-is\": \"^5.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/universalify\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz\",\n      \"integrity\": \"sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      }\n    },\n    \"node_modules/update-browserslist-db\": {\n      \"version\": \"1.0.13\",\n      \"resolved\": \"https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.13.tgz\",\n      \"integrity\": \"sha512-xebP81SNcPuNpPP3uzeW1NYXxI3rxyJzF3pD6sH4jE7o/IX+WtSpwnVU+qIsDPyk0d3hmFQ7mjqc6AtV604hbg==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"escalade\": \"^3.1.1\",\n        \"picocolors\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"update-browserslist-db\": \"cli.js\"\n      },\n      \"peerDependencies\": {\n        \"browserslist\": \">= 4.21.0\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/url-join\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/url-join/-/url-join-4.0.1.tgz\",\n      \"integrity\": \"sha512-jk1+QP6ZJqyOiuEI9AEWQfju/nB2Pw466kbA0LEZljHwKeMgd9WrAEgEGxjPDD2+TNbbb37rTyhEfrCXfuKXnA==\"\n    },\n    \"node_modules/util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n      \"integrity\": \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\",\n      \"dev\": true\n    },\n    \"node_modules/uuid\": {\n      \"version\": \"11.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-11.1.0.tgz\",\n      \"integrity\": \"sha512-0/A9rDy9P7cJ+8w1c9WD9V//9Wj15Ce2MPz8Ri6032usz+NfePxx5AcN3bN+r6ZL6jEo066/yNYB3tn4pQEx+A==\",\n      \"funding\": [\n        \"https://github.com/sponsors/broofa\",\n        \"https://github.com/sponsors/ctavan\"\n      ],\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"uuid\": \"dist/esm/bin/uuid\"\n      }\n    },\n    \"node_modules/uvu\": {\n      \"version\": \"0.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/uvu/-/uvu-0.5.6.tgz\",\n      \"integrity\": \"sha512-+g8ENReyr8YsOc6fv/NVJs2vFdHBnBNdfE49rshrTzDWOlUx4Gq7KOS2GD8eqhy2j+Ejq29+SbKH8yjkAqXqoA==\",\n      \"dependencies\": {\n        \"dequal\": \"^2.0.0\",\n        \"diff\": \"^5.0.0\",\n        \"kleur\": \"^4.0.3\",\n        \"sade\": \"^1.7.3\"\n      },\n      \"bin\": {\n        \"uvu\": \"bin.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/vfile\": {\n      \"version\": \"5.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/vfile/-/vfile-5.3.7.tgz\",\n      \"integrity\": \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"is-buffer\": \"^2.0.0\",\n        \"unist-util-stringify-position\": \"^3.0.0\",\n        \"vfile-message\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/vfile-message\": {\n      \"version\": \"3.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/vfile-message/-/vfile-message-3.1.4.tgz\",\n      \"integrity\": \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"unist-util-stringify-position\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/webidl-conversions\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz\",\n      \"integrity\": \"sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==\"\n    },\n    \"node_modules/whatwg-url\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz\",\n      \"integrity\": \"sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==\",\n      \"dependencies\": {\n        \"tr46\": \"~0.0.3\",\n        \"webidl-conversions\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/which-boxed-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==\",\n      \"dependencies\": {\n        \"is-bigint\": \"^1.0.1\",\n        \"is-boolean-object\": \"^1.1.0\",\n        \"is-number-object\": \"^1.0.4\",\n        \"is-string\": \"^1.0.5\",\n        \"is-symbol\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-builtin-type\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.1.3.tgz\",\n      \"integrity\": \"sha512-YmjsSMDBYsM1CaFiayOVT06+KJeXf0o5M/CAd4o1lTadFAtacTUM49zoYxr/oroopFDfhvN6iEcBxUyc3gvKmw==\",\n      \"dependencies\": {\n        \"function.prototype.name\": \"^1.1.5\",\n        \"has-tostringtag\": \"^1.0.0\",\n        \"is-async-function\": \"^2.0.0\",\n        \"is-date-object\": \"^1.0.5\",\n        \"is-finalizationregistry\": \"^1.0.2\",\n        \"is-generator-function\": \"^1.0.10\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-weakref\": \"^1.0.2\",\n        \"isarray\": \"^2.0.5\",\n        \"which-boxed-primitive\": \"^1.0.2\",\n        \"which-collection\": \"^1.0.1\",\n        \"which-typed-array\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-collection\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz\",\n      \"integrity\": \"sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==\",\n      \"dependencies\": {\n        \"is-map\": \"^2.0.3\",\n        \"is-set\": \"^2.0.3\",\n        \"is-weakmap\": \"^2.0.2\",\n        \"is-weakset\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-typed-array\": {\n      \"version\": \"1.1.15\",\n      \"resolved\": \"https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.15.tgz\",\n      \"integrity\": \"sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==\",\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^6.1.0\",\n        \"string-width\": \"^5.0.1\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs\": {\n      \"name\": \"wrap-ansi\",\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-styles\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\"\n    },\n    \"node_modules/ws\": {\n      \"version\": \"8.16.0\",\n      \"resolved\": \"https://registry.npmjs.org/ws/-/ws-8.16.0.tgz\",\n      \"integrity\": \"sha512-HS0c//TP7Ina87TfiPUz1rQzMhHrl/SG2guqRcTOIUYD2q8uhUdNHZYJUaQ8aTGPzCh+c6oawMKW35nFl1dxyQ==\",\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"bufferutil\": \"^4.0.1\",\n        \"utf-8-validate\": \">=5.0.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"bufferutil\": {\n          \"optional\": true\n        },\n        \"utf-8-validate\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/xtend\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz\",\n      \"integrity\": \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\",\n      \"engines\": {\n        \"node\": \">=0.4\"\n      }\n    },\n    \"node_modules/yaml\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-2.4.1.tgz\",\n      \"integrity\": \"sha512-pIXzoImaqmfOrL7teGUBt/T7ZDnyeGBWyXQBvOVhLkWLN37GXv8NMLK406UY6dS51JfcQHsmcW5cJ441bHg6Lg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"yaml\": \"bin.mjs\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/zod\": {\n      \"version\": \"3.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/zod/-/zod-3.22.4.tgz\",\n      \"integrity\": \"sha512-iC+8Io04lddc+mVqQ9AZ7OQ2MrUKGN+oIQyq1vemgt46jwCwLfhq7/pwnBnNXXXZb8VTVLKwp9EDkx+ryxIWmg==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/colinhacks\"\n      }\n    },\n    \"node_modules/zwitch\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/zwitch/-/zwitch-2.0.4.tgz\",\n      \"integrity\": \"sha512-bXE4cR/kVZhKZX/RjPEflHaKVhUVl85noU3v6b8apfQEc1x4A+zBxjZ4lN8LqGd6WZ3dl98pY4o717VFmoPp+A==\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    }\n  }\n}\n"
    },
    {
      "filepath": "package.json",
      "content": "{\n  \"name\": \"ship-fast-code\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"postbuild\": \"next-sitemap\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"@headlessui/react\": \"^1.7.18\",\n    \"@mdx-js/loader\": \"^2.3.0\",\n    \"@mdx-js/react\": \"^2.3.0\",\n    \"@next/mdx\": \"^13.5.6\",\n    \"@supabase/auth-helpers-nextjs\": \"^0.8.7\",\n    \"@supabase/supabase-js\": \"^2.41.1\",\n    \"axios\": \"^1.6.8\",\n    \"crisp-sdk-web\": \"^1.0.22\",\n    \"dotenv\": \"^16.5.0\",\n    \"eslint\": \"8.47.0\",\n    \"eslint-config-next\": \"13.4.19\",\n    \"form-data\": \"^4.0.0\",\n    \"framer-motion\": \"^12.10.1\",\n    \"fs-extra\": \"^11.3.0\",\n    \"mailgun.js\": \"^9.4.1\",\n    \"next\": \"^15.3.2\",\n    \"next-plausible\": \"^3.12.0\",\n    \"next-sitemap\": \"^4.2.3\",\n    \"nextjs-toploader\": \"^1.6.11\",\n    \"nodemailer\": \"^6.9.13\",\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-hot-toast\": \"^2.4.1\",\n    \"react-syntax-highlighter\": \"^15.5.0\",\n    \"react-tooltip\": \"^5.26.3\",\n    \"stripe\": \"^13.11.0\",\n    \"uuid\": \"^11.1.0\",\n    \"zod\": \"^3.22.4\"\n  },\n  \"devDependencies\": {\n    \"@types/dotenv\": \"^6.1.1\",\n    \"@types/jest\": \"^29.5.12\",\n    \"@types/mdx\": \"^2.0.12\",\n    \"@types/mongoose\": \"^5.11.97\",\n    \"@types/node\": \"^20.12.2\",\n    \"@types/react\": \"^18.2.73\",\n    \"@types/react-dom\": \"^18.2.23\",\n    \"@types/react-syntax-highlighter\": \"^15.5.11\",\n    \"@types/uuid\": \"^10.0.0\",\n    \"autoprefixer\": \"^10.4.19\",\n    \"daisyui\": \"^4.10.1\",\n    \"postcss\": \"^8.4.38\",\n    \"tailwindcss\": \"^3.4.3\",\n    \"typescript\": \"^5.4.3\"\n  }\n}\n"
    },
    {
      "filepath": ".env",
      "content": "SUPABASE_URL=https://rvwvnralrlsdtugtgict.supabase.co\nSUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ2d3ZucmFscmxzZHR1Z3RnaWN0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NTQ0NzM0NCwiZXhwIjoyMDYxMDIzMzQ0fQ.hFRjn5zq24WmKEoCLbWDRUY6dUdEjlPS-c4OemCaFM4\nNEXT_PUBLIC_SUPABASE_URL=https://rvwvnralrlsdtugtgict.supabase.co\nNEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ2d3ZucmFscmxzZHR1Z3RnaWN0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU0NDczNDQsImV4cCI6MjA2MTAyMzM0NH0.6pBET5OCcZ8hfJrexg83vtXhmes9bnk7iFz3wCLHGWc\n\n\n# -----------------------------------------------------------------------------\n# Mailgun: https://shipfa.st/docs/features/emails\n# -----------------------------------------------------------------------------\nEMAIL_SERVER=\nMAILGUN_API_KEY=\n\n\n\n# -----------------------------------------------------------------------------\n# Stripe: https://shipfa.st/docs/features/payments\n# -----------------------------------------------------------------------------\nSTRIPE_PUBLIC_KEY=\nSTRIPE_SECRET_KEY=\nSTRIPE_WEBHOOK_SECRET="
    },
    {
      "filepath": "middleware.js",
      "content": "import { createMiddlewareClient } from \"@supabase/auth-helpers-nextjs\";\nimport { NextResponse } from \"next/server\";\n\n// The middleware is used to refresh the user's session before loading Server Component routes\nexport async function middleware(req) {\n  const res = NextResponse.next();\n  const supabase = createMiddlewareClient({ req, res });\n  await supabase.auth.getSession();\n  return res;\n}\n"
    },
    {
      "filepath": "tsconfig.json",
      "content": "{\n  \"compilerOptions\": {\n    \"lib\": [\n      \"dom\",\n      \"dom.iterable\",\n      \"esnext\"\n    ],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": false,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"incremental\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"noImplicitAny\": true,\n    \"jsx\": \"preserve\",\n    \"paths\": {\n      \"@/*\": [\n        \"./*\"\n      ]\n    },\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"target\": \"ES2017\"\n  },\n  \"include\": [\n    \"next-env.d.ts\",\n    \"**/*.ts\",\n    \"**/*.tsx\",\n    \".next/types/**/*.ts\"\n  ],\n  \"exclude\": [\n    \"node_modules\"\n  ]\n}\n"
    },
    {
      "filepath": ".env.example",
      "content": "# -----------------------------------------------------------------------------\n# Mailgun: https://shipfa.st/docs/features/emails\n# -----------------------------------------------------------------------------\nEMAIL_SERVER=\nMAILGUN_API_KEY=\n\n# -----------------------------------------------------------------------------\n# Database URI: https://shipfa.st/docs/features/supabase\n# -----------------------------------------------------------------------------\nNEXT_PUBLIC_SUPABASE_URL=\nNEXT_PUBLIC_SUPABASE_ANON_KEY=\nSUPABASE_SERVICE_ROLE_KEY=\n\n# -----------------------------------------------------------------------------\n# Stripe: https://shipfa.st/docs/features/payments\n# -----------------------------------------------------------------------------\nSTRIPE_PUBLIC_KEY=\nSTRIPE_SECRET_KEY=\nSTRIPE_WEBHOOK_SECRET="
    },
    {
      "filepath": "config.ts",
      "content": "import themes from \"daisyui/src/theming/themes\";\nimport { ConfigProps } from \"./types/config\";\n\nconst config = {\n  // REQUIRED\n  appName: \"ShipFast\",\n  // REQUIRED: a short description of your app for SEO tags (can be overwritten)\n  appDescription:\n    \"The NextJS boilerplate with all you need to build your SaaS, AI tool, or any other web app.\",\n  // REQUIRED (no https://, not trialing slash at the end, just the naked domain)\n  domainName: \"shipfa.st\",\n  crisp: {\n    // Crisp website ID. IF YOU DON'T USE CRISP: just remove this => Then add a support email in this config file (mailgun.supportEmail) otherwise customer support won't work.\n    id: \"\",\n    // Hide Crisp by default, except on route \"/\". Crisp is toggled with <ButtonSupport/>. If you want to show Crisp on every routes, just remove this below\n    onlyShowOnRoutes: [\"/\"],\n  },\n  stripe: {\n    // Create multiple plans in your Stripe dashboard, then add them here. You can add as many plans as you want, just make sure to add the priceId\n    plans: [\n      {\n        // REQUIRED \u2014 we use this to find the plan in the webhook (for instance if you want to update the user's credits based on the plan)\n        priceId:\n          process.env.NODE_ENV === \"development\"\n            ? \"price_1Niyy5AxyNprDp7iZIqEyD2h\"\n            : \"price_456\",\n        //  REQUIRED - Name of the plan, displayed on the pricing page\n        name: \"Starter\",\n        // A friendly description of the plan, displayed on the pricing page. Tip: explain why this plan and not others\n        description: \"Perfect for small projects\",\n        // The price you want to display, the one user will be charged on Stripe.\n        price: 99,\n        // If you have an anchor price (i.e. $29) that you want to display crossed out, put it here. Otherwise, leave it empty\n        priceAnchor: 149,\n        features: [\n          {\n            name: \"NextJS boilerplate\",\n          },\n          { name: \"User oauth\" },\n          { name: \"Database\" },\n          { name: \"Emails\" },\n        ],\n      },\n      {\n        priceId:\n          process.env.NODE_ENV === \"development\"\n            ? \"price_1O5KtcAxyNprDp7iftKnrrpw\"\n            : \"price_456\",\n        // This plan will look different on the pricing page, it will be highlighted. You can only have one plan with isFeatured: true\n        isFeatured: true,\n        name: \"Advanced\",\n        description: \"You need more power\",\n        price: 149,\n        priceAnchor: 299,\n        features: [\n          {\n            name: \"NextJS boilerplate\",\n          },\n          { name: \"User oauth\" },\n          { name: \"Database\" },\n          { name: \"Emails\" },\n          { name: \"1 year of updates\" },\n          { name: \"24/7 support\" },\n        ],\n      },\n    ],\n  },\n  aws: {\n    // If you use AWS S3/Cloudfront, put values in here\n    bucket: \"bucket-name\",\n    bucketUrl: `https://bucket-name.s3.amazonaws.com/`,\n    cdn: \"https://cdn-id.cloudfront.net/\",\n  },\n  mailgun: {\n    // subdomain to use when sending emails, if you don't have a subdomain, just remove it. Highly recommended to have one (i.e. mg.yourdomain.com or mail.yourdomain.com)\n    subdomain: \"mg\",\n    // REQUIRED \u2014 Email 'From' field to be used when sending magic login links\n    fromNoReply: `ShipFast <noreply@mg.shipfa.st>`,\n    // REQUIRED \u2014 Email 'From' field to be used when sending other emails, like abandoned carts, updates etc..\n    fromAdmin: `Marc at ShipFast <marc@mg.shipfa.st>`,\n    // Email shown to customer if need support. Leave empty if not needed => if empty, set up Crisp above, otherwise you won't be able to offer customer support.\"\n    supportEmail: \"marc@mg.shipfa.st\",\n    // When someone replies to supportEmail sent by the app, forward it to the email below (otherwise it's lost). If you set supportEmail to empty, this will be ignored.\n    forwardRepliesTo: \"marc.louvion@gmail.com\",\n  },\n  colors: {\n    // REQUIRED \u2014 The DaisyUI theme to use (added to the main layout.js). Leave blank for default (light & dark mode). If you any other theme than light/dark, you need to add it in config.tailwind.js in daisyui.themes.\n    theme: \"light\",\n    // REQUIRED \u2014 This color will be reflected on the whole app outside of the document (loading bar, Chrome tabs, etc..). By default it takes the primary color from your DaisyUI theme (make sure to update your the theme name after \"data-theme=\")\n    // OR you can just do this to use a custom color: main: \"#f37055\". HEX only.\n    main: themes[\"light\"][\"primary\"],\n  },\n  auth: {\n    // REQUIRED \u2014 the path to log in users. It's use to protect private routes (like /dashboard). It's used in apiClient (/libs/api.js) upon 401 errors from our API\n    loginUrl: \"/signin\",\n    // REQUIRED \u2014 the path you want to redirect users after successfull login (i.e. /dashboard, /private). This is normally a private page for users to manage their accounts. It's used in apiClient (/libs/api.js) upon 401 errors from our API & in ButtonSignin.js\n    callbackUrl: \"/dashboard\",\n  },\n} as ConfigProps;\n\nexport default config;\n"
    },
    {
      "filepath": "postcss.config.js",
      "content": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n"
    },
    {
      "filepath": ".eslintrc.json",
      "content": "{\n  \"extends\": [\"next/core-web-vitals\", \"eslint:recommended\"],\n  \"env\": {\n    \"browser\": true,\n    \"node\": true,\n    \"es6\": true\n  },\n  \"rules\": {\n    // Your specific rules.\n    \"no-unused-vars\": \"warn\"\n  }\n}\n"
    },
    {
      "filepath": ".cursor/rules/naming-conventions.mdc",
      "content": "---\ndescription:\nglobs:\nalwaysApply: false\n---\n"
    },
    {
      "filepath": ".cursor/rules/performance-optimization.mdc",
      "content": "---\ndescription:\nglobs:\nalwaysApply: false\n---\n"
    },
    {
      "filepath": ".cursor/rules/ui-styling.mdc",
      "content": "---\ndescription:\nglobs:\nalwaysApply: false\n---\n"
    },
    {
      "filepath": ".cursor/rules/project-structure.mdc",
      "content": "---\ndescription:\nglobs:\nalwaysApply: false\n---\n"
    },
    {
      "filepath": ".cursor/rules/key-conventions.mdc",
      "content": "---\ndescription:\nglobs:\nalwaysApply: false\n---\n"
    },
    {
      "filepath": ".cursor/rules/typescript-usage.mdc",
      "content": "---\ndescription:\nglobs:\nalwaysApply: false\n---\n"
    },
    {
      "filepath": ".cursor/rules/code-style.mdc",
      "content": "---\ndescription: \nglobs: \nalwaysApply: false\n---\n# Code Style and Structure\n\n- Write concise, technical TypeScript code with accurate examples.\n- Use functional and declarative programming patterns; avoid classes.\n- Prefer iteration and modularization over code duplication.\n- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).\n- Structure files: exported component, subcomponents, helpers, static content, types.\n\nFile structure for components:\n1. Exported component\n2. Subcomponents\n3. Helper functions\n4. Static content\n5. Types\n\nAlways follow these patterns when modifying or creating new code.\n"
    },
    {
      "filepath": ".cursor/rules/syntax-formatting.mdc",
      "content": "---\ndescription:\nglobs:\nalwaysApply: false\n---\n"
    },
    {
      "filepath": "types/next-auth.d.ts",
      "content": "import NextAuth, { DefaultSession } from 'next-auth';\n\ndeclare module 'next-auth' {\n  /**\n   * Returned by `useSession`, `getSession` and received as a prop on the `SessionProvider` React Context\n   */\n  interface Session {\n    user: {\n      /** The user's id. */\n      id: string;\n    } & DefaultSession['user'];\n  }\n}\n"
    },
    {
      "filepath": "types/index.ts",
      "content": "export * from \"./config\";\n"
    },
    {
      "filepath": "types/config.ts",
      "content": "export type Theme =\n  | \"light\"\n  | \"dark\"\n  | \"cupcake\"\n  | \"bumblebee\"\n  | \"emerald\"\n  | \"corporate\"\n  | \"synthwave\"\n  | \"retro\"\n  | \"cyberpunk\"\n  | \"valentine\"\n  | \"halloween\"\n  | \"garden\"\n  | \"forest\"\n  | \"aqua\"\n  | \"lofi\"\n  | \"pastel\"\n  | \"fantasy\"\n  | \"wireframe\"\n  | \"black\"\n  | \"luxury\"\n  | \"dracula\"\n  | \"\";\n\nexport interface ConfigProps {\n  appName: string;\n  appDescription: string;\n  domainName: string;\n  crisp: {\n    id?: string;\n    onlyShowOnRoutes?: string[];\n  };\n  stripe: {\n    plans: {\n      isFeatured?: boolean;\n      priceId: string;\n      name: string;\n      description?: string;\n      price: number;\n      priceAnchor?: number;\n      features: {\n        name: string;\n      }[];\n    }[];\n  };\n  aws?: {\n    bucket?: string;\n    bucketUrl?: string;\n    cdn?: string;\n  };\n  mailgun: {\n    subdomain: string;\n    fromNoReply: string;\n    fromAdmin: string;\n    supportEmail?: string;\n    forwardRepliesTo?: string;\n  };\n  colors: {\n    theme: Theme;\n    main: string;\n  };\n  auth: {\n    loginUrl: string;\n    callbackUrl: string;\n  };\n}\n"
    },
    {
      "filepath": "app/layout.tsx",
      "content": "import { ReactNode } from \"react\";\nimport { Inter } from \"next/font/google\";\nimport { Viewport } from \"next\";\nimport PlausibleProvider from \"next-plausible\";\nimport { getSEOTags } from \"@/libs/seo\";\nimport ClientLayout from \"@/components/LayoutClient\";\nimport config from \"@/config\";\nimport \"./globals.css\";\n\nconst font = Inter({ subsets: [\"latin\"] });\n\nexport const viewport: Viewport = {\n  // Will use the primary color of your theme to show a nice theme color in the URL bar of supported browsers\n  themeColor: config.colors.main,\n  width: \"device-width\",\n  initialScale: 1,\n};\n\n// This adds default SEO tags to all pages in our app.\n// You can override them in each page passing params to getSOTags() function.\nexport const metadata = getSEOTags();\n\nexport default function RootLayout({ children }: { children: ReactNode }) {\n  return (\n    <html lang=\"en\" data-theme={config.colors.theme} className={font.className}>\n      {config.domainName && (\n        <head>\n          <PlausibleProvider domain={config.domainName} />\n        </head>\n      )}\n      <body>\n        {/* ClientLayout contains all the client wrappers (Crisp chat support, toast messages, tooltips, etc.) */}\n        <ClientLayout>{children}</ClientLayout>\n      </body>\n    </html>\n  );\n}\n"
    },
    {
      "filepath": "app/error.tsx",
      "content": "\"use client\";\n\nimport Link from \"next/link\";\nimport ButtonSupport from \"@/components/ButtonSupport\";\n\n// A simple error boundary to show a nice error page if something goes wrong (Error Boundary)\n// Users can contanct support, go to the main page or try to reset/refresh to fix the error\nexport default function Error({\n  error,\n  reset,\n}: {\n  error: Error;\n  reset: () => void;\n}) {\n  return (\n    <>\n      <div className=\"h-screen w-full flex flex-col justify-center items-center text-center gap-6 p-6\">\n        <div className=\"p-6 bg-white rounded-xl\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            data-name=\"Layer 1\"\n            className=\"w-36 h-36 md:w-64 md:h-64\"\n            viewBox=\"0 0 509.04617 507.58297\"\n          >\n            <path\n              fill=\"#f2f2f2\"\n              d=\"M504.17 454.213c-6.3 13.08-17.91 22.81-30.08 30.72a189.914 189.914 0 0 1-42.66 20.65c-2.06.71-4.14 1.37-6.23 2h-84.51c-.59-.64-1.15-1.31-1.68-2-5.66-7.25-8.72-16.54-7.61-25.64 1.43-11.69 10.31-22.43 21.81-24.91 11.51-2.49 24.63 4.38 28.13 15.63 1.92-21.68 4.14-44.26 15.66-62.72 10.44-16.71 28.51-28.67 48.09-30.81a60.558 60.558 0 0 1 33.48 6.13c.95.48 1.89.98 2.81 1.5a56.015 56.015 0 0 1 16.14 13.77c12.21 15.46 15.2 37.93 6.65 55.68Z\"\n            />\n            <path\n              fill=\"#fff\"\n              d=\"M480.76 386.133a317.08 317.08 0 0 0-90.56 119.45c-.29.66-.58 1.33-.86 2h-3.98c.28-.67.56-1.34.85-2 3.85-9 8.1-17.84 12.77-26.45a321.861 321.861 0 0 1 34.91-51.66 316.97 316.97 0 0 1 44.26-43.95 1.93 1.93 0 0 1 .42-.26 2.032 2.032 0 0 1 2.81 1.5 1.478 1.478 0 0 1-.62 1.37Z\"\n            />\n            <path\n              fill=\"#ffb8b8\"\n              d=\"M167.214 293.587a9.497 9.497 0 0 0-1.203-14.513l-4.796-31.62-19.702 6.201 10.793 28.21a9.549 9.549 0 0 0 14.908 11.722Z\"\n            />\n            <path\n              className=\"fill-primary\"\n              d=\"m146.919 278.711-12.153-56.756a32.5 32.5 0 0 1 9.281-30.393c15.556-14.99 35.55-33.885 42.455-38.772a35.606 35.606 0 0 1 22.277-6.576l.166.018 10.454 9.88-22.773 37.489-34.571 21.66 3.847 55.63Z\"\n            />\n            <rect\n              width={59}\n              height={8}\n              x={134.48}\n              y={201.583}\n              fill=\"#ccc\"\n              rx={4}\n            />\n            <rect\n              width={59}\n              height={8}\n              x={134.48}\n              y={288.583}\n              fill=\"#ccc\"\n              rx={4}\n            />\n            <path\n              fill=\"#ccc\"\n              d=\"M164.48 506.583a2 2 0 0 1-1.992-1.823l-25.496-299a2 2 0 1 1 3.984-.354l23.475 276.252L187.26 205.41a2 2 0 1 1 3.985.344l-24.771 299a2 2 0 0 1-1.99 1.828Z\"\n            />\n            <circle cx={221.715} cy={108.007} r={26.239} fill=\"#ffb8b8\" />\n            <path\n              fill=\"#ffb8b8\"\n              d=\"m143.516 494.591-12.478-3.977 9.402-50.025 18.418 5.87-15.342 48.132z\"\n            />\n            <path\n              fill=\"#2f2e41\"\n              d=\"m142.822 505.66-40.172-12.805.332-1.043a15.829 15.829 0 0 1 19.864-10.262l25.109 8.004Z\"\n            />\n            <path\n              fill=\"#ffb8b8\"\n              d=\"M234.305 494.332h-13.097l-6.233-50.518h19.33v50.518z\"\n            />\n            <path\n              fill=\"#2f2e41\"\n              d=\"M196.45 505.994h40.162V491.09h-25.354a14.826 14.826 0 0 0-14.809 14.81ZM233.922 477.938l-4.42-.66c-13.407-1.997-14.21-2.117-16.339-3.051-1.087-.478-1.163-7.693-.51-48.256.478-29.774 1.075-66.83-.083-86.723a3.5 3.5 0 0 0-6.703-1.18c-9.976 23.037-26.712 74.59-37.787 108.704-3.852 11.866-6.895 21.239-8.82 26.857a4.524 4.524 0 0 1-5.354 2.898c-9.114-2.278-8.504-3.247-21.485-6.604a4.489 4.489 0 0 1-3.282-5.282c2.348-11.072 45.314-190.6 48.603-207.666a4.502 4.502 0 0 1 5.305-3.571c9.674 1.949 15.56 4.017 25.12 6.016 10.315 2.158 20.982 4.39 31.386 6.472a4.463 4.463 0 0 1 2.619 1.605c2.574 3.252 6.392 5.077 10.434 7.01 2.724 1.302-3.45 1.185-1.077 3.063 9.61 7.608-4.21 162.088-12.56 196.978a4.515 4.515 0 0 1-5.047 3.39ZM232.898 130.967c-1.532-6.5 6.212-20.487 4.68-26.987-1.037-4.402-11.388-1.41-13.804-5.233s-6.461-6.921-10.984-6.972c-5.198-.058-10.313 3.798-15.237 2.131-4.978-1.685-6.57-8.503-4.368-13.276s6.942-7.814 11.627-10.197c7.978-4.059 17.266-7.023 25.805-4.337 5.161 1.623 9.477 5.14 13.653 8.58 3.807 3.136 7.678 6.342 10.339 10.495 5.213 8.135 4.899 19.095.444 27.669s-12.574 14.865-21.519 18.517\"\n            />\n            <path\n              className=\"fill-primary\"\n              d=\"M168.47 282.233c2.832-4.73 7.132-26.897 12.434-64.103 3.61-25.4 6.755-51.206 8.316-64.389a6.339 6.339 0 0 1 3.56-5.001q1.518-.734 3.02-1.388c12.922-5.621 26.019-7.484 38.923-5.536a70.619 70.619 0 0 1 34.92 15.91l.117.112.03.158c.056.293 5.476 29.498-5.625 49.23-10.948 19.468-11.076 71.026-11.076 71.544v.663l-.637-.182c-17.032-4.866-82.825 3.648-83.488 3.735l-1.025.133Z\"\n            />\n            <rect\n              width={59}\n              height={8}\n              x={212.48}\n              y={214.583}\n              fill=\"#ccc\"\n              rx={4}\n            />\n            <rect\n              width={59}\n              height={8}\n              x={212.48}\n              y={301.583}\n              fill=\"#ccc\"\n              rx={4}\n            />\n            <path\n              fill=\"#ccc\"\n              d=\"M242.48 507.583a2 2 0 0 1-1.992-1.823l-25.496-287a2 2 0 1 1 3.984-.354l23.475 264.252L265.26 218.41a2 2 0 0 1 3.985.344l-24.771 287a2 2 0 0 1-1.99 1.828Z\"\n            />\n            <path\n              fill=\"#ffb8b8\"\n              d=\"M226.013 302.85a9.497 9.497 0 0 1 8.896-11.53l21.208-23.938 13.17 15.91-24.39 17.818a9.549 9.549 0 0 1-18.884 1.74Z\"\n            />\n            <path\n              className=\"fill-primary\"\n              d=\"m238.36 286.189 33.458-44.61-17.253-36.97 1.253-43.845 14.144-2.613.15.075a35.606 35.606 0 0 1 15.128 17.624c3.142 7.856 9.659 34.581 14.573 55.619a32.5 32.5 0 0 1-8.723 30.557l-41.043 41.043Z\"\n            />\n            <path\n              fill=\"#ccc\"\n              d=\"m98.11 495.178 45.773 11.02a3.922 3.922 0 0 0 4.555-2.125l39.32-104.542a3.221 3.221 0 0 0 .003-2.546 3.644 3.644 0 0 0-2.094-1.961l-34.415-13.143a4.139 4.139 0 0 0-3.374.187 3.511 3.511 0 0 0-1.84 2.252l-.002.005-24.29 92.138-.36.023c-.14.009-14.065.956-20.327 8.472a13.291 13.291 0 0 0-2.949 10.22Z\"\n            />\n            <path\n              fill=\"#3f3d56\"\n              d=\"M496 506.583a.997.997 0 0 1-1 1H1a1 1 0 0 1 0-2h494a.997.997 0 0 1 1 1Z\"\n            />\n            <path\n              fill=\"#b3b3b3\"\n              d=\"m131.05 438.563.21-1.989 41.733 4.42-.211 1.989zM126.801 454.875l.82-1.824 33.583 15.11-.82 1.824zM177.384 426.985l-39.583-13.11.821-1.824 39.583 13.11-.821 1.824zM181.384 417.985l-39.583-19.11.821-1.824 39.583 19.11-.821 1.824zM122.832 470.232l1.299-1.521 28.54 24.38-1.3 1.52zM114.207 477.62l1.821-.827 11.46 25.27-1.822.825z\"\n            />\n            <path\n              fill=\"#f2f2f2\"\n              d=\"M384.34 477.987V22.183c0-6.155.117-12.323 0-18.477-.005-.27 0-.539 0-.808 0-3.86-6-3.867-6 0v455.804c0 6.155-.117 12.323 0 18.477.005.27 0 .539 0 .808 0 3.86 6 3.867 6 0Z\"\n            />\n            <path\n              fill=\"#f2f2f2\"\n              d=\"M417.523 130.291h-72a6.508 6.508 0 0 1-6.5-6.5v-87.5a6.508 6.508 0 0 1 6.5-6.5h72a6.508 6.508 0 0 1 6.5 6.5v87.5a6.508 6.508 0 0 1-6.5 6.5Z\"\n            />\n          </svg>\n        </div>\n\n        <p className=\"font-medium md:text-xl md:font-semibold\">\n          Something went wrong \ud83e\udd72\n        </p>\n\n        <p className=\"text-red-500\">{error?.message}</p>\n\n        <div className=\"flex flex-wrap gap-4 justify-center\">\n          <button className=\"btn btn-sm\" onClick={reset}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-5 h-5\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M15.312 11.424a5.5 5.5 0 01-9.201 2.466l-.312-.311h2.433a.75.75 0 000-1.5H3.989a.75.75 0 00-.75.75v4.242a.75.75 0 001.5 0v-2.43l.31.31a7 7 0 0011.712-3.138.75.75 0 00-1.449-.39zm1.23-3.723a.75.75 0 00.219-.53V2.929a.75.75 0 00-1.5 0V5.36l-.31-.31A7 7 0 003.239 8.188a.75.75 0 101.448.389A5.5 5.5 0 0113.89 6.11l.311.31h-2.432a.75.75 0 000 1.5h4.243a.75.75 0 00.53-.219z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Refresh\n          </button>\n          <ButtonSupport />\n          <Link href=\"/\" className=\"btn btn-sm\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-5 h-5\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M9.293 2.293a1 1 0 011.414 0l7 7A1 1 0 0117 11h-1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-3a1 1 0 00-1-1H9a1 1 0 00-1 1v3a1 1 0 01-1 1H5a1 1 0 01-1-1v-6H3a1 1 0 01-.707-1.707l7-7z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Home\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n}\n"
    },
    {
      "filepath": "app/page.tsx",
      "content": "import { Suspense } from 'react'\nimport Header from \"@/components/Header\";\nimport Hero from \"@/components/Hero\";\nimport Problem from \"@/components/Problem\";\nimport FeaturesAccordion from \"@/components/FeaturesAccordion\";\nimport Pricing from \"@/components/Pricing\";\nimport FAQ from \"@/components/FAQ\";\nimport CTA from \"@/components/CTA\";\nimport Footer from \"@/components/Footer\";\nimport QuizCTA from \"@/app/components/QuizCTA\";\n\nexport default function Home() {\n  return (\n    <>\n      <Suspense>\n        <Header />\n      </Suspense>\n      <main>\n        <Hero />\n        <Problem />\n        <QuizCTA />\n        <FeaturesAccordion />\n        <Pricing />\n        <FAQ />\n        <CTA />\n      </main>\n      <Footer />\n    </>\n  );\n}"
    },
    {
      "filepath": "app/globals.css",
      "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nhtml,\nbody {\n  scroll-behavior: smooth !important;\n}\n\n/* It makes the HTML progress bar filling smooth when value change. */\nprogress::-webkit-progress-value {\n  transition: 0.6s width ease-out;\n}\n\n@layer base {\n  .btn-gradient {\n    @apply !bg-gradient !bg-[length:300%_300%] hover:saturate-[1.2] shadow duration-100 !border-0 !border-transparent !bg-transparent animate-shimmer disabled:!bg-none disabled:!bg-gray-500/30  !text-white;\n  }\n  .btn {\n    @apply !capitalize;\n  }\n  \n  /* Add custom style for drag-over state */\n  .drag-over {\n    border-color: #3b82f6 !important; /* blue-500 */\n    background-color: rgba(219, 234, 254, 0.5) !important; /* blue-100 with opacity */\n    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3) !important; /* blue glow effect */\n    transform: scale(1.02);\n    transition: all 0.2s ease;\n  }\n  \n  /* Additional styles for drag and drop functionality */\n  [data-target-id]:empty.drag-over {\n    background-color: rgba(219, 234, 254, 0.8) !important; /* brighter blue-100 for empty targets */\n  }\n  \n  [data-option-id] {\n    touch-action: none; /* Prevents browsers from handling touch events in ways that interfere with dragging */\n  }\n}\n"
    },
    {
      "filepath": "app/not-found.tsx",
      "content": "import Link from \"next/link\";\nimport ButtonSupport from \"@/components/ButtonSupport\";\n\n// Simple 404 page with a button to go home and a button to contact support\n// Show a cute SVG with your primary color\nexport default function Custom404() {\n  return (\n    <section className=\"relative bg-base-100 text-base-content h-screen w-full flex flex-col justify-center gap-8 items-center p-10\">\n      <div className=\"p-6 bg-white rounded-xl\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"w-56 h-56\"\n          viewBox=\"0 0 860.13137 571.14799\"\n        >\n          <path\n            fill=\"#f2f2f2\"\n            d=\"M435.735 160.527c-7.669-12.684-16.757-26.228-30.99-30.37-16.481-4.796-33.412 4.732-47.774 14.135a1392.157 1392.157 0 0 0-123.893 91.283l.043.493 92.451-6.376c22.265-1.535 45.296-3.283 64.972-13.816 7.467-3.996 14.745-9.335 23.206-9.707 10.511-.463 19.677 6.879 26.88 14.549 42.607 45.37 54.937 114.754 102.738 154.616a1516.995 1516.995 0 0 0-107.633-214.807Z\"\n          />\n          <path\n            fill=\"#e4e4e4\"\n            d=\"M697.636 545.355c-4.711-5.95-6.637-7.343-11.284-13.347q-56.765-73.417-106.708-151.793-33.924-53.23-64.483-108.504-14.549-26.278-28.3-52.969-10.67-20.695-20.864-41.638a841.984 841.984 0 0 1-5.711-12.009c-4.428-9.442-8.774-18.93-13.44-28.244-5.317-10.616-11.789-21.745-21.552-28.877a29.405 29.405 0 0 0-15.319-5.895c-7.948-.513-15.282 2.769-22.176 6.353-50.438 26.301-97.659 59.276-140.37 96.798A730.778 730.778 0 0 0 133.39 331.82c-1.009 1.44-3.393.064-2.375-1.384q6.01-8.498 12.257-16.813a734.817 734.817 0 0 1 187.6-174.986q18.248-11.825 37.182-22.542c6.362-3.603 12.752-7.16 19.251-10.497 6.372-3.272 13.137-6.215 20.416-6.325 24.77-.385 37.595 27.667 46.405 46.542q4.153 8.911 8.406 17.767 16.075 33.62 33.388 66.628 10.684 20.379 21.837 40.52 34.707 62.717 73.778 122.896c34.506 53.143 68.737 100.089 108.046 149.785 1.082 1.375-.852 3.337-1.944 1.943ZM244.982 191.378c-1.44-1.604-2.87-3.209-4.318-4.813-11.422-12.632-23.679-25.118-39.364-32.36a57.11 57.11 0 0 0-23.927-5.547c-8.562.028-16.932 2.274-24.843 5.418-3.74 1.494-7.399 3.19-11.001 4.996-4.116 2.072-8.16 4.281-12.183 6.51q-11.332 6.27-22.369 13.09-21.96 13.572-42.545 29.216-10.671 8.113-20.902 16.758-9.516 8.03-18.646 16.492c-1.302 1.201-3.245-.742-1.944-1.943a441.255 441.255 0 0 1 4.85-4.446q6.875-6.216 13.971-12.193 12.94-10.918 26.549-20.993 21.162-15.676 43.782-29.226 11.304-6.765 22.919-12.962a198.735 198.735 0 0 1 7.095-3.621 113.116 113.116 0 0 1 16.868-6.867 60.006 60.006 0 0 1 25.476-2.502 66.327 66.327 0 0 1 23.505 8.131c15.401 8.608 27.346 21.92 38.97 34.91 1.174 1.32-.76 3.272-1.943 1.952Z\"\n          />\n          <path\n            fill=\"#e4e4e4\"\n            d=\"m560.542 322.285 36.905-13.498 18.323-6.702c5.968-2.183 11.921-4.667 18.09-6.23a28.539 28.539 0 0 1 16.374.208 37.738 37.738 0 0 1 12.77 7.917 103.64 103.64 0 0 1 10.475 11.186c3.99 4.795 7.92 9.64 11.868 14.467q24.442 29.891 48.563 60.042 24.121 30.15 47.92 60.556 23.857 30.48 47.386 61.216 2.882 3.765 5.76 7.534c1.059 1.388 3.449.02 2.374-1.388q-23.702-31.045-47.735-61.835-24.092-30.864-48.516-61.466-24.425-30.601-49.179-60.937-6.167-7.558-12.354-15.099c-3.48-4.24-6.92-8.527-10.737-12.474-7.005-7.245-15.757-13.648-26.234-13.822-6.16-.102-12.121 1.853-17.844 3.923-6.17 2.232-12.325 4.506-18.486 6.76l-37.163 13.592-9.29 3.398c-1.65.603-.937 3.262.73 2.652Z\"\n          />\n          <path\n            fill=\"#f2f2f2\"\n            d=\"M196.443 170.1c-18.754-9.639-42.771-7.75-60.005 4.291a855.847 855.847 0 0 1 97.37 22.726c-13.282-7.784-23.672-19.98-37.365-27.017ZM136.253 174.358l-3.61 2.935a53.444 53.444 0 0 1 3.795-2.902c-.062-.01-.123-.022-.185-.033ZM661.615 322.42c-3.633-4.422-7.56-9.052-12.994-10.849l-5.073.2a575.436 575.436 0 0 0 153.267 175.221l-135.2-164.572ZM346.15 285.94a37.481 37.481 0 0 0 14.93 20.96c2.82 1.92 6.157 3.761 7.122 7.034a8.379 8.379 0 0 1-.873 6.15 24.884 24.884 0 0 1-3.862 5.041l-.136.512c-6.999-4.147-13.657-9.393-17.523-16.551s-4.405-16.539.342-23.146M579.15 488.94a37.481 37.481 0 0 0 14.93 20.96c2.82 1.92 6.157 3.761 7.122 7.034a8.379 8.379 0 0 1-.873 6.15 24.884 24.884 0 0 1-3.862 5.041l-.136.512c-6.999-4.147-13.657-9.393-17.523-16.551s-4.405-16.539.342-23.146M114.15 474.94a37.481 37.481 0 0 0 14.93 20.96c2.82 1.92 6.157 3.761 7.122 7.034a8.379 8.379 0 0 1-.873 6.15 24.884 24.884 0 0 1-3.862 5.041l-.136.512c-6.999-4.147-13.657-9.393-17.523-16.551s-4.405-16.539.342-23.146\"\n          />\n          <circle cx={649.249} cy={51} r={51} className=\"fill-primary\" />\n          <path\n            fill=\"#f0f0f0\"\n            d=\"M741.284 11.87c-24.717-3.34-52.935 10.02-59.341 34.124a21.597 21.597 0 0 0-41.094 2.109l2.83 2.026a372.275 372.275 0 0 0 160.659-.726C787.145 31.334 766 15.21 741.284 11.87ZM635.284 79.87c-24.717-3.34-52.935 10.02-59.341 34.124a21.597 21.597 0 0 0-41.094 2.109l2.83 2.026a372.275 372.275 0 0 0 160.659-.726C681.145 99.334 660 83.21 635.284 79.87Z\"\n          />\n          <path\n            fill=\"#ccc\"\n            d=\"M851.011 92.728a.982.982 0 0 1-.302-.047C586.303 9.063 353.265 19.998 204.33 43.895a1294.017 1294.017 0 0 0-60.403 11.161 1196.246 1196.246 0 0 0-15.597 3.378 1023.104 1023.104 0 0 0-18.532 4.306q-3.873.917-7.595 1.849a972.21 972.21 0 0 0-11.66 2.957 930.173 930.173 0 0 0-13.797 3.671.442.442 0 0 1-.051.015v.001a926.363 926.363 0 0 0-15.323 4.325c-2.698.78-5.304 1.548-7.8 2.307-.278.077-.525.151-.776.227l-.536.164c-.31.094-.617.187-.924.275l-.02.006h.001l-.811.253c-.968.293-1.912.579-2.841.864C23.119 87.22 9.626 92.604 9.493 92.656a1 1 0 1 1-.744-1.856c.134-.053 13.693-5.463 38.327-13.058.932-.286 1.88-.572 2.85-.866l.754-.235c.026-.01.051-.017.078-.025.305-.087.61-.18.92-.273l.536-.164c.268-.08.532-.16.802-.235a593.8 593.8 0 0 1 7.797-2.307 932.235 932.235 0 0 1 15.334-4.328c.017-.006.033-.01.05-.014v-.001a941.379 941.379 0 0 1 13.844-3.685 993.766 993.766 0 0 1 11.68-2.962q3.738-.93 7.61-1.852a1026.011 1026.011 0 0 1 18.563-4.313c5.299-1.183 10.555-2.322 15.622-3.383a1295.424 1295.424 0 0 1 60.497-11.178c149.149-23.932 382.52-34.884 647.299 48.854a1 1 0 0 1-.3 1.953Z\"\n          />\n          <path\n            fill=\"#3f3d56\"\n            d=\"M262.989 419.84a6.73 6.73 0 0 0-1.7-2.67 6.43 6.43 0 0 0-.92-.71c-2.61-1.74-6.51-2.13-8.99 0a5.81 5.81 0 0 0-.69.71q-1.11 1.365-2.28 2.67a88.226 88.226 0 0 1-3.96 4.24c-.39.38-.78.77-1.18 1.15-.23.23-.46.45-.69.67-.88.84-1.78 1.65-2.69 2.45-.48.43-.96.85-1.45 1.26-.73.61-1.46 1.22-2.2 1.81-.07.05-.14.1-.21.16-.02.01-.03.03-.05.04-.01 0-.02 0-.03.02a.179.179 0 0 0-.07.05c-.22.15-.37.25-.48.34.04-.02.08-.05.12-.07-.18.14-.37.28-.55.42a92.853 92.853 0 0 1-5.37 3.69 99.21 99.21 0 0 1-14.22 7.55c-.33.13-.67.27-1.01.4a85.97 85.97 0 0 1-40.85 6.02q-2.13-.165-4.26-.45c-1.64-.24-3.27-.53-4.89-.86a97.932 97.932 0 0 1-18.02-5.44 118.652 118.652 0 0 1-20.66-12.12c-1-.71-2.01-1.42-3.02-2.11 1.15-2.82 2.28-5.64 3.38-8.48.55-1.37 1.08-2.74 1.6-4.12 4.09-10.63 7.93-21.36 11.61-32.13q5.58-16.365 10.53-32.92.51-1.68.99-3.36 2.595-8.745 4.98-17.53c.15-.57.31-1.13.45-1.7q.69-2.52 1.35-5.04c1-3.79-1.26-8.32-5.24-9.23a7.634 7.634 0 0 0-9.22 5.24c-.43 1.62-.86 3.23-1.3 4.85q-3.165 11.745-6.66 23.41l-1.02 3.36q-7.71 25.41-16.93 50.31-1.11 3.015-2.25 6.01c-.37.98-.74 1.96-1.12 2.94-.73 1.93-1.48 3.86-2.23 5.79-.43 1.13-.87 2.26-1.31 3.38-.29.71-.57 1.42-.85 2.12a41.81 41.81 0 0 0-8.81-2.12l-.48-.06a27.397 27.397 0 0 0-7.01.06 23.914 23.914 0 0 0-17.24 10.66c-4.77 7.51-4.71 18.25 1.98 24.63 6.89 6.57 17.32 6.52 25.43 2.41a28.351 28.351 0 0 0 10.52-9.86 50.57 50.57 0 0 0 2.74-4.65c.21.14.42.28.63.43.8.56 1.6 1.13 2.39 1.69a111.738 111.738 0 0 0 14.51 8.91 108.359 108.359 0 0 0 34.62 10.47c.27.03.53.07.8.1 1.33.17 2.67.3 4.01.41a103.782 103.782 0 0 0 55.58-11.36q2.175-1.125 4.31-2.36 3.315-1.92 6.48-4.08c1.15-.78 2.27-1.57 3.38-2.4a101.042 101.042 0 0 0 13.51-11.95q2.355-2.475 4.51-5.11a8.061 8.061 0 0 0 2.2-5.3 7.564 7.564 0 0 0-.5-2.64Zm-165.59 23.82c.21-.15.42-.31.62-.47-.06.15-.35.32-.62.47Zm3.21-3.23c-.23.26-.44.52-.67.78a23.366 23.366 0 0 1-2.25 2.2c-.11.1-.23.2-.35.29a.01.01 0 0 0-.01.01 3.804 3.804 0 0 0-.42.22q-.645.39-1.32.72a17.005 17.005 0 0 1-2.71.75 16.8 16.8 0 0 1-2.13.02h-.02a14.823 14.823 0 0 1-1.45-.4c-.24-.12-.47-.26-.7-.4-.09-.08-.17-.16-.22-.21a2.44 2.44 0 0 1-.27-.29.01.01 0 0 0-.01-.01c-.11-.2-.23-.4-.34-.6a.031.031 0 0 1-.01-.02c-.08-.25-.15-.51-.21-.77a12.51 12.51 0 0 1 .01-1.37 13.467 13.467 0 0 1 .54-1.88 11.068 11.068 0 0 1 .69-1.26c.02-.04.12-.2.23-.38.01-.01.01-.01.01-.02.15-.17.3-.35.46-.51.27-.3.56-.56.85-.83a18.022 18.022 0 0 1 1.75-1.01 19.48 19.48 0 0 1 2.93-.79 24.99 24.99 0 0 1 4.41.04 30.301 30.301 0 0 1 4.1 1.01 36.945 36.945 0 0 1-2.77 4.54c-.04.06-.08.12-.12.17Zm-11.12-3.29a2.18 2.18 0 0 1-.31.39 1.409 1.409 0 0 1 .31-.39Z\"\n          />\n          <path\n            fill=\"#3f3d56\"\n            d=\"m232.929 317.71-.27 9.42q-.285 10.455-.59 20.92-.315 11.775-.66 23.54-.165 6.075-.34 12.15-.465 16.365-.92 32.72c-.03 1.13-.07 2.25-.1 3.38l-.45 16.23q-.255 8.805-.5 17.61-.18 6.6-.37 13.21l-2.7 95.79a7.648 7.648 0 0 1-7.5 7.5 7.561 7.561 0 0 1-7.5-7.5q.75-26.94 1.52-53.88.675-24.36 1.37-48.72l.45-16.06q.345-12.09.68-24.18c.03-1.13.07-2.25.1-3.38.02-.99.05-1.97.08-2.96l1.32-46.96q.27-9.24.52-18.49l.6-21.08c.09-3.09.17-6.17.26-9.26a7.648 7.648 0 0 1 7.5-7.5 7.561 7.561 0 0 1 7.5 7.5ZM644.357 319.791a893.238 893.238 0 0 1-28.161 87.941c-3.007 7.947-6.083 15.877-9.372 23.712l.756-1.791a54.583 54.583 0 0 1-5.59 10.612q-.229.32-.466.636 1.166-1.49.443-.589c-.254.3-.505.602-.768.895a23.664 23.664 0 0 1-2.249 2.204q-.301.257-.612.504l.938-.73c-.109.258-.873.598-1.11.744a18.254 18.254 0 0 1-2.405 1.218l1.791-.756a19.086 19.086 0 0 1-4.23 1.16l1.993-.267a17.02 17.02 0 0 1-4.298.046l1.994.268a14.002 14.002 0 0 1-3.405-.917l1.791.756a12.012 12.012 0 0 1-1.678-.896c-.272-.177-1.106-.809-.015.024 1.133.866.145.075-.088-.155-.194-.192-.37-.4-.56-.595-.882-.905.997 1.556.397.498a18.182 18.182 0 0 1-.878-1.637l.756 1.792a11.925 11.925 0 0 1-.728-2.651l.268 1.993a13.651 13.651 0 0 1-.003-3.404l-.268 1.993a15.964 15.964 0 0 1 .995-3.68l-.756 1.792a16.73 16.73 0 0 1 1.178-2.299 6.73 6.73 0 0 1 .728-1.071c.05.016-1.268 1.513-.57.757.184-.198.355-.406.54-.602.296-.314.613-.6.925-.898 1.045-.994-1.461.966-.256.18a19.049 19.049 0 0 1 2.75-1.5l-1.792.756a20.311 20.311 0 0 1 4.995-1.34l-1.994.268a25.628 25.628 0 0 1 6.46.076l-1.993-.267a33.21 33.21 0 0 1 7.892 2.22l-1.792-.757c5.39 2.314 10.163 5.75 14.928 9.118a111.95 111.95 0 0 0 14.506 8.907 108.388 108.388 0 0 0 34.622 10.474 103.933 103.933 0 0 0 92.586-36.752 8.078 8.078 0 0 0 2.197-5.304 7.632 7.632 0 0 0-2.197-5.303c-2.752-2.526-7.95-3.239-10.607 0a95.636 95.636 0 0 1-8.106 8.727q-2.018 1.914-4.143 3.71-1.213 1.026-2.46 2.011c-.394.31-1.62 1.138.263-.197-.432.306-.845.64-1.27.954a99.269 99.269 0 0 1-20.333 11.565l1.792-.756a96.836 96.836 0 0 1-24.172 6.623l1.994-.268a97.643 97.643 0 0 1-25.753-.038l1.993.268a99.8 99.8 0 0 1-24.857-6.77l1.792.755a116.025 116.025 0 0 1-21.736-12.59 86.877 86.877 0 0 0-11.113-6.995 42.824 42.824 0 0 0-14.438-4.388c-9.44-1.111-19.057 2.565-24.247 10.72-4.775 7.505-4.714 18.244 1.974 24.625 6.888 6.573 17.319 6.517 25.436 2.406 7.817-3.96 12.513-12.186 15.815-19.942 7.43-17.455 14.01-35.314 20.14-53.263q9.096-26.637 16.498-53.813.917-3.366 1.807-6.74c1.001-3.788-1.261-8.32-5.238-9.225a7.633 7.633 0 0 0-9.226 5.238Z\"\n          />\n          <path\n            fill=\"#3f3d56\"\n            d=\"m719.19 317.71-2.7 95.793-2.686 95.294-1.518 53.883a7.565 7.565 0 0 0 7.5 7.5 7.65 7.65 0 0 0 7.5-7.5l2.7-95.793 2.685-95.294 1.518-53.883a7.565 7.565 0 0 0-7.5-7.5 7.65 7.65 0 0 0-7.5 7.5Z\"\n          />\n          <path\n            d=\"M459.591 535.935h2.33V429.893h54.328v-2.322H461.92v-44.745h41.956q-.923-1.173-1.899-2.317H461.92v-29.553a65.378 65.378 0 0 0-2.329-.943v30.496H413.94v-37.865c-.782.036-1.552.09-2.329.155v37.71h-36.42v-28.25a54.63 54.63 0 0 0-2.317 1.092v27.158h-30.615v2.317h30.615v44.744h-30.615v2.323h30.615v106.042h2.317V429.893a36.413 36.413 0 0 1 36.42 36.42v69.622h2.33V429.893h45.651Zm-84.4-108.365v-44.744h36.42v44.745Zm38.748 0v-44.744h.914a44.741 44.741 0 0 1 44.738 44.745Z\"\n            opacity={0.2}\n          />\n          <path\n            fill=\"#3f3d56\"\n            d=\"M445.369 504.14a63.059 63.059 0 0 1-20.05 33.7c-.74.64-1.48 1.26-2.25 1.87q-2.805.255-5.57.52c-1.53.14-3.04.29-4.54.43l-.27.03-.19-1.64-.76-6.64a37.623 37.623 0 0 1-3.3-32.44c2.64-7.12 7.42-13.41 12.12-19.65 6.49-8.62 12.8-17.14 13.03-27.65a60.544 60.544 0 0 1 7.9 13.33 16.432 16.432 0 0 0-5.12 3.77c-.41.45-.82 1.08-.54 1.62.24.46.84.57 1.36.63l3.76.39c1 .11 2 .21 3 .32a63.99 63.99 0 0 1 2.45 12.18 61.189 61.189 0 0 1-1.03 19.23Z\"\n          />\n          <path\n            className=\"fill-primary\"\n            d=\"M478.569 477.93c-5.9 4.29-9.35 10.46-12.03 17.26a16.628 16.628 0 0 0-7.17 4.58c-.41.45-.82 1.08-.54 1.62.24.46.84.57 1.36.63l3.76.39c-2.68 8.04-5.14 16.36-9.88 23.15a36.99 36.99 0 0 1-12.03 10.91 38.492 38.492 0 0 1-4.02 1.99q-7.62.585-14.95 1.25-2.805.255-5.57.52c-1.53.14-3.04.29-4.54.43q-.015-.825 0-1.65a63.304 63.304 0 0 1 15.25-39.86c.45-.52.91-1.03 1.38-1.54a61.792 61.792 0 0 1 16.81-12.7 62.654 62.654 0 0 1 32.17-6.98Z\"\n          />\n          <path\n            className=\"fill-primary\"\n            d=\"m419.229 535.1-1.15 3.4-.58 1.73c-1.53.14-3.04.29-4.54.43l-.27.03-4.96.51c-.43-.5-.86-1.01-1.28-1.53a62.03 62.03 0 0 1 8.07-87.11c-1.32 6.91.22 13.53 2.75 20.1-.27.11-.53.22-.78.34a16.432 16.432 0 0 0-5.12 3.77c-.41.45-.82 1.08-.54 1.62.24.46.84.57 1.36.63l3.76.39c1 .11 2 .21 3 .32l1.41.15c.07.15.13.29.2.44 2.85 6.18 5.92 12.39 7.65 18.83a43.666 43.666 0 0 1 1.02 4.91 37.604 37.604 0 0 1-10 31.04Z\"\n          />\n          <path\n            fill=\"#3f3d56\"\n            d=\"M519.887 390.06c-8.609-16.792-21.946-30.92-37.632-41.303a114.237 114.237 0 0 0-52.563-18.38q-3.69-.335-7.399-.393c-2.921-.043-46.866 12.632-61.587 22.982a114.295 114.295 0 0 0-35.333 39.527 102.5 102.5 0 0 0-12.126 51.634 113.564 113.564 0 0 0 14.703 51.476 110.475 110.475 0 0 0 36.444 38.745c15.338 9.787 30.745 35.736 48.855 36.652 18.246.923 39.054-23.555 55.695-30.987a104.425 104.425 0 0 0 41.725-34.005 110.25 110.25 0 0 0 19.6-48.948c2.573-18.083 1.374-36.733-4.802-54.016a111.86 111.86 0 0 0-5.58-12.983c-1.78-3.506-6.996-4.796-10.261-2.691a7.68 7.68 0 0 0-2.691 10.261q1.568 3.088 2.915 6.278l-.756-1.792a101.15 101.15 0 0 1 6.877 25.539l-.268-1.994a109.229 109.229 0 0 1-.066 28.682l.267-1.994a109.734 109.734 0 0 1-7.554 27.675l.756-1.792a104.212 104.212 0 0 1-6.672 13.098q-1.923 3.186-4.08 6.222c-.632.888-1.283 1.761-1.94 2.631-.855 1.136 1.168-1.483.283-.37-.15.19-.3.38-.452.57q-.681.852-1.382 1.688a93.613 93.613 0 0 1-10.176 10.383q-1.366 1.193-2.778 2.331c-.469.379-.932.773-1.42 1.125.018-.013 1.579-1.2.655-.51-.29.216-.579.435-.87.651q-2.91 2.156-5.974 4.092a103.485 103.485 0 0 1-14.756 7.713l1.792-.756a109.215 109.215 0 0 1-27.597 7.552l1.994-.268a108.154 108.154 0 0 1-28.589.05l1.994.268a99.835 99.835 0 0 1-25.096-6.784l1.792.756a93.643 93.643 0 0 1-13.416-6.991q-3.174-2-6.184-4.248c-.286-.213-.57-.43-.855-.645-.915-.691.658.51.67.518a19.169 19.169 0 0 1-1.534-1.225q-1.454-1.184-2.862-2.422a101.99 101.99 0 0 1-10.493-10.71q-1.213-1.433-2.374-2.91c-.335-.426-.946-1.29.404.53-.177-.24-.362-.475-.541-.713q-.647-.858-1.276-1.728-2.203-3.048-4.188-6.246a109.29 109.29 0 0 1-7.805-15.108l.756 1.791a106.588 106.588 0 0 1-7.34-26.837l.267 1.994a97.866 97.866 0 0 1-.048-25.636l-.268 1.994a94.673 94.673 0 0 1 6.595-23.959l-.757 1.792a101.557 101.557 0 0 1 7.196-13.857q2.065-3.323 4.377-6.484.526-.719 1.063-1.428c.324-.428 1.215-1.494-.306.388.15-.184.293-.374.44-.56q1.269-1.608 2.6-3.165a107.402 107.402 0 0 1 10.883-11.02q1.474-1.293 2.994-2.53.691-.562 1.391-1.113c.187-.147.376-.29.562-.438-1.998 1.59-.555.432-.102.092q3.134-2.348 6.436-4.46a103.644 103.644 0 0 1 15.386-8.109l-1.791.756c7.76-3.258 42.14-10.949 48.394-10.11l-1.994-.267a106.225 106.225 0 0 1 26.72 7.382l-1.792-.756a110.313 110.313 0 0 1 12.6 6.33q3.044 1.783 5.968 3.762 1.383.936 2.738 1.915.677.489 1.346.989c.248.185.494.372.741.558 1.04.779-1.431-1.129-.342-.267a110.843 110.843 0 0 1 10.368 9.253q2.401 2.445 4.637 5.045 1.147 1.335 2.246 2.708c.365.455 1.605 2.1.085.084.372.493.747.983 1.114 1.48a97.977 97.977 0 0 1 8.392 13.537c1.793 3.498 6.987 4.802 10.261 2.691a7.677 7.677 0 0 0 2.69-10.261Z\"\n          />\n          <path\n            fill=\"#3f3d56\"\n            d=\"M432.497 512.456a3.78 3.78 0 0 1-2.74-6.552l.26-1.03-.103-.247c-3.48-8.297-25.685 14.834-26.645 22.632a30.029 30.029 0 0 0 .527 10.328 120.392 120.392 0 0 1-10.952-50.003 116.202 116.202 0 0 1 .72-12.963q.598-5.293 1.658-10.51a121.787 121.787 0 0 1 24.151-51.617c6.874.383 12.898-.664 13.48-13.986.103-2.37 1.86-4.421 2.248-6.756a30.72 30.72 0 0 1-1.98.183l-.623.032-.077.004a3.745 3.745 0 0 1-3.076-6.101l.85-1.046c.43-.538.872-1.065 1.302-1.603a1.865 1.865 0 0 0 .14-.161c.495-.613.99-1.216 1.485-1.829a10.83 10.83 0 0 0-3.55-3.432c-4.96-2.904-11.802-.893-15.384 3.593-3.593 4.486-4.271 10.78-3.023 16.385a43.398 43.398 0 0 0 6.003 13.383c-.27.344-.549.677-.818 1.022a122.574 122.574 0 0 0-12.793 20.268c1.016-7.939-11.412-36.608-16.218-42.68-5.773-7.295-17.611-4.112-18.628 5.135l-.03.268q1.072.604 2.097 1.283a5.127 5.127 0 0 1-2.067 9.33l-.104.016c-9.556 13.644 21.077 49.155 28.745 41.182a125.11 125.11 0 0 0-6.735 31.692 118.664 118.664 0 0 0 .086 19.16l-.032-.226c-1.704-13.882-30.931-34.522-39.466-32.803-4.917.99-9.76.765-9.013 5.725l.036.237a34.442 34.442 0 0 1 3.862 1.861q1.07.605 2.096 1.283a5.127 5.127 0 0 1-2.067 9.33l-.104.016-.215.033c-4.35 14.966 27.907 39.12 47.517 31.434h.011a125.075 125.075 0 0 0 8.402 24.528h30.015c.107-.333.204-.678.301-1.011a34.102 34.102 0 0 1-8.305-.495c2.227-2.732 4.454-5.486 6.68-8.219a1.861 1.861 0 0 0 .14-.161c1.13-1.399 2.27-2.787 3.4-4.185v-.002a49.952 49.952 0 0 0-1.463-12.725Zm-34.37-67.613.015-.022-.016.043Zm-6.65 59.932-.257-.58c.01-.42.01-.84 0-1.27 0-.119-.022-.237-.022-.355.097.742.183 1.484.29 2.227Z\"\n          />\n          <circle cx={95.249} cy={439} r={11} fill=\"#3f3d56\" />\n          <circle cx={227.249} cy={559} r={11} fill=\"#3f3d56\" />\n          <circle cx={728.249} cy={559} r={11} fill=\"#3f3d56\" />\n          <circle cx={755.249} cy={419} r={11} fill=\"#3f3d56\" />\n          <circle cx={723.249} cy={317} r={11} fill=\"#3f3d56\" />\n          <path\n            fill=\"#3f3d56\"\n            d=\"M264.249 419a10.949 10.949 0 1 1-.21-2.16 10.992 10.992 0 0 1 .21 2.16Z\"\n          />\n          <circle cx={484.249} cy={349} r={11} fill=\"#3f3d56\" />\n          <path\n            fill=\"#3f3d56\"\n            d=\"M375.249 349a10.949 10.949 0 1 1-.21-2.16 10.992 10.992 0 0 1 .21 2.16ZM233.249 317a10.949 10.949 0 1 1-.21-2.16 10.992 10.992 0 0 1 .21 2.16Z\"\n          />\n          <circle cx={599.249} cy={443} r={11} fill=\"#3f3d56\" />\n          <circle cx={426.249} cy={338} r={16} fill=\"#3f3d56\" />\n          <path\n            fill=\"#cacaca\"\n            d=\"m858.94 570.84-857.75.308a1.19 1.19 0 1 1 0-2.381l857.75-.308a1.19 1.19 0 0 1 0 2.382Z\"\n          />\n        </svg>\n      </div>\n      <p className=\"text-lg md:text-xl font-semibold\">\n        This page doesn&apos;t exist \ud83d\ude05\n      </p>\n\n      <div className=\"flex flex-wrap gap-4 justify-center\">\n        <Link href=\"/\" className=\"btn btn-sm\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"w-5 h-5\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M9.293 2.293a1 1 0 011.414 0l7 7A1 1 0 0117 11h-1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-3a1 1 0 00-1-1H9a1 1 0 00-1 1v3a1 1 0 01-1 1H5a1 1 0 01-1-1v-6H3a1 1 0 01-.707-1.707l7-7z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          Home\n        </Link>\n\n        <ButtonSupport />\n      </div>\n    </section>\n  );\n}\n"
    },
    {
      "filepath": "app/question-types/page.tsx",
      "content": "'use client';\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { useQuiz } from '../features/quiz/context/QuizContext';\nimport { Quiz, QuestionType } from '../types/quiz';\n\n// Mock quiz metadata\nconst mockQuiz: Quiz = {\n  id: 'question-types-demo',\n  title: 'Question Types Demo',\n  description: 'Demonstration of all available question types',\n  difficulty: 'medium',\n  quiz_topic: 'question-types-demo',\n  created_at: new Date().toISOString(),\n  updated_at: new Date().toISOString(),\n  questions: [],\n};\n\n// Sample questions for each type\nconst questionTypeSamples = [\n  {\n    id: 'single-selection-demo',\n    type: 'single_selection',\n    question: 'Which of these is a cloud service provider?',\n    points: 1,\n    quiz_tag: 'question-types-demo',\n    difficulty: 'easy',\n    explanation: 'AWS (Amazon Web Services) is a cloud service provider.',\n    feedback_correct: 'Correct! AWS is a cloud service provider.',\n    feedback_incorrect: 'Incorrect. AWS is the cloud service provider in this list.',\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    options: [\n      { option_id: 'A', text: 'AWS' },\n      { option_id: 'B', text: 'Windows 11' },\n      { option_id: 'C', text: 'Firefox' },\n      { option_id: 'D', text: 'MS Office' }\n    ],\n    correctAnswerOptionId: 'A'\n  },\n  {\n    id: 'multi-choice-demo',\n    type: 'multi',\n    question: 'Which of these are cloud service providers? (Select all that apply)',\n    points: 2,\n    quiz_tag: 'question-types-demo',\n    difficulty: 'medium',\n    explanation: 'AWS, Azure, and Google Cloud are all cloud service providers.',\n    feedback_correct: 'Correct! AWS, Azure, and Google Cloud are all cloud service providers.',\n    feedback_incorrect: 'Incorrect. AWS, Azure, and Google Cloud are the cloud service providers in this list.',\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    options: [\n      { option_id: 'A', text: 'AWS' },\n      { option_id: 'B', text: 'Azure' },\n      { option_id: 'C', text: 'Windows 11' },\n      { option_id: 'D', text: 'Google Cloud' }\n    ],\n    correctAnswerOptionIds: ['A', 'B', 'D']\n  }\n  // More question types can be added here\n];\n\nconst QuestionTypesPage: React.FC = () => {\n  const [selectedType, setSelectedType] = useState<QuestionType | null>(null);\n  \n  const availableTypes: Array<{\n    type: QuestionType;\n    name: string;\n    description: string;\n    available: boolean;\n  }> = [\n    {\n      type: 'single_selection',\n      name: 'Single Selection',\n      description: 'User selects one correct answer from multiple choices.',\n      available: true\n    },\n    {\n      type: 'multi',\n      name: 'Multiple Selection',\n      description: 'User selects multiple correct answers from multiple choices.',\n      available: true\n    },\n    {\n      type: 'drag_and_drop',\n      name: 'Drag and Drop',\n      description: 'User matches items by dragging them to their corresponding targets.',\n      available: false\n    },\n    {\n      type: 'dropdown_selection',\n      name: 'Dropdown Selection',\n      description: 'User selects answers from dropdown menus within text.',\n      available: true // Updated to true\n    },\n    {\n      type: 'order',\n      name: 'Ordering',\n      description: 'User arranges items in the correct sequence.',\n      available: true\n    },\n    {\n      type: 'yes_no',\n      name: 'Yes/No',\n      description: 'User answers a question with yes or no.',\n      available: false\n    },\n    {\n      type: 'yesno_multi',\n      name: 'Multiple Yes/No',\n      description: 'User answers multiple statements with yes or no.',\n      available: false\n    }\n  ];\n  \n  return (\n    <div className=\"min-h-screen bg-custom-light-bg py-12 px-4\">\n      <div className=\"max-w-5xl mx-auto\">\n        <h1 className=\"text-3xl md:text-4xl font-bold text-center mb-12 text-custom-dark-blue\">\n          Available Question Types\n        </h1>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {availableTypes.map((typeInfo) => (\n            <div \n              key={typeInfo.type}\n              className={`bg-white p-6 rounded-lg shadow-lg transition-all duration-300 \n                ${typeInfo.available \n                  ? 'cursor-pointer hover:shadow-xl transform hover:-translate-y-1' \n                  : 'opacity-60 cursor-not-allowed'\n                }`}\n              onClick={() => typeInfo.available && setSelectedType(typeInfo.type)}\n            >\n              <h2 className=\"text-xl font-bold mb-2 text-custom-primary\">{typeInfo.name}</h2>\n              <p className=\"text-gray-600 mb-4\">{typeInfo.description}</p>\n              <div className={`px-4 py-2 rounded-full text-sm font-medium text-center ${\n                typeInfo.available \n                ? 'bg-green-100 text-green-800' \n                : 'bg-gray-100 text-gray-600'\n              }`}>\n                {typeInfo.available ? 'Available' : 'Coming Soon'}\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        {selectedType && (\n          <div className=\"mt-12 bg-white p-8 rounded-lg shadow-lg\">\n            <h2 className=\"text-2xl font-bold mb-6 text-center text-custom-dark-blue\">\n              {availableTypes.find(t => t.type === selectedType)?.name} Example\n            </h2>\n            \n            {/* Display sample question based on selected type */}\n            <div className=\"mb-8\">\n              {/* We would render the sample question here */}\n              <p className=\"text-lg font-medium text-center text-custom-primary\">\n                Click the buttons below to see demos of this question type\n              </p>\n            </div>\n            \n            <div className=\"flex flex-col md:flex-row justify-center gap-4\">\n              <Link\n                href={`/question-types-demo/${selectedType}`}\n                className=\"bg-custom-primary hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-lg transition duration-300 ease-in-out transform hover:scale-105 shadow-lg text-center\"\n              >\n                See Interactive Demo\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionTypesPage;\n"
    },
    {
      "filepath": "app/types/quiz.ts",
      "content": "export type QuestionType =\n  | 'drag_and_drop'\n  | 'dropdown_selection'\n  | 'multi'\n  | 'single_selection'\n  | 'order'\n  | 'yes_no'\n  | 'yesno_multi';\n\nexport type Difficulty = 'easy' | 'medium' | 'hard';\n\nexport interface BaseQuestion {\n  id: string; // UUID\n  type: QuestionType;\n  question: string;\n  points: number;\n  quiz_tag: string; // Corresponds to Quiz.id\n  difficulty: Difficulty;\n  explanation?: string | null;\n  feedback_correct: string;\n  feedback_incorrect: string;\n  created_at: string; // TIMESTAMPTZ\n  updated_at: string; // TIMESTAMPTZ\n}\n\nexport interface SelectionOption {\n  option_id: string;\n  text: string;\n  // Note: The database table `single_selection_options` does not have `question_id` directly in its TS type,\n  // as options will be nested under a question. The `question_id` is for the DB relation.\n}\n\n// Updated SingleSelectionQuestion to include specific properties\nexport interface SingleSelectionQuestion extends BaseQuestion {\n  type: 'single_selection';\n  options: SelectionOption[];\n  // The `single_selection_correct_answer` table stores `option_id` for the correct answer,\n  // linked to the `question_id`.\n  correctAnswerOptionId: string; \n}\n\n// Multi-choice question where users can select multiple answers\nexport interface MultiChoiceQuestion extends BaseQuestion {\n  type: 'multi';\n  options: SelectionOption[];\n  // An array of correct option IDs\n  correctAnswerOptionIds: string[];\n}\n\nexport interface DragAndDropTarget {\n  target_id: string;\n  text: string;\n}\n\nexport interface DragAndDropOption {\n  option_id: string;\n  text: string;\n}\n\nexport interface DragAndDropCorrectPair {\n  option_id: string;\n  target_id: string;\n}\n\n// Drag and drop question where users match options to targets\nexport interface DragAndDropQuestion extends BaseQuestion {\n  type: 'drag_and_drop';\n  targets: DragAndDropTarget[];\n  options: DragAndDropOption[];\n  correctPairs: DragAndDropCorrectPair[];\n}\n\n// New types for OrderQuestion\nexport interface OrderItem {\n  item_id: string;\n  text: string;\n}\n\n// Order question where users arrange items in correct sequence\nexport interface OrderQuestion extends BaseQuestion {\n  type: 'order';\n  items: OrderItem[];\n  correctOrder: string[]; // Array of item_ids in correct order\n}\n\n// Type for order question answers - maps slot names to item IDs\n// e.g. { \"slot_0\": \"item1\", \"slot_1\": \"item2\", \"slot_2\": null }\nexport type OrderQuestionAnswer = Record<string, string | null>;\n\n// New types for DropdownSelectionQuestion\nexport interface DropdownOption {\n  option_id: string;\n  text: string;\n  // is_correct is part of the dropdown_selection_options table schema\n  // but might not be directly exposed to the client in DropdownSelectionQuestion if not needed for rendering all options.\n  // However, the migration script keeps it, and it can be useful for client-side hints or direct display if design changes.\n  is_correct?: boolean; \n}\n\nexport interface DropdownPlaceholderTarget {\n  key: string; // The placeholder text, e.g., \"option_set1\"\n  correctOptionText: string; // The text of the correct option for this placeholder\n}\n\nexport interface DropdownSelectionQuestion extends BaseQuestion {\n  type: 'dropdown_selection';\n  options: DropdownOption[]; // All available options for any dropdown in this question\n  placeholderTargets: Record<string, DropdownPlaceholderTarget>; // Maps placeholder key to its correct target details\n}\n\n// AnyQuestion will be a union of all specific question types\nexport type AnyQuestion = \n  | SingleSelectionQuestion \n  | MultiChoiceQuestion \n  | DragAndDropQuestion\n  | DropdownSelectionQuestion\n  | OrderQuestion; // Added OrderQuestion\n\nexport interface Quiz {\n  id: string; // e.g. azure-a102\n  title: string;\n  description?: string | null;\n  quiz_type?: string | null;\n  settings?: Record<string, any> | null; // JSONB\n  author?: string | null;\n  difficulty: Difficulty;\n  quiz_topic: string; // Usually same as id\n  created_at: string; // TIMESTAMPTZ\n  updated_at: string; // TIMESTAMPTZ\n  questions: AnyQuestion[];\n}"
    },
    {
      "filepath": "app/privacy-policy/page.tsx",
      "content": "import Link from \"next/link\";\nimport { getSEOTags } from \"@/libs/seo\";\nimport config from \"@/config\";\n\n// CHATGPT PROMPT TO GENERATE YOUR PRIVACY POLICY \u2014 replace with your own data \ud83d\udc47\n\n// 1. Go to https://chat.openai.com/\n// 2. Copy paste bellow\n// 3. Replace the data with your own (if needed)\n// 4. Paste the answer from ChatGPT directly in the <pre> tag below\n\n// You are an excellent lawyer.\n\n// I need your help to write a simple privacy policy for my website. Here is some context:\n// - Website: https://shipfa.st\n// - Name: ShipFast\n// - Description: A JavaScript code boilerplate to help entrepreneurs launch their startups faster\n// - User data collected: name, email and payment information\n// - Non-personal data collection: web cookies\n// - Purpose of Data Collection: Order processing\n// - Data sharing: we do not share the data with any other parties\n// - Children's Privacy: we do not collect any data from children\n// - Updates to the Privacy Policy: users will be updated by email\n// - Contact information: marc@shipfa.st\n\n// Please write a simple privacy policy for my site. Add the current date.  Do not add or explain your reasoning. Answer:\n\nexport const metadata = getSEOTags({\n  title: `Privacy Policy | ${config.appName}`,\n  canonicalUrlRelative: \"/privacy-policy\",\n});\n\nconst PrivacyPolicy = () => {\n  return (\n    <main className=\"max-w-xl mx-auto\">\n      <div className=\"p-5\">\n        <Link href=\"/\" className=\"btn btn-ghost\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"w-5 h-5\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M15 10a.75.75 0 01-.75.75H7.612l2.158 1.96a.75.75 0 11-1.04 1.08l-3.5-3.25a.75.75 0 010-1.08l3.5-3.25a.75.75 0 111.04 1.08L7.612 9.25h6.638A.75.75 0 0115 10z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>{\" \"}\n          Back\n        </Link>\n        <h1 className=\"text-3xl font-extrabold pb-6\">\n          Privacy Policy for {config.appName}\n        </h1>\n\n        <pre\n          className=\"leading-relaxed whitespace-pre-wrap\"\n          style={{ fontFamily: \"sans-serif\" }}\n        >\n          {`Last Updated: 2023-08-25\n\nThank you for visiting ShipFast (\"we,\" \"us,\" or \"our\"). This Privacy Policy outlines how we collect, use, and protect your personal and non-personal information when you use our website located at https://shipfa.st (the \"Website\").\n\nBy accessing or using the Website, you agree to the terms of this Privacy Policy. If you do not agree with the practices described in this policy, please do not use the Website.\n\n1. Information We Collect\n\n1.1 Personal Data\n\nWe collect the following personal information from you:\n\nName: We collect your name to personalize your experience and communicate with you effectively.\nEmail: We collect your email address to send you important information regarding your orders, updates, and communication.\nPayment Information: We collect payment details to process your orders securely. However, we do not store your payment information on our servers. Payments are processed by trusted third-party payment processors.\n\n1.2 Non-Personal Data\n\nWe may use web cookies and similar technologies to collect non-personal information such as your IP address, browser type, device information, and browsing patterns. This information helps us to enhance your browsing experience, analyze trends, and improve our services.\n\n2. Purpose of Data Collection\n\nWe collect and use your personal data for the sole purpose of order processing. This includes processing your orders, sending order confirmations, providing customer support, and keeping you updated about the status of your orders.\n\n3. Data Sharing\n\nWe do not share your personal data with any third parties except as required for order processing (e.g., sharing your information with payment processors). We do not sell, trade, or rent your personal information to others.\n\n4. Children's Privacy\n\nShipFast is not intended for children under the age of 13. We do not knowingly collect personal information from children. If you are a parent or guardian and believe that your child has provided us with personal information, please contact us at the email address provided below.\n\n5. Updates to the Privacy Policy\n\nWe may update this Privacy Policy from time to time to reflect changes in our practices or for other operational, legal, or regulatory reasons. Any updates will be posted on this page, and we may notify you via email about significant changes.\n\n6. Contact Information\n\nIf you have any questions, concerns, or requests related to this Privacy Policy, you can contact us at:\n\nEmail: marc@shipfa.st\n\nFor all other inquiries, please visit our Contact Us page on the Website.\n\nBy using ShipFast, you consent to the terms of this Privacy Policy.`}\n        </pre>\n      </div>\n    </main>\n  );\n};\n\nexport default PrivacyPolicy;\n"
    },
    {
      "filepath": "app/features/quiz/index.ts",
      "content": "// Export all components, hooks, and utilities from the quiz feature\n// This makes importing from the feature more convenient\n\n// Context\nexport { QuizProvider, useQuiz } from './context/QuizContext';\n\n// Hooks\nexport { useQuizState } from './hooks/useQuizState';\nexport { useQuizScoring } from './hooks/useQuizScoring';\n\n// Components\nexport { default as QuestionCard } from './components/QuestionCard';\nexport { default as QuestionHeader } from './components/QuestionHeader';\nexport { default as QuestionContent } from './components/QuestionContent';\nexport { default as FeedbackSection } from './components/FeedbackSection';\nexport { default as QuizNavigation } from './components/QuizNavigation';\nexport { default as QuizProgress } from './components/QuizProgress';\nexport { default as QuizCompletionSummary } from './components/QuizCompletionSummary';\n\n// Question Types\nexport { default as QuestionTypeRenderer } from './components/question-types/QuestionTypeRenderer';\nexport { default as SingleSelectionComponent } from './components/question-types/SingleSelectionComponent';\n\n// Services\nexport { QuizService } from './services/quizService';\n\n// Pages\nexport { default as QuizPage } from './pages/QuizPage';\n"
    },
    {
      "filepath": "app/features/quiz/context/QuizContext.tsx",
      "content": "'use client';\n\nimport React, { createContext, useContext, ReactNode } from 'react';\nimport { useQuizState, QuizState, QuizAction } from '../hooks/useQuizState';\nimport { useQuizScoring } from '../hooks/useQuizScoring';\nimport { AnyQuestion } from '../../../types/quiz';\n\n// Define Context Type\ninterface QuizContextType {\n  state: QuizState;\n  dispatch: React.Dispatch<QuizAction>;\n  submitAndScoreAnswer: (question: AnyQuestion, answer: any) => Promise<void>;\n}\n\n// Create the Context\nexport const QuizContext = createContext<QuizContextType | undefined>(undefined);\n\n// QuizProvider Component\ninterface QuizProviderProps {\n  children: ReactNode;\n}\n\nexport const QuizProvider: React.FC<QuizProviderProps> = ({ children }) => {\n  // Use our custom hooks\n  const { state, dispatch } = useQuizState();\n  const { submitAndScoreAnswer } = useQuizScoring(dispatch);\n\n  // Create context value\n  const contextValue: QuizContextType = {\n    state,\n    dispatch,\n    submitAndScoreAnswer\n  };\n\n  return (\n    <QuizContext.Provider value={contextValue}>\n      {children}\n    </QuizContext.Provider>\n  );\n};\n\n// Custom hook to use the QuizContext\nexport const useQuiz = (): QuizContextType => {\n  const context = useContext(QuizContext);\n  if (context === undefined) {\n    throw new Error('useQuiz must be used within a QuizProvider');\n  }\n  return context;\n};\n"
    },
    {
      "filepath": "app/features/quiz/tests/OrderQuestionComponent.test.tsx",
      "content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport OrderQuestionComponent from '../../components/question-types/OrderQuestionComponent';\nimport { OrderQuestion } from '@/app/types/quiz';\n\n// Mock framer-motion to avoid animation issues in tests\njest.mock('framer-motion', () => ({\n  motion: {\n    div: ({ children, ...props }: any) => (\n      <div {...props}>{children}</div>\n    )\n  }\n}));\n\ndescribe('OrderQuestionComponent', () => {\n  // Create a mock question for testing\n  const mockQuestion: OrderQuestion = {\n    id: 'q1',\n    type: 'order',\n    question: 'Place these items in the correct order',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    items: [\n      { item_id: 'i1', text: 'First Item' },\n      { item_id: 'i2', text: 'Second Item' },\n      { item_id: 'i3', text: 'Third Item' },\n      { item_id: 'i4', text: 'Fourth Item' },\n    ],\n    correctOrder: ['i1', 'i2', 'i3', 'i4']\n  };\n\n  const mockOnAnswerSelect = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('renders the component with items in initial order', () => {\n    render(\n      <OrderQuestionComponent \n        question={mockQuestion}\n        onAnswerSelect={mockOnAnswerSelect}\n      />\n    );\n    \n    // Check that all items are rendered\n    expect(screen.getByText('First Item')).toBeInTheDocument();\n    expect(screen.getByText('Second Item')).toBeInTheDocument();\n    expect(screen.getByText('Third Item')).toBeInTheDocument();\n    expect(screen.getByText('Fourth Item')).toBeInTheDocument();\n\n    // Check that the instruction is displayed\n    expect(screen.getByText('Arrange the items in the correct order:')).toBeInTheDocument();\n  });\n\n  it('should disable dragging when submitted', () => {\n    render(\n      <OrderQuestionComponent \n        question={mockQuestion}\n        onAnswerSelect={mockOnAnswerSelect}\n        isSubmitted={true}\n      />\n    );\n    \n    // Get all draggable elements\n    const draggableElements = screen.getAllByText(/Item/);\n    \n    // Check that all elements have draggable=\"false\"\n    draggableElements.forEach(element => {\n      expect(element.parentElement).toHaveAttribute('draggable', 'false');\n    });\n  });\n\n  it('should show feedback styling when requested', () => {\n    // Create a user answer with items in wrong order\n    const userAnswer = ['i2', 'i1', 'i4', 'i3'];\n    \n    render(\n      <OrderQuestionComponent \n        question={mockQuestion}\n        onAnswerSelect={mockOnAnswerSelect}\n        userAnswer={userAnswer}\n        isSubmitted={true}\n        showCorrectAnswer={true}\n      />\n    );\n\n    // Check that the \"Correct Order\" section is displayed\n    expect(screen.getByText('Correct Order:')).toBeInTheDocument();\n  });\n\n  it('should initialize with user answer if provided', () => {\n    // Create a specific user answer order\n    const userAnswer = ['i4', 'i3', 'i2', 'i1'];\n    \n    render(\n      <OrderQuestionComponent \n        question={mockQuestion}\n        onAnswerSelect={mockOnAnswerSelect}\n        userAnswer={userAnswer}\n      />\n    );\n\n    // Check that items appear in the user's order\n    const items = screen.getAllByText(/Item/);\n    expect(items[0].textContent).toBe('Fourth Item');\n    expect(items[1].textContent).toBe('Third Item');\n    expect(items[2].textContent).toBe('Second Item');\n    expect(items[3].textContent).toBe('First Item');\n  });\n\n  // Note: Testing drag and drop interactions is complex and often requires\n  // more sophisticated setup with user-event or custom testing utilities.\n  // For this basic test suite, we'll focus on rendering and props handling.\n});\n"
    },
    {
      "filepath": "app/features/quiz/tests/DragAndDropQuestionComponent.test.tsx",
      "content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport DragAndDropQuestionComponent from '../components/question-types/DragAndDropQuestionComponent';\nimport { DragAndDropQuestion } from '@/app/types/quiz';\n\n// Mock the dataTransfer object\nconst createDragEventWithData = (type: string, data: any) => {\n  const event = new Event(type, { bubbles: true }) as any;\n  event.dataTransfer = {\n    data: {},\n    setData(key: string, value: string) {\n      this.data[key] = value;\n    },\n    getData(key: string) {\n      return this.data[key];\n    },\n    effectAllowed: 'move',\n    dropEffect: 'move',\n  };\n  return event;\n};\n\ndescribe('DragAndDropQuestionComponent', () => {\n  // Create a mock question for testing\n  const mockQuestion: DragAndDropQuestion = {\n    id: 'q1',\n    type: 'drag_and_drop',\n    question: 'Match the items to their correct targets',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    targets: [\n      { target_id: 't1', text: 'Target 1' },\n      { target_id: 't2', text: 'Target 2' },\n    ],\n    options: [\n      { option_id: 'o1', text: 'Option 1' },\n      { option_id: 'o2', text: 'Option 2' },\n    ],\n    correctPairs: [\n      { target_id: 't1', option_id: 'o1' },\n      { target_id: 't2', option_id: 'o2' },\n    ]\n  };\n\n  const mockOnAnswerChange = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    // Mock classList API used by the drag-and-drop functionality\n    Element.prototype.classList = {\n      add: jest.fn(),\n      remove: jest.fn(),\n    } as any;\n  });\n\n  it('renders correctly with initial state', () => {\n    render(\n      <DragAndDropQuestionComponent \n        question={mockQuestion}\n        onAnswerChange={mockOnAnswerChange}\n      />\n    );\n\n    // Check that all targets and options are rendered\n    expect(screen.getByText('Target 1')).toBeInTheDocument();\n    expect(screen.getByText('Target 2')).toBeInTheDocument();\n    expect(screen.getByText('Option 1')).toBeInTheDocument();\n    expect(screen.getByText('Option 2')).toBeInTheDocument();\n    \n    // Available items section should be present\n    expect(screen.getByText('Available Items:')).toBeInTheDocument();\n    \n    // Match items section should be present\n    expect(screen.getByText('Match items to the correct targets:')).toBeInTheDocument();\n  });\n\n  it('renders correctly with pre-filled answers', () => {\n    const userAnswer = {\n      't1': 'o1',\n      't2': null\n    };\n    \n    render(\n      <DragAndDropQuestionComponent \n        question={mockQuestion}\n        onAnswerChange={mockOnAnswerChange}\n        userAnswer={userAnswer}\n      />\n    );\n    \n    // Option 1 should not be in available options (it's placed in target 1)\n    const availableItemsSection = screen.getByText('Available Items:').parentElement;\n    expect(availableItemsSection).not.toContain(screen.getByText('Option 1'));\n    expect(availableItemsSection).toContain(screen.getByText('Option 2'));\n  });\n\n  it('should disable dragging when submitted', () => {\n    render(\n      <DragAndDropQuestionComponent \n        question={mockQuestion}\n        onAnswerChange={mockOnAnswerChange}\n        isSubmitted={true}\n      />\n    );\n    \n    // Should have options but they should not be draggable\n    const options = screen.getAllByText(/Option/);\n    expect(options.length).toBeGreaterThan(0);\n    options.forEach(option => {\n      expect(option.parentElement).toHaveAttribute('draggable', 'false');\n    });\n  });\n\n  it('should show feedback styling when requested', () => {\n    const userAnswer = {\n      't1': 'o1', // Correct\n      't2': 'o2', // Correct\n    };\n    \n    render(\n      <DragAndDropQuestionComponent \n        question={mockQuestion}\n        onAnswerChange={mockOnAnswerChange}\n        userAnswer={userAnswer}\n        showFeedbackStyling={true}\n        isSubmitted={true}\n      />\n    );\n    \n    // No need for specific CSS assertions - we're mainly testing that the component renders\n    // with feedback styling without errors\n    expect(screen.getByText('Target 1')).toBeInTheDocument();\n    expect(screen.getByText('Target 2')).toBeInTheDocument();\n  });\n\n  it('should show correct answers in review mode', () => {\n    render(\n      <DragAndDropQuestionComponent \n        question={mockQuestion}\n        onAnswerChange={mockOnAnswerChange}\n        isQuizReviewMode={true}\n      />\n    );\n    \n    // In review mode, it should show the correct answers\n    // Option 1 should be in Target 1, Option 2 in Target 2\n    const target1 = screen.getByText('Target 1').parentElement;\n    const target2 = screen.getByText('Target 2').parentElement;\n    \n    expect(target1).toHaveTextContent('Option 1');\n    expect(target2).toHaveTextContent('Option 2');\n    \n    // Available items section should not have the options\n    const availableItemsSection = screen.getByText('Available Items:').parentElement;\n    expect(availableItemsSection).not.toHaveTextContent('Option 1');\n    expect(availableItemsSection).not.toHaveTextContent('Option 2');\n  });\n});\n"
    },
    {
      "filepath": "app/features/quiz/tests/DropdownSelectionController.test.ts",
      "content": "import { DropdownSelectionQuestion } from \"@/app/types/quiz\";\nimport { DropdownSelectionController } from \"../controllers/DropdownSelectionController\";\n\ndescribe('DropdownSelectionController', () => {\n  // Create a mock question for testing\n  const mockQuestion: DropdownSelectionQuestion = {\n    id: 'q1',\n    type: 'dropdown_selection',\n    question: 'The [animal] jumped over the [object].',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    options: [\n      { option_id: 'a1', text: 'cat' },\n      { option_id: 'a2', text: 'dog' },\n      { option_id: 'a3', text: 'fox' },\n      { option_id: 'o1', text: 'fence' },\n      { option_id: 'o2', text: 'moon' },\n      { option_id: 'o3', text: 'tree' },\n    ],\n    placeholderTargets: {\n      'animal': {\n        key: 'animal',\n        correctOptionText: 'fox'\n      },\n      'object': {\n        key: 'object',\n        correctOptionText: 'fence'\n      }\n    }\n  };\n\n  let controller: DropdownSelectionController;\n\n  beforeEach(() => {\n    controller = new DropdownSelectionController(mockQuestion);\n  });\n\n  describe('constructor', () => {\n    it('should properly initialize with a question', () => {\n      expect(controller.getQuestion()).toBe(mockQuestion);\n    });\n  });\n\n  describe('getCorrectOptionForPlaceholder', () => {\n    it('should return the correct option text for a placeholder', () => {\n      expect(controller.getCorrectOptionForPlaceholder('animal')).toBe('fox');\n      expect(controller.getCorrectOptionForPlaceholder('object')).toBe('fence');\n    });\n\n    it('should return null for an invalid placeholder', () => {\n      expect(controller.getCorrectOptionForPlaceholder('nonexistent')).toBeNull();\n    });\n  });\n\n  describe('getPlaceholderKeys', () => {\n    it('should return all placeholder keys', () => {\n      expect(controller.getPlaceholderKeys()).toEqual(['animal', 'object']);\n    });\n  });\n\n  describe('isSelectionCorrect', () => {\n    it('should return true for correct selections', () => {\n      expect(controller.isSelectionCorrect('animal', 'fox')).toBe(true);\n      expect(controller.isSelectionCorrect('object', 'fence')).toBe(true);\n    });\n\n    it('should return false for incorrect selections', () => {\n      expect(controller.isSelectionCorrect('animal', 'cat')).toBe(false);\n      expect(controller.isSelectionCorrect('object', 'moon')).toBe(false);\n    });\n\n    it('should return false for null selections', () => {\n      expect(controller.isSelectionCorrect('animal', null)).toBe(false);\n    });\n  });\n\n  describe('isAnswerComplete', () => {\n    it('should return true when all placeholders have selections', () => {\n      const selections = { 'animal': 'cat', 'object': 'fence' };\n      expect(controller.isAnswerComplete(selections)).toBe(true);\n    });\n\n    it('should return false when some placeholders have no selections', () => {\n      const selections = { 'animal': 'cat', 'object': null };\n      expect(controller.isAnswerComplete(selections)).toBe(false);\n    });\n\n    it('should return false for empty selections', () => {\n      expect(controller.isAnswerComplete({})).toBe(false);\n    });\n  });\n\n  describe('validateAnswer', () => {\n    it('should return a map with each placeholder marked as correct/incorrect', () => {\n      const selections = { 'animal': 'fox', 'object': 'tree' };\n      const validation = controller.validateAnswer(selections);\n      expect(validation['animal']).toBe(true);\n      expect(validation['object']).toBe(false);\n    });\n  });\n\n  describe('getScore', () => {\n    it('should return 1 for all correct selections', () => {\n      const selections = { 'animal': 'fox', 'object': 'fence' };\n      expect(controller.getScore(selections)).toBe(1);\n    });\n\n    it('should return 0.5 for half correct selections', () => {\n      const selections = { 'animal': 'fox', 'object': 'tree' };\n      expect(controller.getScore(selections)).toBe(0.5);\n    });\n\n    it('should return 0 for all incorrect selections', () => {\n      const selections = { 'animal': 'cat', 'object': 'tree' };\n      expect(controller.getScore(selections)).toBe(0);\n    });\n  });\n\n  describe('isCorrect', () => {\n    it('should return true when all selections are correct', () => {\n      const selections = { 'animal': 'fox', 'object': 'fence' };\n      expect(controller.isCorrect(selections)).toBe(true);\n    });\n\n    it('should return false when any selection is incorrect', () => {\n      const selections = { 'animal': 'fox', 'object': 'tree' };\n      expect(controller.isCorrect(selections)).toBe(false);\n    });\n  });\n});\n"
    },
    {
      "filepath": "app/features/quiz/tests/OrderController.test.ts",
      "content": "import { OrderQuestion } from \"@/app/types/quiz\";\nimport { OrderController } from \"../controllers/OrderController\";\n\ndescribe('OrderController', () => {\n  // Create a mock question for testing\n  const mockQuestion: OrderQuestion = {\n    id: 'q1',\n    type: 'order',\n    question: 'Place these items in the correct order',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    items: [\n      { item_id: 'i1', text: 'Item 1' },\n      { item_id: 'i2', text: 'Item 2' },\n      { item_id: 'i3', text: 'Item 3' },\n      { item_id: 'i4', text: 'Item 4' },\n    ],\n    correctOrder: ['i2', 'i4', 'i1', 'i3']\n  };\n\n  let controller: OrderController;\n\n  beforeEach(() => {\n    controller = new OrderController(mockQuestion);\n  });\n\n  describe('constructor', () => {\n    it('should properly initialize with a question', () => {\n      expect(controller.getQuestion()).toBe(mockQuestion);\n    });\n  });\n\n  describe('getItems', () => {\n    it('should return all items from the question', () => {\n      const items = controller.getItems();\n      expect(items).toHaveLength(4);\n      expect(items).toEqual(mockQuestion.items);\n    });\n  });\n\n  describe('getCorrectOrder', () => {\n    it('should return the correct order from the question', () => {\n      const correctOrder = controller.getCorrectOrder();\n      expect(correctOrder).toHaveLength(4);\n      expect(correctOrder).toEqual(mockQuestion.correctOrder);\n    });\n  });\n\n  describe('isItemInCorrectPosition', () => {\n    it('should return true for items in correct positions', () => {\n      expect(controller.isItemInCorrectPosition('i2', 0)).toBe(true);\n      expect(controller.isItemInCorrectPosition('i4', 1)).toBe(true);\n      expect(controller.isItemInCorrectPosition('i1', 2)).toBe(true);\n      expect(controller.isItemInCorrectPosition('i3', 3)).toBe(true);\n    });\n\n    it('should return false for items in incorrect positions', () => {\n      expect(controller.isItemInCorrectPosition('i1', 0)).toBe(false);\n      expect(controller.isItemInCorrectPosition('i2', 1)).toBe(false);\n      expect(controller.isItemInCorrectPosition('i3', 0)).toBe(false);\n      expect(controller.isItemInCorrectPosition('i4', 3)).toBe(false);\n    });\n\n    it('should return false for invalid positions', () => {\n      expect(controller.isItemInCorrectPosition('i1', -1)).toBe(false);\n      expect(controller.isItemInCorrectPosition('i1', 4)).toBe(false);\n    });\n  });\n\n  describe('isAnswerComplete', () => {\n    it('should return true when all items are ordered', () => {\n      const userAnswer = ['i1', 'i2', 'i3', 'i4']; // All items present\n      expect(controller.isAnswerComplete(userAnswer)).toBe(true);\n    });\n\n    it('should return false when not all items are ordered', () => {\n      const userAnswer = ['i1', 'i2', 'i3']; // Missing an item\n      expect(controller.isAnswerComplete(userAnswer)).toBe(false);\n    });\n  });\n\n  describe('validateAnswer', () => {\n    it('should return correctness map for each item', () => {\n      const userAnswer = ['i2', 'i1', 'i4', 'i3']; // i2 and i3 are in correct positions\n      const correctnessMap = controller.validateAnswer(userAnswer);\n      \n      expect(correctnessMap['i2']).toBe(true);\n      expect(correctnessMap['i1']).toBe(false);\n      expect(correctnessMap['i4']).toBe(false);\n      expect(correctnessMap['i3']).toBe(true);\n    });\n  });\n});\n"
    },
    {
      "filepath": "app/features/quiz/tests/SingleSelectionValidator.test.ts",
      "content": "import { SingleSelectionQuestion } from \"@/app/types/quiz\";\nimport { SingleSelectionValidator } from \"../validators/SingleSelectionValidator\";\n\ndescribe('SingleSelectionValidator', () => {\n  // Create a mock question for testing\n  const mockQuestion: SingleSelectionQuestion = {\n    id: 'q1',\n    type: 'single_selection',\n    question: 'Test question?',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    options: [\n      { option_id: 'a', text: 'Option A' },\n      { option_id: 'b', text: 'Option B' },\n      { option_id: 'c', text: 'Option C' },\n    ],\n    correctAnswerOptionId: 'b'\n  };\n\n  let validator: SingleSelectionValidator;\n\n  beforeEach(() => {\n    validator = new SingleSelectionValidator(mockQuestion);\n  });\n\n  describe('isComplete', () => {\n    it('should return true when an option is selected', () => {\n      expect(validator.isComplete('a')).toBe(true);\n    });\n\n    it('should return false when no option is selected', () => {\n      expect(validator.isComplete(null)).toBe(false);\n    });\n\n    it('should return false for empty string', () => {\n      expect(validator.isComplete('')).toBe(false);\n    });\n  });\n\n  describe('getCorrectnessMap', () => {\n    it('should mark the correct option as correct', () => {\n      const result = validator.getCorrectnessMap('b');\n      expect(result['b']).toBe(true);\n    });\n\n    it('should mark incorrect options as incorrect', () => {\n      const result = validator.getCorrectnessMap('a');\n      expect(result['a']).toBe(false);\n    });\n\n    it('should return a default map for null selection', () => {\n      const result = validator.getCorrectnessMap(null);\n      expect(result['answer']).toBe(false);\n    });\n  });\n});\n"
    },
    {
      "filepath": "app/features/quiz/tests/OrderValidator.test.ts",
      "content": "import { OrderQuestion } from \"@/app/types/quiz\";\nimport { OrderValidator } from \"../validators/OrderValidator\";\n\ndescribe('OrderValidator', () => {\n  // Create a mock question for testing\n  const mockQuestion: OrderQuestion = {\n    id: 'q1',\n    type: 'order',\n    question: 'Place these items in the correct order',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    items: [\n      { item_id: 'i1', text: 'Item 1' },\n      { item_id: 'i2', text: 'Item 2' },\n      { item_id: 'i3', text: 'Item 3' },\n      { item_id: 'i4', text: 'Item 4' },\n    ],\n    correctOrder: ['i2', 'i4', 'i1', 'i3']\n  };\n\n  let validator: OrderValidator;\n\n  beforeEach(() => {\n    validator = new OrderValidator(mockQuestion);\n  });\n\n  describe('isComplete', () => {\n    it('should return true when all items are ordered', () => {\n      const userAnswer = ['i1', 'i2', 'i3', 'i4']; // All items present\n      expect(validator.isComplete(userAnswer)).toBe(true);\n    });\n\n    it('should return false when not all items are ordered', () => {\n      const userAnswer = ['i1', 'i2', 'i3']; // Missing an item\n      expect(validator.isComplete(userAnswer)).toBe(false);\n    });\n\n    it('should return false when answer is null or undefined', () => {\n      expect(validator.isComplete(null as any)).toBe(false);\n      expect(validator.isComplete(undefined as any)).toBe(false);\n    });\n\n    it('should return false when answer is not an array', () => {\n      expect(validator.isComplete({} as any)).toBe(false);\n      expect(validator.isComplete('string' as any)).toBe(false);\n    });\n  });\n\n  describe('getCorrectnessMap', () => {\n    it('should mark items in correct positions as true', () => {\n      const userAnswer = ['i2', 'i4', 'i1', 'i3']; // Exactly correct order\n      const correctnessMap = validator.getCorrectnessMap(userAnswer);\n      \n      expect(correctnessMap['i1']).toBe(true);\n      expect(correctnessMap['i2']).toBe(true);\n      expect(correctnessMap['i3']).toBe(true);\n      expect(correctnessMap['i4']).toBe(true);\n    });\n\n    it('should mark items in incorrect positions as false', () => {\n      const userAnswer = ['i1', 'i2', 'i3', 'i4']; // Incorrect order\n      const correctnessMap = validator.getCorrectnessMap(userAnswer);\n      \n      expect(correctnessMap['i1']).toBe(false);\n      expect(correctnessMap['i2']).toBe(false);\n      expect(correctnessMap['i3']).toBe(false);\n      expect(correctnessMap['i4']).toBe(false);\n    });\n\n    it('should mark some items correct and others incorrect', () => {\n      const userAnswer = ['i2', 'i1', 'i4', 'i3']; // i2 and i3 are correct, i1 and i4 are wrong\n      const correctnessMap = validator.getCorrectnessMap(userAnswer);\n      \n      expect(correctnessMap['i2']).toBe(true);  // Correct position (index 0)\n      expect(correctnessMap['i1']).toBe(false); // Wrong position\n      expect(correctnessMap['i4']).toBe(false); // Wrong position\n      expect(correctnessMap['i3']).toBe(true);  // Correct position (index 3)\n    });\n\n    it('should return empty map when answer is null or undefined', () => {\n      expect(Object.keys(validator.getCorrectnessMap(null as any)).length).toBe(0);\n      expect(Object.keys(validator.getCorrectnessMap(undefined as any)).length).toBe(0);\n    });\n\n    it('should return empty map when answer is not an array', () => {\n      expect(Object.keys(validator.getCorrectnessMap({} as any)).length).toBe(0);\n      expect(Object.keys(validator.getCorrectnessMap('string' as any)).length).toBe(0);\n    });\n  });\n\n  // Test the inherited methods via the validator instance\n  describe('getCorrectnessScore', () => {\n    it('should return 1 for completely correct answers', () => {\n      const userAnswer = ['i2', 'i4', 'i1', 'i3']; // Exactly correct order\n      expect(validator.getCorrectnessScore(userAnswer)).toBe(1);\n    });\n    \n    it('should return 0.5 for partially correct answers', () => {\n      const userAnswer = ['i2', 'i1', 'i4', 'i3']; // 2/4 correct positions\n      expect(validator.getCorrectnessScore(userAnswer)).toBe(0.5);\n    });\n    \n    it('should return 0 for completely incorrect answers', () => {\n      const userAnswer = ['i3', 'i1', 'i4', 'i2']; // No correct positions\n      expect(validator.getCorrectnessScore(userAnswer)).toBe(0);\n    });\n  });\n  \n  describe('isCorrect', () => {\n    it('should return true for completely correct answers', () => {\n      const userAnswer = ['i2', 'i4', 'i1', 'i3']; // Exactly correct order\n      expect(validator.isCorrect(userAnswer)).toBe(true);\n    });\n    \n    it('should return false for partially correct answers', () => {\n      const userAnswer = ['i2', 'i1', 'i4', 'i3']; // 2/4 correct positions\n      expect(validator.isCorrect(userAnswer)).toBe(false);\n    });\n    \n    it('should return false for completely incorrect answers', () => {\n      const userAnswer = ['i3', 'i1', 'i4', 'i2']; // No correct positions\n      expect(validator.isCorrect(userAnswer)).toBe(false);\n    });\n  });\n});\n"
    },
    {
      "filepath": "app/features/quiz/tests/MultiChoiceController.test.ts",
      "content": "import { MultiChoiceQuestion } from \"@/app/types/quiz\";\nimport { MultiChoiceController } from \"../controllers/MultiChoiceController\";\n\ndescribe('MultiChoiceController', () => {\n  // Create a mock question for testing\n  const mockQuestion: MultiChoiceQuestion = {\n    id: 'q1',\n    type: 'multi',\n    question: 'Test question?',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    options: [\n      { option_id: 'a', text: 'Option A' },\n      { option_id: 'b', text: 'Option B' },\n      { option_id: 'c', text: 'Option C' },\n      { option_id: 'd', text: 'Option D' },\n    ],\n    correctAnswerOptionIds: ['b', 'c']\n  };\n\n  let controller: MultiChoiceController;\n\n  beforeEach(() => {\n    controller = new MultiChoiceController(mockQuestion);\n  });\n\n  describe('constructor', () => {\n    it('should properly initialize with a question', () => {\n      expect(controller.getQuestion()).toBe(mockQuestion);\n    });\n  });\n\n  describe('getCorrectOptionIds', () => {\n    it('should return the correct answer option IDs', () => {\n      expect(controller.getCorrectOptionIds()).toEqual(['b', 'c']);\n    });\n  });\n\n  describe('getRequiredSelectionCount', () => {\n    it('should return the number of correct options', () => {\n      expect(controller.getRequiredSelectionCount()).toBe(2);\n    });\n  });\n\n  describe('isOptionCorrect', () => {\n    it('should return true for correct options', () => {\n      expect(controller.isOptionCorrect('b')).toBe(true);\n      expect(controller.isOptionCorrect('c')).toBe(true);\n    });\n\n    it('should return false for incorrect options', () => {\n      expect(controller.isOptionCorrect('a')).toBe(false);\n      expect(controller.isOptionCorrect('d')).toBe(false);\n    });\n  });\n\n  describe('isAnswerComplete', () => {\n    it('should return true when the correct number of options are selected', () => {\n      expect(controller.isAnswerComplete(['a', 'b'])).toBe(true);\n    });\n\n    it('should return false when too few options are selected', () => {\n      expect(controller.isAnswerComplete(['a'])).toBe(false);\n    });\n\n    it('should return false when too many options are selected', () => {\n      expect(controller.isAnswerComplete(['a', 'b', 'c'])).toBe(false);\n    });\n\n    it('should return false for an empty array', () => {\n      expect(controller.isAnswerComplete([])).toBe(false);\n    });\n  });\n\n  describe('validateAnswer', () => {\n    it('should return a map with each selected option marked as correct/incorrect', () => {\n      const validation = controller.validateAnswer(['b', 'd']);\n      expect(validation['b']).toBe(true);\n      expect(validation['d']).toBe(false);\n    });\n  });\n\n  describe('getScore', () => {\n    it('should return 1 for all correct answers', () => {\n      expect(controller.getScore(['b', 'c'])).toBe(1);\n    });\n\n    it('should return 0.5 for half correct answers', () => {\n      expect(controller.getScore(['b', 'd'])).toBe(0.5);\n    });\n\n    it('should return 0 for all incorrect answers', () => {\n      expect(controller.getScore(['a', 'd'])).toBe(0);\n    });\n  });\n\n  describe('isCorrect', () => {\n    it('should return true when all selected options are correct', () => {\n      expect(controller.isCorrect(['b', 'c'])).toBe(true);\n    });\n\n    it('should return false when any selected option is incorrect', () => {\n      expect(controller.isCorrect(['b', 'd'])).toBe(false);\n    });\n  });\n});\n"
    },
    {
      "filepath": "app/features/quiz/tests/useAutoValidation.test.ts",
      "content": "import { renderHook, act } from '@testing-library/react';\nimport { useAutoValidation } from '../hooks/useAutoValidation';\nimport { SingleSelectionController } from '../controllers/SingleSelectionController';\nimport { SingleSelectionQuestion } from '@/app/types/quiz';\n\n// Mock controller\njest.mock('../controllers/SingleSelectionController');\n\ndescribe('useAutoValidation', () => {\n  // Create a mock question for testing\n  const mockQuestion: SingleSelectionQuestion = {\n    id: 'q1',\n    type: 'single_selection',\n    question: 'Test question?',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    options: [\n      { option_id: 'a', text: 'Option A' },\n      { option_id: 'b', text: 'Option B' },\n    ],\n    correctAnswerOptionId: 'b'\n  };\n\n  // Set up mocks for the controller methods\n  const mockIsAnswerComplete = jest.fn();\n  \n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    // Mock the controller implementation\n    (SingleSelectionController as jest.Mock).mockImplementation(() => ({\n      isAnswerComplete: mockIsAnswerComplete,\n      validateAnswer: jest.fn(),\n      getScore: jest.fn(),\n      isCorrect: jest.fn(),\n      getQuestion: () => mockQuestion\n    }));\n  });\n\n  it('should initialize with the provided initial answer', () => {\n    mockIsAnswerComplete.mockReturnValue(false);\n    \n    const mockController = new SingleSelectionController(mockQuestion);\n    const mockOnAnswerChange = jest.fn();\n    \n    const { result } = renderHook(() => \n      useAutoValidation(mockController, 'a', mockOnAnswerChange)\n    );\n    \n    const [answer] = result.current;\n    expect(answer).toBe('a');\n  });\n\n  it('should update answer state when setAnswer is called', () => {\n    mockIsAnswerComplete.mockReturnValue(false);\n    \n    const mockController = new SingleSelectionController(mockQuestion);\n    const mockOnAnswerChange = jest.fn();\n    \n    const { result } = renderHook(() => \n      useAutoValidation(mockController, null, mockOnAnswerChange)\n    );\n    \n    act(() => {\n      const setAnswer = result.current[1];\n      setAnswer('a');\n    });\n    \n    const [answer] = result.current;\n    expect(answer).toBe('a');\n  });\n\n  it('should trigger onAnswerChange exactly once when answer becomes complete', () => {\n    // First call to isAnswerComplete returns false, then true after update\n    mockIsAnswerComplete.mockReturnValueOnce(false).mockReturnValueOnce(true);\n    \n    const mockController = new SingleSelectionController(mockQuestion);\n    const mockOnAnswerChange = jest.fn();\n    \n    const { result } = renderHook(() => \n      useAutoValidation(mockController, null, mockOnAnswerChange)\n    );\n    \n    // Initial render should not trigger onAnswerChange\n    expect(mockOnAnswerChange).not.toHaveBeenCalled();\n    \n    // Update the answer\n    act(() => {\n      const setAnswer = result.current[1];\n      setAnswer('a');\n    });\n    \n    // Should call onAnswerChange exactly once\n    expect(mockOnAnswerChange).toHaveBeenCalledTimes(1);\n    expect(mockOnAnswerChange).toHaveBeenCalledWith('a');\n    \n    // Update the answer again\n    act(() => {\n      const setAnswer = result.current[1];\n      setAnswer('b');\n    });\n    \n    // Should still have been called only once total\n    expect(mockOnAnswerChange).toHaveBeenCalledTimes(1);\n  });\n\n  it('should not auto-validate when validateOnComplete is false', () => {\n    mockIsAnswerComplete.mockReturnValue(true);\n    \n    const mockController = new SingleSelectionController(mockQuestion);\n    const mockOnAnswerChange = jest.fn();\n    \n    renderHook(() => \n      useAutoValidation(mockController, null, mockOnAnswerChange, false)\n    );\n    \n    // Should not trigger onAnswerChange automatically\n    expect(mockOnAnswerChange).not.toHaveBeenCalled();\n  });\n});\n"
    },
    {
      "filepath": "app/features/quiz/tests/DragAndDropController.test.ts",
      "content": "import { DragAndDropQuestion } from \"@/app/types/quiz\";\nimport { DragAndDropController } from \"../controllers/DragAndDropController\";\n\ndescribe('DragAndDropController', () => {\n  // Create a mock question for testing\n  const mockQuestion: DragAndDropQuestion = {\n    id: 'q1',\n    type: 'drag_and_drop',\n    question: 'Match the items correctly',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    targets: [\n      { target_id: 't1', text: 'Target 1' },\n      { target_id: 't2', text: 'Target 2' },\n      { target_id: 't3', text: 'Target 3' },\n    ],\n    options: [\n      { option_id: 'o1', text: 'Option 1' },\n      { option_id: 'o2', text: 'Option 2' },\n      { option_id: 'o3', text: 'Option 3' },\n      { option_id: 'o4', text: 'Option 4' }, // Extra option\n    ],\n    correctPairs: [\n      { target_id: 't1', option_id: 'o2' },\n      { target_id: 't2', option_id: 'o1' },\n      { target_id: 't3', option_id: 'o3' },\n    ]\n  };\n\n  let controller: DragAndDropController;\n\n  beforeEach(() => {\n    controller = new DragAndDropController(mockQuestion);\n  });\n\n  describe('constructor', () => {\n    it('should properly initialize with a question', () => {\n      expect(controller.getQuestion()).toBe(mockQuestion);\n    });\n  });\n\n  describe('getTargets', () => {\n    it('should return all targets', () => {\n      expect(controller.getTargets()).toBe(mockQuestion.targets);\n      expect(controller.getTargets().length).toBe(3);\n    });\n  });\n\n  describe('getOptions', () => {\n    it('should return all options', () => {\n      expect(controller.getOptions()).toBe(mockQuestion.options);\n      expect(controller.getOptions().length).toBe(4);\n    });\n  });\n\n  describe('getCorrectOptionForTarget', () => {\n    it('should return the correct option ID for a target', () => {\n      expect(controller.getCorrectOptionForTarget('t1')).toBe('o2');\n      expect(controller.getCorrectOptionForTarget('t2')).toBe('o1');\n      expect(controller.getCorrectOptionForTarget('t3')).toBe('o3');\n    });\n\n    it('should return null for an invalid target', () => {\n      expect(controller.getCorrectOptionForTarget('nonexistent')).toBeNull();\n    });\n  });\n\n  describe('isPlacementCorrect', () => {\n    it('should return true for correct placements', () => {\n      expect(controller.isPlacementCorrect('t1', 'o2')).toBe(true);\n      expect(controller.isPlacementCorrect('t2', 'o1')).toBe(true);\n      expect(controller.isPlacementCorrect('t3', 'o3')).toBe(true);\n    });\n\n    it('should return false for incorrect placements', () => {\n      expect(controller.isPlacementCorrect('t1', 'o1')).toBe(false);\n      expect(controller.isPlacementCorrect('t2', 'o2')).toBe(false);\n    });\n\n    it('should return false for null placements', () => {\n      expect(controller.isPlacementCorrect('t1', null)).toBe(false);\n    });\n  });\n\n  describe('getAvailableOptions', () => {\n    it('should return unused options', () => {\n      const placedAnswers = {\n        't1': 'o1',\n        't2': 'o2',\n        't3': null\n      };\n      \n      const availableOptions = controller.getAvailableOptions(placedAnswers);\n      expect(availableOptions.length).toBe(2);\n      expect(availableOptions.some(opt => opt.option_id === 'o3')).toBe(true);\n      expect(availableOptions.some(opt => opt.option_id === 'o4')).toBe(true);\n    });\n\n    it('should return all options when none are placed', () => {\n      const placedAnswers = {\n        't1': null,\n        't2': null,\n        't3': null\n      };\n      \n      const availableOptions = controller.getAvailableOptions(placedAnswers);\n      expect(availableOptions.length).toBe(4);\n    });\n  });\n\n  describe('createInitialAnswers', () => {\n    it('should create an object with all targets set to null', () => {\n      const initialAnswers = controller.createInitialAnswers();\n      expect(Object.keys(initialAnswers).length).toBe(3);\n      expect(initialAnswers['t1']).toBeNull();\n      expect(initialAnswers['t2']).toBeNull();\n      expect(initialAnswers['t3']).toBeNull();\n    });\n  });\n\n  describe('isAnswerComplete', () => {\n    it('should return true when all targets have options', () => {\n      const placedAnswers = {\n        't1': 'o1',\n        't2': 'o2',\n        't3': 'o3'\n      };\n      expect(controller.isAnswerComplete(placedAnswers)).toBe(true);\n    });\n\n    it('should return false when some targets have no options', () => {\n      const placedAnswers = {\n        't1': 'o1',\n        't2': null,\n        't3': 'o3'\n      };\n      expect(controller.isAnswerComplete(placedAnswers)).toBe(false);\n    });\n\n    it('should return false for empty answers', () => {\n      expect(controller.isAnswerComplete({})).toBe(false);\n    });\n  });\n\n  describe('validateAnswer', () => {\n    it('should return a map with each target marked as correct/incorrect', () => {\n      const placedAnswers = {\n        't1': 'o2', // correct\n        't2': 'o3', // incorrect\n        't3': 'o1'  // incorrect\n      };\n      \n      const validation = controller.validateAnswer(placedAnswers);\n      expect(validation['t1']).toBe(true);\n      expect(validation['t2']).toBe(false);\n      expect(validation['t3']).toBe(false);\n    });\n  });\n\n  describe('getScore', () => {\n    it('should return 1 for all correct placements', () => {\n      const placedAnswers = {\n        't1': 'o2',\n        't2': 'o1',\n        't3': 'o3'\n      };\n      expect(controller.getScore(placedAnswers)).toBe(1);\n    });\n\n    it('should return fraction for partially correct placements', () => {\n      const placedAnswers = {\n        't1': 'o2', // correct\n        't2': 'o3', // incorrect\n        't3': 'o1'  // incorrect\n      };\n      expect(controller.getScore(placedAnswers)).toBe(1/3);\n    });\n\n    it('should return 0 for all incorrect placements', () => {\n      const placedAnswers = {\n        't1': 'o1',\n        't2': 'o3',\n        't3': 'o4'\n      };\n      expect(controller.getScore(placedAnswers)).toBe(0);\n    });\n  });\n\n  describe('isCorrect', () => {\n    it('should return true when all placements are correct', () => {\n      const placedAnswers = {\n        't1': 'o2',\n        't2': 'o1',\n        't3': 'o3'\n      };\n      expect(controller.isCorrect(placedAnswers)).toBe(true);\n    });\n\n    it('should return false when any placement is incorrect', () => {\n      const placedAnswers = {\n        't1': 'o2', // correct\n        't2': 'o3', // incorrect\n        't3': 'o3'  // correct\n      };\n      expect(controller.isCorrect(placedAnswers)).toBe(false);\n    });\n  });\n});\n"
    },
    {
      "filepath": "app/features/quiz/tests/SingleSelectionController.test.ts",
      "content": "import { SingleSelectionQuestion } from \"@/app/types/quiz\";\nimport { SingleSelectionController } from \"../controllers/SingleSelectionController\";\n\ndescribe('SingleSelectionController', () => {\n  // Create a mock question for testing\n  const mockQuestion: SingleSelectionQuestion = {\n    id: 'q1',\n    type: 'single_selection',\n    question: 'Test question?',\n    points: 10,\n    quiz_tag: 'test-quiz',\n    difficulty: 'medium',\n    feedback_correct: 'Good job!',\n    feedback_incorrect: 'Try again!',\n    created_at: '2023-01-01',\n    updated_at: '2023-01-01',\n    options: [\n      { option_id: 'a', text: 'Option A' },\n      { option_id: 'b', text: 'Option B' },\n      { option_id: 'c', text: 'Option C' },\n    ],\n    correctAnswerOptionId: 'b'\n  };\n\n  let controller: SingleSelectionController;\n\n  beforeEach(() => {\n    controller = new SingleSelectionController(mockQuestion);\n  });\n\n  describe('constructor', () => {\n    it('should properly initialize with a question', () => {\n      expect(controller.getQuestion()).toBe(mockQuestion);\n    });\n  });\n\n  describe('getCorrectOptionId', () => {\n    it('should return the correct answer option ID', () => {\n      expect(controller.getCorrectOptionId()).toBe('b');\n    });\n  });\n\n  describe('isOptionCorrect', () => {\n    it('should return true for the correct option', () => {\n      expect(controller.isOptionCorrect('b')).toBe(true);\n    });\n\n    it('should return false for incorrect options', () => {\n      expect(controller.isOptionCorrect('a')).toBe(false);\n      expect(controller.isOptionCorrect('c')).toBe(false);\n    });\n  });\n\n  describe('isAnswerComplete', () => {\n    it('should return true when an answer is selected', () => {\n      expect(controller.isAnswerComplete('a')).toBe(true);\n    });\n\n    it('should return false when no answer is selected', () => {\n      expect(controller.isAnswerComplete(null)).toBe(false);\n    });\n  });\n\n  describe('validateAnswer', () => {\n    it('should return a map with the selected option marked as correct/incorrect', () => {\n      const correctValidation = controller.validateAnswer('b');\n      expect(correctValidation['b']).toBe(true);\n\n      const incorrectValidation = controller.validateAnswer('a');\n      expect(incorrectValidation['a']).toBe(false);\n    });\n  });\n\n  describe('getScore', () => {\n    it('should return 1 for a correct answer', () => {\n      expect(controller.getScore('b')).toBe(1);\n    });\n\n    it('should return 0 for an incorrect answer', () => {\n      expect(controller.getScore('a')).toBe(0);\n    });\n\n    it('should return 0 for no answer', () => {\n      expect(controller.getScore(null)).toBe(0);\n    });\n  });\n\n  describe('isCorrect', () => {\n    it('should return true for a correct answer', () => {\n      expect(controller.isCorrect('b')).toBe(true);\n    });\n\n    it('should return false for an incorrect answer', () => {\n      expect(controller.isCorrect('a')).toBe(false);\n    });\n  });\n});\n"
    },
    {
      "filepath": "app/features/quiz/components/QuestionContent.tsx",
      "content": "import React from 'react';\n\ninterface QuestionContentProps {\n  question: string;\n}\n\nconst QuestionContent: React.FC<QuestionContentProps> = ({ question }) => {\n  return (\n    <section className=\"question-section\">\n      <h2 className=\"text-xl md:text-2xl font-bold text-custom-dark-blue mb-6 relative inline-block pb-1.5\">\n        Question\n        <span className=\"absolute left-0 bottom-0 w-10 h-0.5 bg-custom-primary rounded-rounded-full\"></span>\n      </h2>\n      <div className=\"question-text text-base md:text-lg text-custom-gray-1 mb-6 whitespace-pre-wrap\">\n        {question}\n      </div>\n    </section>\n  );\n};\n\nexport default QuestionContent;\n"
    },
    {
      "filepath": "app/features/quiz/components/QuestionCard.tsx",
      "content": "'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { AnyQuestion } from '../../../types/quiz';\nimport { useQuiz } from '../context/QuizContext';\nimport QuestionHeader from '../components/QuestionHeader';\nimport QuestionContent from '../components/QuestionContent';\nimport FeedbackSection from '../components/FeedbackSection';\nimport QuestionTypeRenderer from './question-types/QuestionTypeRenderer';\n\ninterface QuestionCardProps {\n  question: AnyQuestion;\n}\n\nconst QuestionCard: React.FC<QuestionCardProps> = ({ question }) => {\n  const { state, submitAndScoreAnswer } = useQuiz();\n  // For multi-choice questions, we need to track selections locally before submission\n  const [multiChoiceSelections, setMultiChoiceSelections] = useState<string[]>([]);\n  \n  const userAnswerDetails = state.userAnswers[question.id];\n  const selectedAnswerForThisQuestion = userAnswerDetails?.answer || \n    (question.type === 'multi' ? multiChoiceSelections : undefined);\n  const isSubmittedForThisQuestion = userAnswerDetails !== undefined;\n  // Renamed from showCorrectAnswerStyling\n  const shouldApplyFeedbackStyling = state.isQuizComplete || \n    (state.showFeedbackForCurrentQuestion && isSubmittedForThisQuestion);\n    \n  // Reset selections when question changes\n  useEffect(() => {\n    setMultiChoiceSelections([]);\n  }, [question.id]);\n  \n  // Update local selections when user answer is available from context\n  useEffect(() => {\n    if (question.type === 'multi' && userAnswerDetails?.answer) {\n      setMultiChoiceSelections(userAnswerDetails.answer);\n    }\n  }, [question.type, userAnswerDetails]);\n\n  const handleLocalAnswerSelection = async (answerPayload: any) => {\n    // For all question types, submit immediately when ready\n    if (isSubmittedForThisQuestion && userAnswerDetails.isCorrect !== undefined) return;\n    \n    // For multi-choice, we need to check if we've reached the required selections\n    if (question.type === 'multi') {\n      setMultiChoiceSelections(answerPayload);\n      \n      // If we reached the exact number of correct answers needed, submit automatically\n      const correctAnswersCount = (question as any).correctAnswerOptionIds?.length || 0;\n      if (Array.isArray(answerPayload) && answerPayload.length === correctAnswersCount) {\n        await submitAndScoreAnswer(question, answerPayload);\n      }\n      return;\n    }\n    \n    // For other question types like single selection, submit immediately\n    await submitAndScoreAnswer(question, answerPayload);\n  };\n\n  return (\n    <div className=\"bg-white rounded-rounded-lg-ref shadow-shadow-strong p-7 md:p-10 mb-8 relative overflow-hidden animate-card-appear\">\n      {/* Card Decoration */}\n      <div className=\"card-decoration absolute top-0 right-0 w-24 h-24 md:w-36 md:h-36 bg-primary-gradient opacity-5 rounded-bl-full z-0\"></div>\n\n      <div className=\"relative z-10\">\n        {/* Question Metadata */}\n        <QuestionHeader \n          points={question.points} \n          difficulty={question.difficulty} \n        />\n\n        {/* Question Content - Don't show standard question content for dropdown_selection type since it's shown in the component */}\n        {question.type !== 'dropdown_selection' && (\n          <QuestionContent question={question.question} />\n        )}\n        \n        {/* Question Type-specific Component */}\n        <QuestionTypeRenderer\n          question={question}\n          onAnswerSelect={handleLocalAnswerSelection}\n          selectedAnswer={selectedAnswerForThisQuestion}\n          isSubmitted={isSubmittedForThisQuestion}\n          shouldApplyFeedbackStyling={shouldApplyFeedbackStyling} // Pass renamed prop\n          isQuizReviewMode={state.isQuizComplete} // Pass new prop\n        />\n\n        {/* Explanation Box */}\n        {((state.showFeedbackForCurrentQuestion && isSubmittedForThisQuestion) || state.isQuizComplete) && \n          question.explanation && (\n            <FeedbackSection \n              type=\"explanation\" \n              content={question.explanation} \n            />\n        )}\n        \n        {/* Feedback Message Box (Correct/Incorrect) */}\n        {state.showFeedbackForCurrentQuestion && \n         isSubmittedForThisQuestion && \n         userAnswerDetails?.isCorrect !== undefined && (\n          <FeedbackSection\n            type={userAnswerDetails.isCorrect ? \"correct\" : \"incorrect\"}\n            content={userAnswerDetails.isCorrect \n              ? question.feedback_correct \n              : question.feedback_incorrect\n            }\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionCard;\n"
    },
    {
      "filepath": "app/features/quiz/components/QuizNavigation.tsx",
      "content": "import React from 'react';\nimport { useQuiz } from '../context/QuizContext';\n\ninterface QuizNavigationProps {\n  currentQuestionId: string;\n}\n\nconst QuizNavigation: React.FC<QuizNavigationProps> = ({ currentQuestionId }) => {\n  const { state, dispatch } = useQuiz();\n  \n  const isLastQuestion = state.currentQuestionIndex === state.questions.length - 1;\n  const isFirstQuestion = state.currentQuestionIndex === 0;\n  const hasAnsweredCurrent = !!state.userAnswers[currentQuestionId]; \n\n  // Button styles\n  const btnBase = \"inline-flex items-center justify-center px-8 h-12 border-none rounded-rounded-full font-semibold text-base cursor-pointer transition-all duration-200 relative overflow-hidden\";\n  const btnSecondaryCustom = `${btnBase} bg-gray-100 text-custom-gray-1 hover:bg-gray-200 hover:-translate-y-0.5`;\n  const btnPrimaryCustom = `${btnBase} bg-primary-gradient text-white shadow-lg hover:shadow-xl hover:-translate-y-0.5`;\n\n  const handleNext = () => {\n    if (isLastQuestion) {\n      if (hasAnsweredCurrent) {\n        dispatch({ type: 'COMPLETE_QUIZ' });\n      } else {\n        alert(\"Please submit your answer before finishing the quiz.\");\n      }\n    } else {\n      dispatch({ type: 'NEXT_QUESTION' });\n    }\n  };\n\n  const handlePrevious = () => {\n    dispatch({ type: 'PREVIOUS_QUESTION' });\n  };\n\n  return (\n    <div className=\"navigation flex flex-col md:flex-row justify-between mt-10 gap-4\">\n      <button \n        onClick={handlePrevious}\n        disabled={isFirstQuestion}\n        className={`${btnSecondaryCustom} disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:translate-y-0 w-full md:w-auto`}\n      >\n        Previous\n      </button>\n      \n      <button \n        onClick={handleNext}\n        disabled={isLastQuestion && !hasAnsweredCurrent}\n        className={`${btnPrimaryCustom} disabled:opacity-60 disabled:cursor-not-allowed disabled:hover:translate-y-0 w-full md:w-auto`}\n      >\n        {isLastQuestion ? 'Finish Quiz' : 'Next Question'}\n        \n        {/* Icon for next button */}\n        {!isLastQuestion && \n          <svg className=\"ml-2 w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8-8-8z\" fill=\"currentColor\"/>\n          </svg>\n        }\n      </button>\n    </div>\n  );\n};\n\nexport default QuizNavigation;\n"
    },
    {
      "filepath": "app/features/quiz/components/QuizCompletionSummary.tsx",
      "content": "import React from 'react';\nimport { useQuiz } from '../context/QuizContext';\nimport { Quiz } from '../../../types/quiz';\n\ninterface QuizCompletionSummaryProps {\n  quiz: Quiz;\n}\n\nconst QuizCompletionSummary: React.FC<QuizCompletionSummaryProps> = ({ quiz }) => {\n  const { state, dispatch } = useQuiz();\n  \n  // Calculate quiz statistics\n  const totalQuestions = state.questions.length;\n  const answeredQuestions = Object.keys(state.userAnswers).length;\n  const correctAnswers = Object.values(state.userAnswers).filter(answer => answer.isCorrect).length;\n  const scorePercentage = totalQuestions > 0 ? Math.round((correctAnswers / totalQuestions) * 100) : 0;\n  \n  // Determine performance message\n  let performanceMessage = '';\n  if (scorePercentage >= 90) {\n    performanceMessage = 'Excellent job! You have a great understanding of the subject!';\n  } else if (scorePercentage >= 70) {\n    performanceMessage = 'Good work! You have a solid understanding of the subject.';\n  } else if (scorePercentage >= 50) {\n    performanceMessage = 'You\\'re on the right track, but you might want to review the material again.';\n  } else {\n    performanceMessage = 'Keep practicing! Review the material and try again for a better score.';\n  }\n\n  return (\n    <div className=\"min-h-screen bg-custom-light-bg flex flex-col justify-center items-center p-6 animate-fade-in\">\n      <div className=\"container mx-auto p-4 md:p-8 text-center bg-white shadow-shadow-strong rounded-rounded-lg-ref max-w-3xl\">\n        <h1 className=\"text-3xl md:text-4xl font-bold mb-6 text-custom-success\">Quiz Completed!</h1>\n        \n        <p className=\"text-lg md:text-xl text-custom-gray-1 mb-8\">\n          You have completed the quiz: <span className=\"font-semibold\">{quiz.title}</span>.\n        </p>\n        \n        <div className=\"score-summary bg-gray-50 p-6 rounded-lg mb-8\">\n          <div className=\"score-circle mx-auto mb-4 w-32 h-32 rounded-full bg-primary-gradient flex items-center justify-center\">\n            <span className=\"text-white text-3xl font-bold\">{scorePercentage}%</span>\n          </div>\n          \n          <div className=\"score-details text-left mt-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"stat-item\">\n              <p className=\"text-custom-gray-2\">Total Questions</p>\n              <p className=\"text-xl font-semibold text-custom-dark-blue\">{totalQuestions}</p>\n            </div>\n            <div className=\"stat-item\">\n              <p className=\"text-custom-gray-2\">Answered</p>\n              <p className=\"text-xl font-semibold text-custom-dark-blue\">{answeredQuestions}</p>\n            </div>\n            <div className=\"stat-item\">\n              <p className=\"text-custom-gray-2\">Correct</p>\n              <p className=\"text-xl font-semibold text-custom-success\">{correctAnswers}</p>\n            </div>\n            <div className=\"stat-item\">\n              <p className=\"text-custom-gray-2\">Incorrect</p>\n              <p className=\"text-xl font-semibold text-custom-error\">{answeredQuestions - correctAnswers}</p>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"performance-message mb-8 p-4 bg-blue-50 text-custom-primary border border-custom-primary rounded-lg\">\n          {performanceMessage}\n        </div>\n        \n        <div className=\"actions flex flex-col md:flex-row justify-center gap-4\">\n          <button \n            onClick={() => dispatch({ type: 'RESET_QUIZ' })} \n            className=\"btn-secondary-custom px-8 py-3 rounded-full\"\n          >\n            Take Another Quiz\n          </button>\n          \n          <button \n            onClick={() => window.location.href = '/quiz-test'} \n            className=\"btn-primary-custom px-8 py-3 rounded-full\"\n          >\n            Browse All Quizzes\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizCompletionSummary;\n"
    },
    {
      "filepath": "app/features/quiz/components/QuestionHeader.tsx",
      "content": "import React from 'react';\nimport { Difficulty } from '../../../types/quiz';\n\ninterface QuestionHeaderProps {\n  points: number;\n  difficulty: Difficulty;\n}\n\nconst QuestionHeader: React.FC<QuestionHeaderProps> = ({ points, difficulty }) => {\n  const difficultyText = difficulty.charAt(0).toUpperCase() + difficulty.slice(1);\n  \n  return (\n    <div className=\"question-meta flex flex-col sm:flex-row gap-3 mb-6\">\n      <div className=\"meta-badge inline-flex items-center py-1.5 px-4 rounded-rounded-full font-semibold text-sm shadow-shadow-1 bg-custom-primary/[.1] text-custom-primary border-l-4 border-custom-primary\">\n        Points: {points}\n      </div>\n      <div className={`meta-badge inline-flex items-center py-1.5 px-4 rounded-rounded-full font-semibold text-sm shadow-shadow-1 bg-yellow-500/[.1] text-yellow-600 border-l-4 border-yellow-500`}>\n        Difficulty: {difficultyText}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionHeader;\n"
    },
    {
      "filepath": "app/features/quiz/components/FeedbackSection.tsx",
      "content": "import React from 'react';\n\n// Icons for feedback\nconst InfoIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-custom-error\">\n    <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-1-7v2h2v-2h-2zm0-8v6h2V7h-2z\" fill=\"currentColor\"/>\n  </svg>\n);\n\nconst CheckCircleIcon = () => (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-custom-success\">\n        <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-.997-6l6.06-6.061L15.65 8.527 11.003 13.17l-2.12-2.121L7.47 12.461l3.533 3.539z\" fill=\"currentColor\" />\n    </svg>\n);\n\nconst ExplanationIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-custom-primary\">\n    <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16zM11 7h2v2h-2V7zm0 4h2v6h-2v-6z\" fill=\"currentColor\"/>\n  </svg>\n);\n\ninterface FeedbackSectionProps {\n  type: 'explanation' | 'correct' | 'incorrect';\n  content: string;\n}\n\nconst FeedbackSection: React.FC<FeedbackSectionProps> = ({ type, content }) => {\n  // Determine styles and icon based on feedback type\n  let boxStyles = '';\n  let textColor = '';\n  let title = '';\n  let Icon = InfoIcon;\n\n  switch (type) {\n    case 'explanation':\n      boxStyles = 'bg-blue-500/[.05] border-custom-primary border-l-4';\n      textColor = 'text-custom-primary';\n      title = 'Explanation:';\n      Icon = ExplanationIcon;\n      break;\n    case 'correct':\n      boxStyles = 'bg-green-500/[.05] border-custom-success border-l-4';\n      textColor = 'text-custom-success';\n      title = content.split('!')[0] + '!';\n      content = content.split('!').slice(1).join('!').trim();\n      Icon = CheckCircleIcon;\n      break;\n    case 'incorrect':\n      boxStyles = 'bg-red-500/[.05] border-custom-error border-l-4';\n      textColor = 'text-custom-error';\n      title = content.split('!')[0] + '!';\n      content = content.split('!').slice(1).join('!').trim();\n      Icon = InfoIcon;\n      break;\n  }\n\n  return (\n    <div className={`feedback-box ${boxStyles} rounded-rounded-md-ref p-5 mt-6 shadow-shadow-1 animate-fade-in-up`}>\n      <h3 className={`feedback-header flex items-center gap-2 mb-2 font-bold ${textColor} text-lg`}>\n        <Icon />\n        {title}\n      </h3>\n      <div className=\"feedback-content text-custom-gray-1 text-sm md:text-base leading-relaxed whitespace-pre-wrap\">\n        {content}\n      </div>\n    </div>\n  );\n};\n\nexport default FeedbackSection;\n"
    },
    {
      "filepath": "app/features/quiz/components/QuizProgress.tsx",
      "content": "import React from 'react';\n\ninterface QuizProgressProps {\n  currentIndex: number;\n  totalQuestions: number;\n}\n\nconst QuizProgress: React.FC<QuizProgressProps> = ({ currentIndex, totalQuestions }) => {\n  const progressPercentage = totalQuestions > 0 \n    ? ((currentIndex + 1) / totalQuestions) * 100 \n    : 0;\n\n  return (\n    <div className=\"progress-container relative my-8 mx-auto w-full max-w-xl\">\n      <div className=\"progress-info flex justify-between mb-2 font-medium text-sm\">\n        <div className=\"question-counter bg-primary-gradient text-white py-1 px-4 rounded-rounded-full shadow-shadow-1 text-xs md:text-sm\">\n          Question {currentIndex + 1} of {totalQuestions}\n        </div>\n      </div>\n      \n      <div className=\"progress-bar h-2 bg-gray-200 rounded-rounded-full overflow-hidden shadow-inner\">\n        <div \n          className=\"progress-fill h-full bg-primary-gradient rounded-rounded-full transition-all duration-300 ease-out shadow-md\"\n          style={{ width: `${progressPercentage}%` }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizProgress;\n"
    },
    {
      "filepath": "app/features/quiz/components/question-types/MultiChoiceComponent.tsx",
      "content": "'use client';\n\nimport React, { memo, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { MultiChoiceQuestion, SelectionOption } from '../../../../types/quiz';\nimport { MultiChoiceController } from '../../controllers/MultiChoiceController';\nimport { useAutoValidation } from '../../hooks/useAutoValidation';\n\n// Icons for options\nconst CorrectIcon = memo(() => (\n  <span className=\"option-icon inline-flex items-center justify-center w-6 h-6 rounded-full text-white font-bold text-sm bg-success-gradient shadow-md\">\u2713</span>\n));\n\nconst IncorrectIcon = memo(() => (\n  <span className=\"option-icon inline-flex items-center justify-center w-6 h-6 rounded-full text-white font-bold text-sm bg-error-gradient shadow-md\">\u2717</span>\n));\n\ninterface MultiChoiceComponentProps {\n  question: MultiChoiceQuestion;\n  onAnswerSelect: (optionIds: string[]) => void;\n  selectedOptionIds?: string[];\n  isSubmitted?: boolean;\n  showCorrectAnswer?: boolean;\n}\n\nconst MultiChoiceComponent: React.FC<MultiChoiceComponentProps> = ({\n  question,\n  onAnswerSelect,\n  selectedOptionIds = [],\n  isSubmitted = false,\n  showCorrectAnswer = false,\n}) => {\n  // Create controller instance\n  const controller = new MultiChoiceController(question);\n  \n  // Use auto-validation hook\n  const [currentSelections, setCurrentSelections, isValidating, allComplete] = useAutoValidation<\n    MultiChoiceQuestion, \n    string[]\n  >(\n    controller,\n    selectedOptionIds,\n    onAnswerSelect,\n    true // Auto-validate when complete\n  );\n  \n  // Determine the correct number of answers to select\n  const correctAnswersCount = controller.getRequiredSelectionCount();\n  \n  // Handle option selection/deselection\n  const handleOptionClick = (optionId: string) => {\n    if (!isSubmitted) {\n      let newSelectedOptions: string[];\n      \n      // If option is already selected, allow deselecting it\n      if (currentSelections.includes(optionId)) {\n        newSelectedOptions = currentSelections.filter(id => id !== optionId);\n      } \n      // If we haven't reached the limit yet, allow selecting the option\n      else if (currentSelections.length < correctAnswersCount) {\n        newSelectedOptions = [...currentSelections, optionId];\n      }\n      // If we've reached the limit, don't allow more selections\n      else {\n        return;\n      }\n      \n      // Update selections through our hook\n      setCurrentSelections(newSelectedOptions);\n    }\n  };\n  \n  // Sync external selectedOptionIds with our internal state\n  useEffect(() => {\n    if (selectedOptionIds && \n        JSON.stringify(selectedOptionIds) !== JSON.stringify(currentSelections)) {\n      setCurrentSelections(selectedOptionIds);\n    }\n  }, [selectedOptionIds]);\n\n  return (\n    <div className=\"options-container grid grid-cols-1 gap-4 mb-8\">\n      <p className=\"text-sm text-gray-500 mb-2 font-medium\">\n        Select {correctAnswersCount} answer{correctAnswersCount > 1 ? 's' : ''} ({currentSelections.length}/{correctAnswersCount} selected)\n      </p>\n      \n      {question.options.map((option: SelectionOption, index: number) => {\n        const isSelected = currentSelections.includes(option.option_id);\n        const isCorrect = controller.isOptionCorrect(option.option_id);\n        const optionLetter = String.fromCharCode(65 + index);\n        \n        // Determine option styles\n        let baseStyle = \"relative text-left p-5 border-2 rounded-rounded-md-ref bg-white transition-all duration-200 ease-in-out shadow-shadow-1 overflow-hidden\";\n        let stateStyle = \"border-custom-gray-3\"; \n        let hoverStyle = isSubmitted ? \"cursor-default\" : \"cursor-pointer hover:-translate-y-1 hover:shadow-shadow-2 hover:border-custom-primary\";\n        \n        // Apply feedback styling if necessary\n        if (isSubmitted || showCorrectAnswer) {\n          if (isCorrect) {\n            stateStyle = \"border-custom-success bg-green-500/[.05]\";\n          } else if (isSelected && !isCorrect) {\n            stateStyle = \"border-custom-error bg-red-500/[.05]\";\n          } else {\n            stateStyle = \"border-custom-gray-3 bg-gray-50 opacity-70\";\n            hoverStyle = \"cursor-default\";\n          }\n        } else if (isSelected) {\n          stateStyle = \"border-custom-primary ring-2 ring-custom-primary shadow-shadow-2\";\n        }\n        \n        return (\n          <motion.button\n            key={option.option_id}\n            type=\"button\"\n            onClick={() => handleOptionClick(option.option_id)}\n            className={`${baseStyle} ${stateStyle} ${hoverStyle}`}\n            disabled={isSubmitted}\n            aria-pressed={isSelected}\n            whileHover={{ scale: isSubmitted ? 1 : 1.02, transition: { duration: 0.15 } }} \n            whileTap={{ scale: isSubmitted ? 1 : 0.98, transition: { duration: 0.1 } }} \n            layout\n          >\n            {/* Accent border */}\n            <span className={`absolute top-0 left-0 w-1 h-full transition-all duration-200 ease-in-out ${\n              isSelected ? 'bg-custom-primary' : \n              isCorrect && (isSubmitted || showCorrectAnswer) ? 'bg-custom-success' : \n              isSelected && !isCorrect && (isSubmitted || showCorrectAnswer) ? 'bg-custom-error' : \n              'bg-custom-gray-3'\n            } ${isSubmitted ? '' : 'group-hover:bg-custom-primary'}`}></span>\n\n            <div className=\"option-content flex items-center justify-between pl-4\">\n              <div className=\"option-text text-base md:text-lg font-medium text-custom-gray-1\">\n                <span className=\"option-letter inline-block w-6 font-bold text-custom-primary mr-2\">{optionLetter}.</span>\n                {option.text}\n              </div>\n              \n              {/* Checkbox indicator */}\n              <div className={`w-6 h-6 border-2 rounded flex items-center justify-center mr-2 ${\n                isSelected ? 'bg-custom-primary border-custom-primary' : 'border-gray-300'\n              }`}>\n                {isSelected && <span className=\"text-white\">\u2713</span>}\n              </div>\n              \n              {/* Show feedback icons when appropriate */}\n              {(isSubmitted || showCorrectAnswer) && isCorrect && <CorrectIcon />}\n              {(isSubmitted || showCorrectAnswer) && isSelected && !isCorrect && <IncorrectIcon />}\n            </div>\n          </motion.button>\n        );\n      })}\n    </div>\n  );\n};\n\n// Memoize to prevent unnecessary re-renders\nexport default memo(MultiChoiceComponent);\n"
    },
    {
      "filepath": "app/features/quiz/components/question-types/DragAndDropQuestionComponent.tsx",
      "content": "'use client';\n\nimport React, { useState, useEffect, memo, useMemo } from 'react'; // Added useMemo\nimport { DragAndDropQuestion, DragAndDropOption, DragAndDropTarget } from '@/app/types/quiz';\nimport { DragAndDropController } from '../../controllers/DragAndDropController';\nimport { useAutoValidation } from '../../hooks/useAutoValidation';\n\ninterface DragAndDropQuestionComponentProps {\n  question: DragAndDropQuestion;\n  onAnswerChange: (answers: Record<string, string | null>) => void; // Maps target_id to option_id or null\n  userAnswer?: Record<string, string | null>; // Previously selected answers\n  isSubmitted?: boolean;\n  showFeedbackStyling?: boolean; // Used for styling\n  isQuizReviewMode?: boolean; // New prop for review mode\n  validateOnDrop?: boolean; // Auto-validate when all targets are filled\n}\n\n/**\n * DragAndDropQuestionComponent handles drag and drop interactions for matching questions\n * Uses the DragAndDropController for business logic and validation\n */\nconst DragAndDropQuestionComponent: React.FC<DragAndDropQuestionComponentProps> = ({ \n  question, \n  onAnswerChange, \n  userAnswer, \n  isSubmitted = false,\n  showFeedbackStyling = false,\n  isQuizReviewMode = false,\n  validateOnDrop = true\n}) => {\n  // Create controller instance, memoized to prevent re-creation\n  const controller = useMemo(() => new DragAndDropController(question), [question]);\n  \n  // Track the current dragged option ID for browsers that don't support dataTransfer properly\n  const [currentDraggedOptionId, setCurrentDraggedOptionId] = useState<string | null>(null);\n  \n  // State to track available (unplaced) options\n  const [availableOptions, setAvailableOptions] = useState<DragAndDropOption[]>(\n    controller.getOptions()\n  );\n\n  // Initialize with controller's initial answers, memoized\n  const initialAnswers = useMemo(() => controller.createInitialAnswers(), [controller]);\n  \n  // Use auto-validation hook\n  const [placedAnswers, setPlacedAnswers, autoValidating, allTargetsFilled] = useAutoValidation<\n    DragAndDropQuestion,\n    Record<string, string | null>\n  >(\n    controller,\n    userAnswer || initialAnswers,\n    onAnswerChange,\n    validateOnDrop\n  );\n\n  // Effect to update available options whenever placedAnswers changes\n  useEffect(() => {\n    if (isQuizReviewMode) {\n      // Use controller to prepare review mode state\n      const correctReviewAnswers = controller.createInitialAnswers();\n      question.correctPairs.forEach(pair => {\n        correctReviewAnswers[pair.target_id] = pair.option_id;\n      });\n      setPlacedAnswers(correctReviewAnswers);\n      \n      // Update available options using controller method\n      const usedOptionIdsInReview = Object.values(correctReviewAnswers).filter(Boolean) as string[];\n      setAvailableOptions(\n        controller.getOptions().filter(opt => !usedOptionIdsInReview.includes(opt.option_id))\n      );\n    } else {\n      // Use controller to get available options\n      setAvailableOptions(controller.getAvailableOptions(placedAnswers));\n    }\n  }, [controller, placedAnswers, isQuizReviewMode, question.correctPairs, setPlacedAnswers]);\n\n  /**\n   * Handles drag start event for an option\n   */\n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>, optionId: string) => {\n    // Store the current dragged option ID in state (fallback for browsers with dataTransfer issues)\n    setCurrentDraggedOptionId(optionId);\n    \n    try {\n      // Set data in dataTransfer object\n      e.dataTransfer.effectAllowed = 'move';\n      e.dataTransfer.setData('text/plain', optionId);\n    } catch (err) {\n      console.warn('Could not set dataTransfer data:', err);\n      // We'll rely on the state variable in this case\n    }\n  };\n\n  /**\n   * Updates placement of an option to a target\n   */\n  const updatePlacement = (optionId: string, targetId: string) => {\n    if (isSubmitted || isQuizReviewMode) return;\n    \n    // Create new copy of placed answers\n    const newAnswers: Record<string, string | null> = { ...placedAnswers };\n    \n    // Clear the option from any other target it might have been in\n    for (const tId in newAnswers) {\n      if (newAnswers[tId] === optionId && tId !== targetId) {\n        newAnswers[tId] = null;\n      }\n    }\n    \n    // Place the option in the target\n    newAnswers[targetId] = optionId;\n    \n    // Update state with new answers (this will trigger useAutoValidation)\n    setPlacedAnswers(newAnswers);\n  };\n\n  /**\n   * Handles drop event on a target\n   */\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>, targetId: string) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drag-over');\n\n    if (isSubmitted || isQuizReviewMode) return;\n\n    // Get the option ID from dataTransfer or state\n    let optionId = e.dataTransfer.getData('text/plain');\n    if (!optionId && currentDraggedOptionId) {\n      optionId = currentDraggedOptionId;\n    }\n\n    if (!optionId) return;\n\n    // Validate option exists\n    const optionBeingMoved = controller.getOptions().find(opt => opt.option_id === optionId);\n    if (!optionBeingMoved) return;\n    \n    updatePlacement(optionId, targetId);\n    setCurrentDraggedOptionId(null);\n  };\n\n  /**\n   * Drag event handlers\n   */\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault(); // Necessary to allow dropping\n    e.dataTransfer.dropEffect = 'move';\n  };\n  \n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.currentTarget.classList.add('drag-over');\n  };\n  \n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drag-over');\n  };\n\n  /**\n   * Removes an option from a target\n   */\n  const handleRemoveFromTarget = (targetId: string) => {\n    if (isSubmitted || isQuizReviewMode) return;\n    \n    const optionId = placedAnswers[targetId];\n    if (!optionId) return;\n    \n    // Update answers through controller logic\n    const newAnswers: Record<string, string | null> = { ...placedAnswers, [targetId]: null };\n    setPlacedAnswers(newAnswers);\n  };\n\n  /**\n   * Renders a draggable option item\n   */\n  const renderOption = (option: DragAndDropOption) => {\n    return (\n      <div\n        key={option.option_id}\n        draggable={!isSubmitted && !isQuizReviewMode}\n        onDragStart={(e) => handleDragStart(e, option.option_id)}\n        className=\"p-2 bg-blue-100 border border-blue-300 rounded cursor-grab transition-all duration-200 hover:scale-105\"\n      >\n        {option.text}\n      </div>\n    );\n  };\n\n  /**\n   * Determines if we should show feedback for answers\n   */\n  const shouldShowFeedback = (): boolean => {\n    // Only show when explicitly enabled and either in review mode or all targets filled\n    return showFeedbackStyling && (isQuizReviewMode || allTargetsFilled);\n  };\n\n  /**\n   * Gets border color for a target based on correctness\n   */\n  const getTargetBorderColor = (targetId: string, placedOptionId: string | null): string => {\n    // Default style when not showing feedback\n    if (!shouldShowFeedback()) {\n      return 'border-gray-300';\n    }\n    \n    // When showing feedback, check if placement is correct\n    const isCorrect = controller.isPlacementCorrect(targetId, placedOptionId);\n    return isCorrect ? 'border-green-500' : 'border-red-500';\n  };\n  \n  /**\n   * Gets hint text for incorrect answers when showing feedback\n   */\n  const getTargetHintText = (targetId: string, placedOptionId: string | null): string | null => {\n    // Only show hints when feedback is enabled and placement is incorrect\n    if (!shouldShowFeedback()) {\n      return null;\n    }\n    \n    // Don't show hint if placement is correct\n    if (controller.isPlacementCorrect(targetId, placedOptionId)) {\n      return null;\n    }\n    \n    // Get the correct option for this target\n    const correctOptionId = controller.getCorrectOptionForTarget(targetId);\n    if (!correctOptionId) {\n      return null;\n    }\n    \n    // Find option details\n    const correctOption = controller.getOptions().find(\n      opt => opt.option_id === correctOptionId\n    );\n    \n    return correctOption ? `(Correct: ${correctOption.text})` : null;\n  };\n  \n  /**\n   * Renders a target with appropriate styling based on state\n   */\n  const renderTarget = (target: DragAndDropTarget) => {\n    const placedOptionId = placedAnswers[target.target_id];\n    const placedOption = placedOptionId ? \n      controller.getOptions().find(opt => opt.option_id === placedOptionId) : \n      null;\n      \n    const borderColor = getTargetBorderColor(target.target_id, placedOptionId);\n    const hintText = getTargetHintText(target.target_id, placedOptionId);\n\n    return (\n      <div\n        key={target.target_id}\n        onDrop={(e) => handleDrop(e, target.target_id)}\n        onDragOver={handleDragOver}\n        onDragEnter={handleDragEnter}\n        onDragLeave={handleDragLeave}\n        className={`p-4 border-2 ${borderColor} rounded min-h-[80px] bg-gray-50 flex flex-col justify-between transition-all duration-200`}\n      >\n        <p className=\"font-semibold\">{target.text}</p>\n        {placedOption && (\n          <div className=\"mt-2 p-2 bg-yellow-100 border border-yellow-300 rounded flex justify-between items-center\">\n            <span>{placedOption.text}</span>\n            {!isSubmitted && !isQuizReviewMode && (\n              <button\n                onClick={() => handleRemoveFromTarget(target.target_id)}\n                className=\"ml-2 text-red-500 hover:text-red-700\"\n                title=\"Remove item\"\n                aria-label=\"Remove item\"\n              >\n                &times;\n              </button>\n            )}\n          </div>\n        )}\n        {hintText && <p className=\"text-xs mt-1 text-gray-600\">{hintText}</p>}\n      </div>\n    );\n  };\n\n  // Dev info banner component\n  const DevInfoBanner = memo(() => (\n    <div className=\"mt-4 p-2 border rounded bg-gray-50 text-xs\">\n      <p>Dev Info: {allTargetsFilled ? 'All targets filled' : 'Not all targets filled'}</p>\n    </div>\n  ));\n\n  // Auto-validating feedback banner\n  const AutoValidatingBanner = memo(() => (\n    <div className=\"mt-4 p-2 bg-yellow-100 border border-yellow-300 rounded\">\n      <p className=\"text-sm text-yellow-700\">All targets filled. Your answer will be submitted.</p>\n    </div>\n  ));\n\n  // Ready to submit banner\n  const ReadyBanner = memo(() => (\n    <div className=\"mt-4 p-2 bg-green-100 border border-green-300 rounded\">\n      <p className=\"text-sm text-green-700\">All targets filled. Ready to submit.</p>\n    </div>\n  ));\n  \n  /**\n   * Determines which feedback banner to show\n   */\n  const getFeedbackBanner = () => {\n    // Show development info in development mode\n    if (process.env.NODE_ENV === 'development') {\n      return <DevInfoBanner />;\n    }\n    \n    // Only show banners when not already submitted and not showing feedback\n    if (isSubmitted || showFeedbackStyling) {\n      return null;\n    }\n    \n    // Auto-validating state\n    if (autoValidating && allTargetsFilled) {\n      return <AutoValidatingBanner />;\n    }\n    \n    // Ready to submit state\n    if (allTargetsFilled && !autoValidating) {\n      return <ReadyBanner />;\n    }\n    \n    return null;\n  };\n\n  return (\n    <div className=\"p-4 bg-white shadow-md rounded-lg\">\n      {/* Available Options */}\n      <div className=\"mb-4\">\n        <p className=\"font-medium\">Available Items:</p>\n        <div className=\"flex flex-wrap gap-2 mt-2\">\n          {availableOptions.map(renderOption)}\n        </div>\n      </div>\n\n      {/* Targets */}\n      <div>\n        <p className=\"font-medium\">Match items to the correct targets:</p>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-2\">\n          {controller.getTargets().map(renderTarget)}\n        </div>\n      </div>\n\n      {getFeedbackBanner()}\n    </div>\n  );\n};\n\nexport default DragAndDropQuestionComponent;\n"
    },
    {
      "filepath": "app/features/quiz/components/question-types/SingleSelectionComponent.tsx",
      "content": "'use client';\n\nimport React, { memo, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { SingleSelectionQuestion, SelectionOption } from '../../../../types/quiz';\nimport { SingleSelectionController } from '../../controllers/SingleSelectionController';\nimport { useAutoValidation } from '../../hooks/useAutoValidation';\n\n// Icons for options\nconst CorrectIcon = memo(() => (\n  <span className=\"option-icon inline-flex items-center justify-center w-6 h-6 rounded-full text-white font-bold text-sm bg-success-gradient shadow-md\">\u2713</span>\n));\n\nconst IncorrectIcon = memo(() => (\n  <span className=\"option-icon inline-flex items-center justify-center w-6 h-6 rounded-full text-white font-bold text-sm bg-error-gradient shadow-md\">\u2717</span>\n));\n\ninterface SingleSelectionComponentProps {\n  question: SingleSelectionQuestion;\n  onAnswerSelect: (optionId: string) => void;\n  selectedOptionId?: string | null;\n  isSubmitted?: boolean;\n  showCorrectAnswer?: boolean;\n}\n\nconst SingleSelectionComponent: React.FC<SingleSelectionComponentProps> = ({\n  question,\n  onAnswerSelect,\n  selectedOptionId,\n  isSubmitted = false,\n  showCorrectAnswer = false,\n}) => {\n  // Create controller instance\n  const controller = new SingleSelectionController(question);\n  \n  // Use auto-validation hook\n  const [currentSelection, setCurrentSelection, isValidating, allComplete] = useAutoValidation<\n    SingleSelectionQuestion, \n    string | null\n  >(\n    controller,\n    selectedOptionId || null,\n    onAnswerSelect,\n    true // Auto-validate when complete\n  );\n  \n  // Handle manual selection change\n  const handleOptionClick = (optionId: string) => {\n    if (!isSubmitted) {\n      setCurrentSelection(optionId);\n    }\n  };\n  \n  // Sync external selectedOptionId with our internal state\n  useEffect(() => {\n    if (selectedOptionId !== currentSelection && selectedOptionId !== undefined) {\n      setCurrentSelection(selectedOptionId);\n    }\n  }, [selectedOptionId]);\n\n  return (\n    <div className=\"options-container grid grid-cols-1 gap-4 mb-8\">\n      {question.options.map((option: SelectionOption, index: number) => {\n        const isSelected = currentSelection === option.option_id;\n        const isCorrect = question.correctAnswerOptionId === option.option_id;\n        const optionLetter = String.fromCharCode(65 + index);\n        \n        // Determine option styles\n        let baseStyle = \"relative text-left p-5 border-2 rounded-rounded-md-ref bg-white transition-all duration-200 ease-in-out shadow-shadow-1 overflow-hidden\";\n        let stateStyle = \"border-custom-gray-3\"; \n        let hoverStyle = isSubmitted ? \"cursor-default\" : \"cursor-pointer hover:-translate-y-1 hover:shadow-shadow-2 hover:border-custom-primary\";\n        \n        // Apply feedback styling if necessary\n        if (isSubmitted || showCorrectAnswer) {\n          if (isCorrect) {\n            stateStyle = \"border-custom-success bg-green-500/[.05]\";\n          } else if (isSelected && !isCorrect) {\n            stateStyle = \"border-custom-error bg-red-500/[.05]\";\n          } else {\n            stateStyle = \"border-custom-gray-3 bg-gray-50 opacity-70\";\n            hoverStyle = \"cursor-default\";\n          }\n        } else if (isSelected) {\n          stateStyle = \"border-custom-primary ring-2 ring-custom-primary shadow-shadow-2\";\n        }\n        \n        return (\n          <motion.button\n            key={option.option_id}\n            type=\"button\"\n            onClick={() => handleOptionClick(option.option_id)}\n            className={`${baseStyle} ${stateStyle} ${hoverStyle}`}\n            disabled={isSubmitted}\n            aria-pressed={isSelected}\n            whileHover={{ scale: isSubmitted ? 1 : 1.02, transition: { duration: 0.15 } }} \n            whileTap={{ scale: isSubmitted ? 1 : 0.98, transition: { duration: 0.1 } }} \n            layout\n          >\n            {/* Accent border */}\n            <span className={`absolute top-0 left-0 w-1 h-full transition-all duration-200 ease-in-out ${\n              isSelected ? 'bg-custom-primary' : \n              isCorrect && (isSubmitted || showCorrectAnswer) ? 'bg-custom-success' : \n              isSelected && !isCorrect && (isSubmitted || showCorrectAnswer) ? 'bg-custom-error' : \n              'bg-custom-gray-3'\n            } ${isSubmitted ? '' : 'group-hover:bg-custom-primary'}`}></span>\n\n            <div className=\"option-content flex items-center justify-between pl-4\">\n              <div className=\"option-text text-base md:text-lg font-medium text-custom-gray-1\">\n                <span className=\"option-letter inline-block w-6 font-bold text-custom-primary mr-2\">{optionLetter}.</span>\n                {option.text}\n              </div>\n              \n              {/* Show feedback icons when appropriate */}\n              {(isSubmitted || showCorrectAnswer) && isCorrect && <CorrectIcon />}\n              {(isSubmitted || showCorrectAnswer) && isSelected && !isCorrect && <IncorrectIcon />}\n            </div>\n          </motion.button>\n        );\n      })}\n    </div>\n  );\n};\n\n// Memoize to prevent unnecessary re-renders\nexport default memo(SingleSelectionComponent);\n"
    },
    {
      "filepath": "app/features/quiz/components/question-types/OrderQuestionComponent.tsx",
      "content": "'use client';\n\nimport React, { useState, useEffect, memo, useMemo } from 'react'; // Added useMemo\nimport { motion } from 'framer-motion';\nimport { OrderQuestion, OrderItem, OrderQuestionAnswer } from '@/app/types/quiz';\nimport { OrderController } from '../../controllers/OrderController';\nimport { useAutoValidation } from '../../hooks/useAutoValidation';\n\ninterface OrderQuestionComponentProps {\n  question: OrderQuestion;\n  onAnswerSelect: (answer: OrderQuestionAnswer) => void; // Corrected definition\n  userAnswer?: OrderQuestionAnswer;\n  isSubmitted?: boolean;\n  showCorrectAnswer?: boolean;\n  isQuizReviewMode?: boolean;\n  validateOnComplete?: boolean;\n}\n\n/**\n * OrderQuestionComponent handles drag and drop interactions for ordering questions\n * Uses the OrderController for business logic and validation\n * \n * This component implements a slot-based ordering approach:\n * - Available items can be dragged to ordered slots\n * - Items in slots can be dragged back to available items\n * - Items can be dragged between slots to reorder\n */\nconst OrderQuestionComponent: React.FC<OrderQuestionComponentProps> = ({ \n  question, \n  onAnswerSelect, \n  userAnswer, // Changed from initialAnswer to userAnswer to match props definition\n  isSubmitted = false,\n  showCorrectAnswer = false,\n  isQuizReviewMode = false,\n  validateOnComplete = true\n}) => {\n  // Create controller instance, memoized to prevent re-creation on every render\n  const controller = useMemo(() => new OrderController(question), [question]);\n  \n  // Track the current dragged item ID for browsers that don't support dataTransfer properly\n  const [currentDraggedItemId, setCurrentDraggedItemId] = useState<string | null>(null);\n  \n  // Track available items (not yet placed in slots)\n  const [availableItems, setAvailableItems] = useState<OrderItem[]>([]);\n\n  // Initialize with controller's initial answer or user's previous answer\n  // This is memoized and passed to useAutoValidation\n  const initialAnswerForHook = useMemo(() => {\n    return userAnswer || controller.createInitialAnswer();\n  }, [userAnswer, controller]);\n  \n  // Use auto-validation hook with direct dependencies to ensure consistent state\n  const [placedAnswers, setPlacedAnswers, autoValidating, allItemsOrdered] = useAutoValidation<\n    OrderQuestion,\n    OrderQuestionAnswer\n  >(\n    controller,\n    initialAnswerForHook, // Use memoized initialAnswerForHook\n    onAnswerSelect,\n    validateOnComplete\n  );\n\n  // Set up available items and placed items on mount and when userAnswer changes\n  useEffect(() => {\n    if (isQuizReviewMode) {\n      // In review mode, show the correct placement\n      const correctAnswer: OrderQuestionAnswer = {};\n      controller.getCorrectOrder().forEach((itemId, index) => {\n        correctAnswer[`slot_${index}`] = itemId;\n      });\n      setPlacedAnswers(correctAnswer);\n      setAvailableItems([]); // No available items in review mode, all are placed correctly\n    } else {\n      // Start with a fresh arrangement based on userAnswer or initial state\n      const answer = userAnswer || controller.createInitialAnswer();\n      \n      // Find which items are placed in slots\n      const placedItemIds = Object.values(answer).filter(id => id !== null) as string[];\n      \n      // Available items are those not yet placed in slots\n      const availableItemsList = question.items.filter(\n        item => !placedItemIds.includes(item.item_id)\n      );\n      \n      setAvailableItems(availableItemsList);\n      setPlacedAnswers(answer);\n    }\n  }, [isQuizReviewMode, userAnswer, question.items, controller, setPlacedAnswers]);\n\n  /**\n   * Simplified drag start event handler (similar to DragAndDropQuestionComponent)\n   */\n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>, itemId: string) => {\n    if (isSubmitted || isQuizReviewMode) return;\n    \n    // Store the current dragged item info in state (fallback for browsers with dataTransfer issues)\n    setCurrentDraggedItemId(itemId);\n    \n    try {\n      // Set data in dataTransfer object - simple approach\n      e.dataTransfer.effectAllowed = 'move';\n      e.dataTransfer.setData('text/plain', itemId);\n      console.log('Drag start:', itemId);\n    } catch (err) {\n      console.warn('Could not set dataTransfer data:', err);\n      // We'll rely on the state variable in this case\n    }\n  };\n\n  /**\n   * Simplified drag event handlers (similar to DragAndDropQuestionComponent)\n   */\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault(); // Necessary to allow dropping\n    e.dataTransfer.dropEffect = 'move';\n  };\n  \n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.currentTarget.classList.add('drag-over');\n  };\n  \n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drag-over');\n  };\n\n  /**\n   * Updates placement of an item in a specific slot\n   * Similar to updatePlacement in DragAndDropQuestionComponent but with different logic for OrderQuestionComponent\n   */\n  const updatePlacement = (itemId: string, targetSlotKey: string) => {\n    if (isSubmitted || isQuizReviewMode) return;\n    \n    console.log('Updating placement:', { itemId, targetSlotKey });\n    \n    // Create new copy of placed answers\n    const newAnswers: OrderQuestionAnswer = { ...placedAnswers };\n    \n    // Find if the item is already in another slot\n    let sourceSlotKey: string | undefined;\n    Object.entries(newAnswers).forEach(([key, value]) => {\n      if (value === itemId) {\n        sourceSlotKey = key;\n      }\n    });\n    \n    // Get current item in target slot (might be null)\n    const itemInTargetSlot = newAnswers[targetSlotKey];\n    \n    if (sourceSlotKey) {\n      // Item is being moved from one slot to another\n      if (itemInTargetSlot) {\n        // Swap the items\n        newAnswers[sourceSlotKey] = itemInTargetSlot;\n      } else {\n        // Clear the source slot since target is empty\n        newAnswers[sourceSlotKey] = null;\n      }\n    } else {\n      // Item is coming from available items\n      if (itemInTargetSlot) {\n        // Put the displaced item back in available items\n        const displacedItem = question.items.find(item => item.item_id === itemInTargetSlot);\n        if (displacedItem) {\n          setAvailableItems(prev => {\n            if (!prev.find(i => i.item_id === displacedItem.item_id)) {\n              return [...prev, displacedItem];\n            }\n            return prev;\n          });\n        }\n      }\n      \n      // Remove the item being placed from available items\n      setAvailableItems(prev => prev.filter(item => item.item_id !== itemId));\n    }\n    \n    // Place the item in the target slot\n    newAnswers[targetSlotKey] = itemId;\n    \n    // Update state\n    setPlacedAnswers(newAnswers);\n    setCurrentDraggedItemId(null); // Clear dragged item state\n  };\n\n  /**\n   * Simplified drop handler for slots (similar to handleDrop in DragAndDropQuestionComponent)\n   */\n  const handleDropOnSlot = (e: React.DragEvent<HTMLDivElement>, targetSlotKey: string) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drag-over');\n    \n    console.log('Drop on slot:', targetSlotKey);\n    \n    if (isSubmitted || isQuizReviewMode) return;\n\n    // Get the item ID from dataTransfer or state\n    let itemId = e.dataTransfer.getData('text/plain');\n    if (!itemId && currentDraggedItemId) {\n      itemId = currentDraggedItemId;\n      console.log('Using fallback itemId from state:', itemId);\n    }\n\n    if (!itemId) {\n      console.error('No item ID found in drop data');\n      return;\n    }\n\n    // Validate item exists\n    const droppedItem = question.items.find(item => item.item_id === itemId);\n    if (!droppedItem) {\n      console.error('Item not found:', itemId);\n      return;\n    }\n    \n    // Update the placement\n    updatePlacement(itemId, targetSlotKey);\n  };\n\n  /**\n   * Handles drop event back to available items\n   */\n  const handleDropOnAvailable = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drag-over');\n    \n    console.log('Drop on available items area');\n    \n    if (isSubmitted || isQuizReviewMode) return;\n\n    // Get the item ID from dataTransfer or state\n    let itemId = e.dataTransfer.getData('text/plain');\n    if (!itemId && currentDraggedItemId) {\n      itemId = currentDraggedItemId;\n      console.log('Using fallback itemId from state for available drop:', itemId);\n    }\n\n    if (!itemId) {\n      console.error('No item ID found in drop data');\n      return;\n    }\n\n    // Find which slot this item is in (if any)\n    let sourceSlotKey: string | null = null;\n    Object.entries(placedAnswers).forEach(([key, value]) => {\n      if (value === itemId) {\n        sourceSlotKey = key;\n      }\n    });\n    \n    if (!sourceSlotKey) {\n      console.log('Item not found in any slot, possibly already in available area');\n      return;\n    }\n    \n    // Create a copy of current answers\n    const newAnswers = { ...placedAnswers };\n    \n    // Remove the item from its slot\n    newAnswers[sourceSlotKey] = null;\n    \n    // Move the item back to available items\n    const item = question.items.find(i => i.item_id === itemId);\n    if (item) {\n      setAvailableItems(prev => {\n        if (!prev.find(i => i.item_id === item.item_id)) { // Avoid duplicates\n          return [...prev, item];\n        }\n        return prev;\n      });\n    }\n    \n    // Update state\n    setPlacedAnswers(newAnswers);\n    setCurrentDraggedItemId(null); // Clear dragged item state\n  };\n\n  /**\n   * Find the text for an item by its ID\n   */\n  const getItemTextById = (itemId: string): string => {\n    const item = question.items.find(item => item.item_id === itemId);\n    return item ? item.text : 'Unknown item';\n  };\n\n  /**\n   * Determines if we should show feedback for answers\n   */\n  const shouldShowFeedback = (): boolean => {\n    return (isSubmitted && showCorrectAnswer) || isQuizReviewMode;\n  };\n\n  /**\n   * Gets styles for an available item\n   */\n  const getAvailableItemStyles = (itemId: string): string => {\n    const baseStyle = \"p-4 border-2 rounded mb-2 bg-white transition-all duration-200\";\n    \n    // If showing feedback and the item should be part of the correct order\n    if (shouldShowFeedback() && controller.getCorrectOrder().includes(itemId)) {\n      // This is a distractor that should have been used\n      return `${baseStyle} border-blue-500 bg-blue-50`;\n    }\n    \n    // Default style or when being dragged\n    return `${baseStyle} ${\n      itemId === currentDraggedItemId ? 'border-blue-500 shadow-md opacity-50' : 'border-gray-300'\n    }`;\n  };\n\n  /**\n   * Gets styles for a slot item based on its correctness\n   */\n  const getSlotItemStyles = (slotIndex: number, itemId: string | null): string => {\n    const baseStyle = \"p-4 border-2 rounded mb-2 transition-all duration-200 relative pl-10 min-h-[60px] flex items-center\"; // Base styles\n    \n    // When no item is placed in this slot\n    if (itemId === null) {\n      // If showing feedback, keep it neutral unless we want to show \"empty but should be X\"\n      if (shouldShowFeedback()) {\n         return `${baseStyle} border-gray-300 bg-gray-50`; // Or specific style for empty during review\n      }\n      // Make empty slots more obviously droppable with dashed border and distinct background\n      return `${baseStyle} border-dashed border-blue-300 bg-blue-50/50 hover:bg-blue-100/50 hover:border-blue-400 justify-center`; // Center placeholder text\n    }\n    \n    // If not showing feedback, just show normal style or highlight if dragged\n    if (!shouldShowFeedback()) {\n      return `${baseStyle} bg-white ${\n        itemId === currentDraggedItemId \n          ? 'border-blue-500 shadow-md opacity-50' \n          : 'border-gray-300 hover:border-blue-300 hover:shadow-md'\n      }`;\n    }\n    \n    // Check if the item is in the correct position\n    const isCorrect = controller.isItemCorrectlyPlacedInSlot(slotIndex, itemId);\n    \n    return `${baseStyle} ${\n      isCorrect \n        ? 'border-green-500 bg-green-50 shadow-md' \n        : 'border-red-500 bg-red-50 shadow-sm'\n    }`;\n  };\n\n  // Auto-validating feedback banner\n  const AutoValidatingBanner = memo(() => (\n    <div className=\"mt-4 p-2 border rounded bg-blue-50 text-blue-700\">\n      Auto-validating your answer... All slots filled.\n    </div>\n  ));\n\n  // Ready to submit banner\n  const ReadyBanner = memo(() => (\n    <div className=\"mt-4 p-2 border rounded bg-green-50 text-green-700\">\n      All slots filled. Ready to submit!\n    </div>\n  ));\n\n  /**\n   * Determines which feedback banner to show\n   */\n  const getFeedbackBanner = () => {\n    if (autoValidating && allItemsOrdered) {\n      return <AutoValidatingBanner />;\n    }\n    \n    if (allItemsOrdered && !autoValidating) {\n      return <ReadyBanner />;\n    }\n    \n    return null;\n  };\n\n  // Position indicator component\n  const PositionIndicator = memo(({ position }: { position: number }) => (\n    <div className=\"absolute left-0 top-0 bottom-0 w-8 flex items-center justify-center bg-gray-100 border-r border-gray-300 text-gray-700 font-bold\">\n      {position + 1}\n    </div>\n  ));\n\n  // Feedback icon component\n  const FeedbackIcon = memo(({ isCorrect }: { isCorrect: boolean }) => (\n    <div className=\"absolute right-4 top-1/2 transform -translate-y-1/2\">\n      {isCorrect ? (\n        <span className=\"inline-flex items-center justify-center w-6 h-6 rounded-full text-white font-bold text-sm bg-green-500 shadow-md\">\n          \u2713\n        </span>\n      ) : (\n        <span className=\"inline-flex items-center justify-center w-6 h-6 rounded-full text-white font-bold text-sm bg-red-500 shadow-md\">\n          \u2717\n        </span>\n      )}\n    </div>\n  ));\n\n  // Show the correct order if needed\n  const CorrectOrderDisplay = memo(() => (\n    <div className=\"mt-6 p-4 border rounded bg-blue-50\">\n      <h3 className=\"font-semibold text-blue-800 mb-2\">Correct Order:</h3>\n      <ol className=\"list-decimal list-inside\">\n        {controller.getCorrectOrder().map((itemId, index) => (\n          <li key={`correct-${itemId}`} className=\"py-1 text-gray-800\">\n            {getItemTextById(itemId)}\n          </li>\n        ))}\n      </ol>\n    </div>\n  ));\n\n  return (\n    <div className=\"p-4 bg-white shadow-md rounded-lg\">\n      <div className=\"flex flex-col md:flex-row gap-6\">\n        {/* Left side: Available Items */}\n        <div className=\"flex-1\">\n          <h3 className=\"font-medium mb-4\">Available Items:</h3>\n          <div \n            className=\"p-4 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50 min-h-[200px] transition-colors duration-200 hover:border-blue-300\"\n            onDragOver={handleDragOver}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDropOnAvailable}\n          >\n            {availableItems.length > 0 ? (\n              <div className=\"space-y-2\">\n                {availableItems.map((item) => (\n                  <motion.div\n                    key={`available-${item.item_id}`}\n                    layout\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                  >\n                    <div\n                      draggable={!isSubmitted && !isQuizReviewMode}\n                      onDragStart={(e) => handleDragStart(e, item.item_id)}\n                      className={`${getAvailableItemStyles(item.item_id)} cursor-grab active:cursor-grabbing select-none`}\n                    >\n                      {item.text}\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-gray-500 text-center py-8\">\n                {isSubmitted || isQuizReviewMode \n                  ? \"All items placed.\" \n                  : \"Drag items here to remove from sequence.\"}\n              </p>\n            )}\n          </div>\n        </div>\n        \n        {/* Right side: Ordered Slots */}\n        <div className=\"flex-1\">\n          <h3 className=\"font-medium mb-4\">Ordered Sequence:</h3>\n          <div className=\"space-y-2\">\n            {Array.from({ length: controller.getSlotCount() }).map((_, index) => {\n              const slotKey = `slot_${index}`;\n              const itemId = placedAnswers[slotKey];\n              \n              return (\n                <motion.div\n                  key={slotKey}\n                  layout\n                  transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                >\n                  <div\n                    className={getSlotItemStyles(index, itemId)}\n                    draggable={!isSubmitted && !isQuizReviewMode && itemId !== null}\n                    onDragStart={(e) => itemId && handleDragStart(e, itemId)}\n                    onDragOver={handleDragOver}\n                    onDragEnter={handleDragEnter}\n                    onDragLeave={handleDragLeave}\n                    onDrop={(e) => handleDropOnSlot(e, slotKey)}\n                  >\n                    <PositionIndicator position={index} />\n                    \n                    {itemId ? (\n                      <div className=\"flex-1\">\n                        <span className=\"select-none\">{getItemTextById(itemId)}</span>\n                        {shouldShowFeedback() && (\n                          <>\n                            <FeedbackIcon isCorrect={controller.isItemCorrectlyPlacedInSlot(index, itemId)} />\n                            {!controller.isItemCorrectlyPlacedInSlot(index, itemId) && controller.getCorrectItemForSlot(index) && (\n                              <div className=\"absolute bottom-1 right-1 text-xs text-gray-500 p-1 bg-gray-100 rounded\">\n                                Correct: {getItemTextById(controller.getCorrectItemForSlot(index)!)}\n                              </div>\n                            )}\n                          </>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"flex-1 text-center\">\n                        <span className=\"text-gray-400\">Drop item here</span>\n                        {shouldShowFeedback() && controller.getCorrectItemForSlot(index) && (\n                           <div className=\"absolute bottom-1 right-1 text-xs text-red-500 p-1 bg-red-50 rounded\">\n                             Should be: {getItemTextById(controller.getCorrectItemForSlot(index)!)}\n                           </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {autoValidating && allItemsOrdered && (\n        <div className=\"mt-4 p-2 border rounded bg-blue-50 text-blue-700\">\n          Auto-validating your answer... All slots filled.\n        </div>\n      )}\n      \n      {allItemsOrdered && !autoValidating && !isSubmitted && !showCorrectAnswer && (\n        <div className=\"mt-4 p-2 border rounded bg-green-50 text-green-700\">\n          All slots filled. Ready to submit!\n        </div>\n      )}\n      \n      {shouldShowFeedback() && <CorrectOrderDisplay />}\n      \n      <style jsx global>{`\n        .drag-over {\n          @apply border-blue-400 bg-blue-50 shadow-md;\n          transform: scale(1.02);\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default memo(OrderQuestionComponent);\n"
    },
    {
      "filepath": "app/features/quiz/components/question-types/QuestionTypeRenderer.tsx",
      "content": "import React, { memo } from 'react';\nimport { AnyQuestion, SingleSelectionQuestion, MultiChoiceQuestion, DragAndDropQuestion, DropdownSelectionQuestion, OrderQuestion } from '../../../../types/quiz';\nimport SingleSelectionComponent from './SingleSelectionComponent';\nimport MultiChoiceComponent from './MultiChoiceComponent';\nimport DragAndDropQuestionComponent from './DragAndDropQuestionComponent';\nimport DropdownSelectionComponent from './DropdownSelectionComponent';\nimport OrderQuestionComponent from './OrderQuestionComponent';\nimport { createQuestionController } from '../../controllers/QuestionControllerFactory';\n\ninterface QuestionTypeRendererProps {\n  question: AnyQuestion;\n  onAnswerSelect: (answer: any) => void;\n  selectedAnswer: any;\n  isSubmitted: boolean;\n  shouldApplyFeedbackStyling: boolean; // Renamed from showCorrectAnswer\n  isQuizReviewMode: boolean; // New prop\n}\n\n// Using Factory pattern to render appropriate component based on question type\nconst QuestionTypeRenderer: React.FC<QuestionTypeRendererProps> = ({\n  question,\n  onAnswerSelect,\n  selectedAnswer,\n  isSubmitted,\n  shouldApplyFeedbackStyling, // Updated prop name\n  isQuizReviewMode, // New prop\n}) => {\n  // Type guard to check if question is defined\n  if (!question || !question.type) {\n    return (\n      <div className=\"p-4 my-4 border border-red-200 rounded bg-red-50\">\n        <p className=\"font-semibold text-red-700\">Error: Invalid question object</p>\n      </div>\n    );\n  }\n  \n  // Create controller using factory (this will be used in future components)\n  try {\n    createQuestionController(question);\n  } catch (err) {\n    console.log('Controller not yet available for this question type:', question.type);\n  }\n\n  switch (question.type) {\n    case 'single_selection':\n      return (\n        <SingleSelectionComponent\n          question={question as SingleSelectionQuestion}\n          onAnswerSelect={onAnswerSelect}\n          selectedOptionId={selectedAnswer as string | undefined}\n          isSubmitted={isSubmitted}\n          showCorrectAnswer={shouldApplyFeedbackStyling} // Pass renamed prop\n        />\n      );\n    case 'multi':\n      return (\n        <MultiChoiceComponent\n          question={question as MultiChoiceQuestion}\n          onAnswerSelect={onAnswerSelect}\n          selectedOptionIds={selectedAnswer as string[] | undefined}\n          isSubmitted={isSubmitted}\n          showCorrectAnswer={shouldApplyFeedbackStyling} // Pass renamed prop\n        />\n      );\n    case 'drag_and_drop':\n      return (\n        <DragAndDropQuestionComponent\n          question={question as DragAndDropQuestion}\n          onAnswerChange={onAnswerSelect} // Note: prop name is onAnswerChange here\n          userAnswer={selectedAnswer as Record<string, string | null> | undefined}\n          isSubmitted={isSubmitted}\n          showFeedbackStyling={shouldApplyFeedbackStyling}\n          isQuizReviewMode={isQuizReviewMode}\n          validateOnDrop={true}\n        />\n      );\n    case 'dropdown_selection': // Add new case for dropdown_selection\n      return (\n        <DropdownSelectionComponent\n          question={question as DropdownSelectionQuestion}\n          onAnswerSelect={onAnswerSelect} // Prop name is onAnswerSelect\n          selectedAnswer={selectedAnswer as Record<string, string | null> | undefined | null} // Corrected prop name to selectedAnswer\n          isSubmitted={isSubmitted}\n          showCorrectAnswer={shouldApplyFeedbackStyling}\n          validateOnComplete={true} // Add the new prop to wait for all dropdowns to be filled\n          // isQuizReviewMode prop is not used by DropdownSelectionComponent, so it's removed for now.\n          // If needed later, it can be added to DropdownSelectionComponentProps.\n        />\n      );\n    case 'order':\n      return (\n        <OrderQuestionComponent\n          question={question as OrderQuestion}\n          onAnswerSelect={onAnswerSelect}\n          userAnswer={selectedAnswer as Record<string, string | null> | undefined}\n          isSubmitted={isSubmitted}\n          showCorrectAnswer={shouldApplyFeedbackStyling}\n          isQuizReviewMode={isQuizReviewMode}\n          validateOnComplete={true}\n        />\n      );\n    default:\n      return (\n        <div className=\"p-4 my-4 border border-red-200 rounded bg-red-50\">\n          <p className=\"font-semibold text-red-700\">Error: Unknown question type: {(question as any).type}</p>\n        </div>\n      );\n  }\n};\n\n// Memoize the component to prevent unnecessary re-renders\nexport default memo(QuestionTypeRenderer);\n"
    },
    {
      "filepath": "app/features/quiz/components/question-types/DropdownSelectionComponent.tsx",
      "content": "import React, { useState, useEffect, useMemo, memo } from 'react';\nimport { DropdownSelectionQuestion, DropdownOption } from '../../../../types/quiz';\nimport { DropdownSelectionController } from '../../controllers/DropdownSelectionController';\nimport { useAutoValidation } from '../../hooks/useAutoValidation';\n\ninterface DropdownSelectionComponentProps {\n  question: DropdownSelectionQuestion;\n  onAnswerSelect: (answer: Record<string, string | null>) => void;\n  selectedAnswer?: Record<string, string | null> | null;\n  isSubmitted?: boolean;\n  showCorrectAnswer?: boolean;\n  validateOnComplete?: boolean; // New prop similar to validateOnDrop in DragAndDrop\n}\n\nconst DropdownSelectionComponent: React.FC<DropdownSelectionComponentProps> = ({\n  question,\n  onAnswerSelect,\n  selectedAnswer,\n  isSubmitted = false,\n  showCorrectAnswer = false,\n  validateOnComplete = true, // Default to true for auto-validation\n}) => {\n  // Create controller instance\n  const controller = new DropdownSelectionController(question);\n  \n  // Initialize selections from placeholder keys\n  const initialSelections = useMemo(() => {\n    const selections: Record<string, string | null> = {};\n    controller.getPlaceholderKeys().forEach(key => {\n      selections[key] = selectedAnswer?.[key] || null;\n    });\n    return selections;\n  }, [controller, selectedAnswer]);\n  \n  // Use auto-validation hook\n  const [currentSelections, setCurrentSelections, autoValidating, allDropdownsFilled] = useAutoValidation<\n    DropdownSelectionQuestion,\n    Record<string, string | null>\n  >(\n    controller,\n    initialSelections,\n    onAnswerSelect,\n    validateOnComplete\n  );\n  \n  // Handle selection change for a placeholder\n  const handleSelectChange = (placeholderKey: string, selectedOptionText: string | null) => {\n    if (isSubmitted) return; // Don't allow changes after submission shown\n\n    const newSelections = {\n      ...currentSelections,\n      [placeholderKey]: selectedOptionText,\n    };\n    \n    setCurrentSelections(newSelections);\n  };\n  \n  // Sync with external changes to selectedAnswer\n  useEffect(() => {\n    if (selectedAnswer && JSON.stringify(selectedAnswer) !== JSON.stringify(currentSelections)) {\n      setCurrentSelections({...selectedAnswer});\n    }\n  }, [selectedAnswer]);\n\n  // Memoize parsed parts to avoid re-computation on every render unless question.question changes\n  const parsedQuestionParts = useMemo(() => {\n    const parts: (string | { placeholder: string })[] = [];\n    if (!question.question) return parts;\n\n    // Normalize the question text - convert all escaped brackets to regular brackets\n    // and handle any line breaks properly\n    const processedQuestion = question.question\n      .replace(/\\\\n/g, '\\n')\n      .replace(/\\\\([[\\]])/g, '$1');\n    \n    // Regex to find placeholders like [option_set1] or [key_name]\n    const placeholderRegex = /\\[([^\\]]+)\\]/g;\n    let lastIndex = 0;\n    let match;\n\n    while ((match = placeholderRegex.exec(processedQuestion)) !== null) {\n      // Add text before the placeholder\n      if (match.index > lastIndex) {\n        parts.push(processedQuestion.substring(lastIndex, match.index));\n      }\n      // Add the placeholder object\n      parts.push({ placeholder: match[1] }); // match[1] is the content inside brackets\n      lastIndex = placeholderRegex.lastIndex;\n    }\n\n    // Add any remaining text after the last placeholder\n    if (lastIndex < processedQuestion.length) {\n      parts.push(processedQuestion.substring(lastIndex));\n    }\n    return parts;\n  }, [question.question]);\n\n  if (!question || !question.placeholderTargets || !question.options) {\n    return <p className=\"text-red-500\">Error: Dropdown question data is incomplete.</p>;\n  }\n  \n  const allDropdownOptions = question.options || [];\n\n  return (\n    <div className=\"text-lg whitespace-pre-line\">\n      {/* This component renders the full question text with dropdown fields inline.\n          The QuestionCard is configured to hide the standard question display for\n          dropdown_selection question types to prevent duplication. */}\n      <h2 className=\"text-xl md:text-2xl font-bold text-custom-dark-blue mb-6 relative inline-block pb-1.5\">\n        Fill in the blanks\n        <span className=\"absolute left-0 bottom-0 w-10 h-0.5 bg-custom-primary rounded-rounded-full\"></span>\n      </h2>\n      {parsedQuestionParts.map((part, index) => {\n        if (typeof part === 'string') {\n          // Just render the text as is - whitespace-pre-line CSS will handle line breaks\n          return <React.Fragment key={`${index}`}>{part}</React.Fragment>;\n        } else {\n          const placeholderKey = part.placeholder;\n          const currentSelectedText = currentSelections[placeholderKey];\n          let borderColor = 'border-gray-300'; // Default border\n\n          if (isSubmitted && showCorrectAnswer) {\n            const correctAnswerText = controller.getCorrectOptionForPlaceholder(placeholderKey);\n            if (correctAnswerText && currentSelectedText === correctAnswerText) {\n              borderColor = 'border-green-500'; // Correct\n            } else {\n              borderColor = 'border-red-500'; // Incorrect\n            }\n          } else if (isSubmitted && !showCorrectAnswer && currentSelectedText !== null) {\n            // If submitted but not showing correct answer yet (e.g. immediate feedback without revealing)\n            // and user has made a selection, show a neutral \"answered\" border.\n            borderColor = 'border-custom-blue'; \n          }\n\n          return (\n            <select\n              key={`${placeholderKey}-${index}`}\n              value={currentSelectedText || \"\"} // Ensure controlled component, default to empty string for \"Select...\"\n              onChange={(e) => handleSelectChange(placeholderKey, e.target.value === \"\" ? null : e.target.value)}\n              disabled={isSubmitted && showCorrectAnswer} // Disable after showing correct answer\n              className={`inline-block mx-1 px-2 py-1 border-2 rounded-md shadow-sm focus:ring-custom-blue focus:border-custom-blue text-base ${borderColor} bg-white`}\n              aria-label={`Selection for ${placeholderKey}`}\n            >\n              <option value=\"\" disabled={currentSelectedText !== null && currentSelectedText !== \"\"}>Select...</option>\n              {allDropdownOptions.map((opt: DropdownOption) => (\n                <option key={opt.option_id} value={opt.text}>\n                  {opt.text}\n                </option>\n              ))}\n            </select>\n          );\n        }\n      })}\n      \n      {/* Show in-progress validation message */}\n      {autoValidating && allDropdownsFilled && !showCorrectAnswer && !isSubmitted && (\n        <div className=\"mt-4 p-2 bg-yellow-100 border border-yellow-300 rounded\">\n          <p className=\"text-sm text-yellow-700\">All dropdowns filled. Your answer will be submitted.</p>\n        </div>\n      )}\n      \n      {/* Show ready to submit message when all dropdowns filled */}\n      {allDropdownsFilled && !autoValidating && !showCorrectAnswer && !isSubmitted && (\n        <div className=\"mt-4 p-2 bg-green-100 border border-green-300 rounded\">\n          <p className=\"text-sm text-green-700\">All dropdowns filled. Ready to submit.</p>\n        </div>\n      )}\n      \n      {isSubmitted && showCorrectAnswer && (\n        <div className=\"mt-4 p-3 border rounded-md bg-gray-50\">\n          <h4 className=\"font-semibold text-md mb-2 text-custom-dark-blue\">Correct Answers:</h4>\n          <ul className=\"list-disc list-inside text-sm\">\n            {controller.getPlaceholderKeys().map((key) => (\n              <li key={key} className=\"mb-1\">\n                <span className=\"font-medium\">{`[${key}]`}:</span> {controller.getCorrectOptionForPlaceholder(key)}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(DropdownSelectionComponent);\n"
    },
    {
      "filepath": "app/features/quiz/hooks/useAutoValidation.ts",
      "content": "import { useState, useEffect, useRef } from 'react';\nimport { QuestionController } from '../controllers/QuestionController';\nimport { AnyQuestion } from '@/app/types/quiz';\n\n/**\n * Hook that manages auto-validation for question components\n * \n * @param controller The question controller\n * @param initialAnswer Initial answer state\n * @param onAnswerChange Callback when answer changes\n * @param validateOnComplete Whether to auto-validate when answer is complete\n * @returns [answer, setAnswer, isValidating, allComplete]\n */\nexport function useAutoValidation<Q extends AnyQuestion, A>(\n  controller: QuestionController<Q, A>,\n  initialAnswer: A,\n  onAnswerChange: (answer: A) => void,\n  validateOnComplete: boolean = true\n): [A, (answer: A) => void, boolean, boolean] {\n  const [answer, setAnswer] = useState<A>(initialAnswer);\n  const [isValidating, setIsValidating] = useState<boolean>(false);\n  const [allComplete, setAllComplete] = useState<boolean>(false);\n\n  // Use a ref to track if we've submitted this answer already\n  // to avoid duplicate submissions\n  const hasSubmittedRef = useRef<boolean>(false);\n  \n  // Check completeness whenever answer changes\n  useEffect(() => {\n    const isComplete = controller.isAnswerComplete(answer);\n    setAllComplete(isComplete);\n    \n    // If answer is complete, not already submitted, and validateOnComplete is true\n    // trigger validation and submission\n    if (isComplete && validateOnComplete && !hasSubmittedRef.current) {\n      setIsValidating(true);\n      hasSubmittedRef.current = true;\n      onAnswerChange(answer);\n    } else if (!isComplete) {\n      // Reset submission flag and validation state when answer becomes incomplete\n      hasSubmittedRef.current = false;\n      setIsValidating(false);\n    }\n  }, [answer, controller, onAnswerChange, validateOnComplete]);\n  \n  // Wrapper for setAnswer that also updates external state\n  const updateAnswer = (newAnswer: A) => {\n    setAnswer(newAnswer);\n  };\n  \n  return [answer, updateAnswer, isValidating, allComplete];\n}\n"
    },
    {
      "filepath": "app/features/quiz/hooks/useQuizScoring.ts",
      "content": "import { useCallback } from 'react';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { AnyQuestion } from '../../../types/quiz';\nimport { QuizAction } from './useQuizState';\n\n// Initialize Supabase client for Edge Function calls\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL; \nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nlet supabaseFunctionsClient: SupabaseClient | null = null;\nif (supabaseUrl && supabaseAnonKey) {\n  supabaseFunctionsClient = createClient(supabaseUrl, supabaseAnonKey);\n}\n\n// Hook for handling answer submission and scoring\nexport const useQuizScoring = (dispatch: React.Dispatch<QuizAction>) => {\n  const submitAndScoreAnswer = useCallback(async (question: AnyQuestion, answer: any) => {\n    if (!supabaseFunctionsClient) {\n      console.error('Supabase client for functions not initialized.');\n      return;\n    }\n\n    let submitPayload: QuizAction = {\n      type: 'SUBMIT_ANSWER',\n      payload: {\n        questionId: question.id,\n        answer,\n        questionType: question.type,\n      }\n    };\n\n    // Add specific correct answer details for client-side validation\n    if (question.type === 'single_selection') {\n      submitPayload.payload.correctAnswerOptionId = question.correctAnswerOptionId;\n    } else if (question.type === 'multi') {\n      submitPayload.payload.correctAnswerOptionIds = question.correctAnswerOptionIds;\n    } else if (question.type === 'dropdown_selection') {\n      // For dropdown, map placeholderTargets to the expected format for client-side validation\n      const correctDropdownAnswers: Record<string, string> = {};\n      if (question.placeholderTargets) {\n        for (const key in question.placeholderTargets) {\n          correctDropdownAnswers[key] = question.placeholderTargets[key].correctOptionText;\n        }\n      }\n      submitPayload.payload.correctDropdownAnswers = correctDropdownAnswers;\n    } else if (question.type === 'order') {\n      // For 'order' questions, pass the correctOrder array for client-side validation\n      submitPayload.payload.correctOrder = question.correctOrder;\n    }\n\n    // First update the UI immediately with client-side validation results\n    dispatch(submitPayload);\n\n    try {\n      // Then send to server for validation\n      const { data: scoreData, error: functionError } = await supabaseFunctionsClient.functions.invoke(\n        'score-answer', \n        {\n          body: { \n            questionId: question.id, \n            userAnswer: answer, \n            questionType: question.type \n          }\n        }\n      );\n\n      if (functionError) {\n        console.error('Error invoking score-answer Edge Function:', functionError.message);\n        return;\n      }\n\n      if (scoreData && scoreData.questionId === question.id) {\n        dispatch({\n          type: 'UPDATE_ANSWER_CORRECTNESS',\n          payload: { \n            questionId: scoreData.questionId,\n            isCorrect: scoreData.isCorrect,\n            serverVerifiedCorrectAnswer: scoreData.correctAnswer \n          }\n        });\n      } else {\n        console.error('Score data mismatch or missing from Edge Function response:', scoreData);\n      }\n    } catch (e: any) {\n      console.error('Unexpected error during submitAndScoreAnswer:', e.message);\n    }\n  }, [dispatch]);\n\n  return { submitAndScoreAnswer };\n};\n"
    },
    {
      "filepath": "app/features/quiz/hooks/useQuizState.ts",
      "content": "import { useReducer } from 'react';\nimport { AnyQuestion, Quiz, QuestionType } from '../../../types/quiz';\n\n// Define structure for storing answers\nexport interface UserAnswer {\n  answer: any; \n  isCorrect?: boolean;\n  timestamp: number;\n}\n\nexport interface UserAnswersState {\n  [questionId: string]: UserAnswer;\n}\n\n// Quiz State Definition\nexport interface QuizState {\n  quiz: Quiz | null;\n  questions: AnyQuestion[];\n  currentQuestionIndex: number;\n  userAnswers: UserAnswersState;\n  isLoading: boolean;\n  error: string | null;\n  isQuizComplete: boolean;\n  showFeedbackForCurrentQuestion: boolean;\n}\n\n// Action Types\nexport type QuizAction = \n  | { type: 'LOAD_QUIZ_START' }\n  | { type: 'LOAD_QUIZ_SUCCESS'; payload: Quiz }\n  | { type: 'LOAD_QUIZ_FAILURE'; payload: string }\n  | { \n      type: 'SUBMIT_ANSWER'; \n      payload: { \n        questionId: string; \n        answer: any; \n        questionType: QuestionType; \n        // Optional fields for client-side validation based on question type\n        correctAnswerOptionId?: string; // For single_selection\n        correctAnswerOptionIds?: string[]; // For multi\n        correctDropdownAnswers?: Record<string, string>; // For dropdown_selection\n        correctOrder?: string[]; // For order\n      }\n    }\n  | { type: 'UPDATE_ANSWER_CORRECTNESS'; payload: { questionId: string; isCorrect: boolean, serverVerifiedCorrectAnswer?: any } }\n  | { type: 'NEXT_QUESTION' }\n  | { type: 'PREVIOUS_QUESTION' }\n  | { type: 'COMPLETE_QUIZ' }\n  | { type: 'RESET_QUIZ' }\n  | { type: 'SHOW_FEEDBACK'; payload: { questionId: string } };\n\n// Initial State\nconst initialState: QuizState = {\n  quiz: null,\n  questions: [],\n  currentQuestionIndex: 0,\n  userAnswers: {},\n  isLoading: false,\n  error: null,\n  isQuizComplete: false,\n  showFeedbackForCurrentQuestion: false,\n};\n\n// Quiz Reducer\nconst quizReducer = (state: QuizState, action: QuizAction): QuizState => {\n  switch (action.type) {\n    case 'LOAD_QUIZ_START':\n      return { ...initialState, isLoading: true }; \n    case 'LOAD_QUIZ_SUCCESS':\n      return {\n        ...initialState,\n        quiz: action.payload,\n        questions: action.payload.questions,\n        isLoading: false,\n      };\n    case 'LOAD_QUIZ_FAILURE':\n      return { ...state, isLoading: false, error: action.payload };\n    \n    case 'SUBMIT_ANSWER':\n      let isClientCorrect: boolean | undefined = undefined;\n      \n      if (action.payload.questionType === 'single_selection' && action.payload.correctAnswerOptionId !== undefined) {\n        isClientCorrect = action.payload.answer === action.payload.correctAnswerOptionId;\n      } else if (action.payload.questionType === 'multi' && action.payload.correctAnswerOptionIds !== undefined) {\n        const selectedAnswers = action.payload.answer as string[];\n        const correctAnswers = action.payload.correctAnswerOptionIds;\n        isClientCorrect = \n          selectedAnswers.length === correctAnswers.length && \n          selectedAnswers.every(id => correctAnswers.includes(id)) &&\n          correctAnswers.every(id => selectedAnswers.includes(id));\n      } else if (action.payload.questionType === 'drag_and_drop') {\n        // For drag-and-drop, we'll rely on server validation (this seems to be a legacy or different type)\n        console.log('Drag and drop answer submitted:', action.payload.answer);\n      } else if (action.payload.questionType === 'dropdown_selection' && action.payload.correctDropdownAnswers) {\n        const userSelections = action.payload.answer as Record<string, string | null>;\n        const correctAnswers = action.payload.correctDropdownAnswers;\n        let allCorrect = true;\n        for (const placeholderKey in correctAnswers) {\n          if (userSelections[placeholderKey] !== correctAnswers[placeholderKey]) {\n            allCorrect = false;\n            break;\n          }\n        }\n        // Also ensure the user has made a selection for all placeholders defined in correctAnswers\n        if (allCorrect) {\n          for (const placeholderKey in correctAnswers) {\n            if (userSelections[placeholderKey] === null || userSelections[placeholderKey] === undefined) {\n              allCorrect = false;\n              break;\n            }\n          }\n        }\n        isClientCorrect = allCorrect;\n      } else if (action.payload.questionType === 'order' && action.payload.correctOrder) {\n        const userAnswer = action.payload.answer as Record<string, string | null>;\n        const correctOrder = action.payload.correctOrder;\n        let allCorrect = true;\n        if (Object.keys(userAnswer).length !== correctOrder.length) {\n          // This basic check might be too strict if partial completion is allowed before submission.\n          // However, for full correctness, the number of placed items should match the total correct items.\n          // For now, let's assume OrderController.isAnswerComplete handles partial states,\n          // and here we check for final correctness.\n          // A more robust check would involve the OrderValidator's getCorrectnessMap.\n          // For simplicity in client-side check, we'll compare slot by slot.\n        }\n\n        for (let i = 0; i < correctOrder.length; i++) {\n          const slotKey = `slot-${i}`; // Assuming slot keys are 'slot-0', 'slot-1', etc.\n          const expectedItemId = correctOrder[i];\n          if (userAnswer[slotKey] !== expectedItemId) {\n            allCorrect = false;\n            break;\n          }\n        }\n        // Ensure no extra items are placed in slots not part of correctOrder\n        for (const slotKey in userAnswer) {\n          const slotIndex = parseInt(slotKey.split('-')[1], 10);\n          if (slotIndex >= correctOrder.length && userAnswer[slotKey] !== null) {\n            allCorrect = false;\n            break;\n          }\n        }\n        isClientCorrect = allCorrect;\n      }\n\n      return {\n        ...state,\n        userAnswers: {\n          ...state.userAnswers,\n          [action.payload.questionId]: {\n            answer: action.payload.answer,\n            isCorrect: isClientCorrect,\n            timestamp: Date.now(),\n          },\n        },\n        showFeedbackForCurrentQuestion: true, \n      };\n\n    case 'UPDATE_ANSWER_CORRECTNESS':\n      if (!state.userAnswers[action.payload.questionId]) {\n        console.warn('UPDATE_ANSWER_CORRECTNESS called for a question not in userAnswers', action.payload.questionId);\n        return state; \n      }\n\n      return {\n        ...state,\n        userAnswers: {\n          ...state.userAnswers,\n          [action.payload.questionId]: {\n            ...state.userAnswers[action.payload.questionId],\n            isCorrect: action.payload.isCorrect,\n          },\n        },\n      };\n\n    case 'NEXT_QUESTION':\n      if (state.currentQuestionIndex < state.questions.length - 1) {\n        const nextQuestionId = state.questions[state.currentQuestionIndex + 1]?.id;\n        const nextQuestionHasAnswer = nextQuestionId ? state.userAnswers[nextQuestionId] !== undefined : false;\n        return {\n          ...state,\n          currentQuestionIndex: state.currentQuestionIndex + 1,\n          showFeedbackForCurrentQuestion: nextQuestionHasAnswer,\n        };\n      }\n      return { ...state, isQuizComplete: true }; \n\n    case 'PREVIOUS_QUESTION':\n      if (state.currentQuestionIndex > 0) {\n        const prevQuestionId = state.questions[state.currentQuestionIndex - 1]?.id;\n        const prevQuestionHasAnswer = prevQuestionId ? state.userAnswers[prevQuestionId] !== undefined : false;\n        return {\n          ...state,\n          currentQuestionIndex: state.currentQuestionIndex - 1,\n          showFeedbackForCurrentQuestion: prevQuestionHasAnswer,\n        };\n      }\n      return state;\n\n    case 'COMPLETE_QUIZ':\n      return { ...state, isQuizComplete: true, showFeedbackForCurrentQuestion: true };\n\n    case 'SHOW_FEEDBACK':\n      return { ...state, showFeedbackForCurrentQuestion: true };\n\n    case 'RESET_QUIZ':\n      return initialState;\n      \n    default:\n      return state;\n  }\n};\n\n// Hook for Quiz State\nexport const useQuizState = () => {\n  const [state, dispatch] = useReducer(quizReducer, initialState);\n  \n  return {\n    state,\n    dispatch\n  };\n};\n"
    },
    {
      "filepath": "app/features/quiz/validators/MultiChoiceValidator.ts",
      "content": "import { MultiChoiceQuestion } from '@/app/types/quiz';\nimport { AnswerValidator, CorrectnessMap } from './AnswerValidator';\n\n/**\n * Validator for multi-choice questions\n * Works with string[] answer type (the selected option IDs)\n */\nexport class MultiChoiceValidator extends AnswerValidator<MultiChoiceQuestion, string[]> {\n  /**\n   * Checks if the required number of selections has been made\n   * @param selectedOptionIds Array of selected option IDs\n   * @returns True if the correct number of options has been selected\n   */\n  isComplete(selectedOptionIds: string[]): boolean {\n    // Empty selections array is always incomplete\n    if (!selectedOptionIds) return false;\n    \n    // Check if the user has selected the required number of options\n    return selectedOptionIds.length === this.question.correctAnswerOptionIds.length;\n  }\n  \n  /**\n   * Validates which selected options are correct\n   * @param selectedOptionIds Array of selected option IDs\n   * @returns Map with entries for each selected option's correctness\n   */\n  getCorrectnessMap(selectedOptionIds: string[]): CorrectnessMap {\n    const correctnessMap: CorrectnessMap = {};\n    \n    // If no selections, return empty map\n    if (!selectedOptionIds || selectedOptionIds.length === 0) {\n      return correctnessMap;\n    }\n    \n    // Check each selected option against the correct answers\n    selectedOptionIds.forEach(optionId => {\n      correctnessMap[optionId] = this.question.correctAnswerOptionIds.includes(optionId);\n    });\n    \n    return correctnessMap;\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/validators/SingleSelectionValidator.ts",
      "content": "import { SingleSelectionQuestion } from '@/app/types/quiz';\nimport { AnswerValidator, CorrectnessMap } from './AnswerValidator';\n\n/**\n * Validator for single selection questions\n * Works with string answer type (the selected option ID)\n */\nexport class SingleSelectionValidator extends AnswerValidator<SingleSelectionQuestion, string | null> {\n  /**\n   * Checks if a selection has been made\n   * @param selectedOptionId The selected option ID or null\n   * @returns True if an option has been selected\n   */\n  isComplete(selectedOptionId: string | null): boolean {\n    return selectedOptionId !== null && selectedOptionId !== undefined && selectedOptionId !== '';\n  }\n  \n  /**\n   * Validates if the selected option is correct\n   * @param selectedOptionId The selected option ID or null\n   * @returns Map with a single entry for the selected option's correctness\n   */\n  getCorrectnessMap(selectedOptionId: string | null): CorrectnessMap {\n    // If no selection, nothing is correct\n    if (!selectedOptionId) {\n      return { 'answer': false };\n    }\n    \n    // Check if selected option matches the correct answer\n    const isCorrect = selectedOptionId === this.question.correctAnswerOptionId;\n    \n    // Return a map with the selected option ID as key\n    return { [selectedOptionId]: isCorrect };\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/validators/DropdownSelectionValidator.ts",
      "content": "import { DropdownSelectionQuestion } from '@/app/types/quiz';\nimport { AnswerValidator, CorrectnessMap } from './AnswerValidator';\n\n/**\n * Validator for dropdown selection questions\n * Works with Record<string, string | null> answer type (mapping placeholder keys to selected option text)\n */\nexport class DropdownSelectionValidator extends AnswerValidator<\n  DropdownSelectionQuestion, \n  Record<string, string | null>\n> {\n  /**\n   * Checks if all dropdowns have selections\n   * @param selections Object mapping placeholder keys to selected option text\n   * @returns True if all placeholders have selections\n   */\n  isComplete(selections: Record<string, string | null>): boolean {\n    // If no selections object or no placeholder targets, nothing is complete\n    if (!selections || !this.question.placeholderTargets || Object.keys(this.question.placeholderTargets).length === 0) {\n      return false;\n    }\n    \n    // Check that every placeholder target has a non-null value selected\n    return Object.keys(this.question.placeholderTargets).every(key => \n      key in selections && \n      selections[key] !== null && \n      selections[key] !== undefined && \n      selections[key] !== \"\"\n    );\n  }\n  \n  /**\n   * Validates which selections are correct\n   * @param selections Object mapping placeholder keys to selected option text\n   * @returns Map with entries for each placeholder's correctness\n   */\n  getCorrectnessMap(selections: Record<string, string | null>): CorrectnessMap {\n    const correctnessMap: CorrectnessMap = {};\n    \n    // If no selections or no placeholder targets, return empty map\n    if (!selections || !this.question.placeholderTargets) {\n      return correctnessMap;\n    }\n    \n    // Check each placeholder against its correct answer\n    Object.keys(this.question.placeholderTargets).forEach(placeholderKey => {\n      const selectedText = selections[placeholderKey];\n      const correctText = this.question.placeholderTargets[placeholderKey]?.correctOptionText;\n      \n      // Mark as correct if selected text matches correct text\n      correctnessMap[placeholderKey] = selectedText === correctText;\n    });\n    \n    return correctnessMap;\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/validators/DragAndDropValidator.ts",
      "content": "import { DragAndDropQuestion } from '@/app/types/quiz';\nimport { AnswerValidator, CorrectnessMap } from './AnswerValidator';\n\n/**\n * Validator for drag and drop questions\n * Works with Record<string, string | null> answer type (mapping target_id to option_id)\n */\nexport class DragAndDropValidator extends AnswerValidator<\n  DragAndDropQuestion, \n  Record<string, string | null>\n> {\n  /**\n   * Checks if all targets have options placed in them\n   * @param placedAnswers Object mapping target_id to option_id\n   * @returns True if all targets have options\n   */\n  isComplete(placedAnswers: Record<string, string | null>): boolean {\n    // If no answers object or no targets, nothing is complete\n    if (!placedAnswers || this.question.targets.length === 0) {\n      return false;\n    }\n    \n    // Check that every target has a valid non-null option assigned\n    return this.question.targets.every(target => {\n      const targetId = target.target_id;\n      // Make sure the target exists in answers and has a non-null value\n      return targetId in placedAnswers && \n        placedAnswers[targetId] !== null && \n        placedAnswers[targetId] !== undefined;\n    });\n  }\n  \n  /**\n   * Validates which placements are correct based on the question's correctPairs\n   * @param placedAnswers Object mapping target_id to option_id\n   * @returns Map with entries for each target's correctness\n   */\n  getCorrectnessMap(placedAnswers: Record<string, string | null>): CorrectnessMap {\n    const correctnessMap: CorrectnessMap = {};\n    \n    // If no answers, return empty map\n    if (!placedAnswers) {\n      return correctnessMap;\n    }\n    \n    // Check each target against correct pairs\n    this.question.targets.forEach(target => {\n      const targetId = target.target_id;\n      const placedOptionId = placedAnswers[targetId];\n      \n      if (placedOptionId) {\n        // Find if this is a correct pairing\n        const correctPair = this.question.correctPairs.find(pair => \n          pair.target_id === targetId && pair.option_id === placedOptionId\n        );\n        \n        correctnessMap[targetId] = !!correctPair;\n      } else {\n        // If no option placed, it's not correct\n        correctnessMap[targetId] = false;\n      }\n    });\n    \n    return correctnessMap;\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/validators/OrderValidator.ts",
      "content": "import { OrderQuestion, OrderQuestionAnswer } from '@/app/types/quiz';\nimport { AnswerValidator, CorrectnessMap } from './AnswerValidator';\n\n/**\n * Validator for order questions\n * Works with OrderQuestionAnswer type (Record<string, string | null>)\n * where keys are slot names (e.g., \"slot_0\", \"slot_1\") and values are item_ids or null\n */\nexport class OrderValidator extends AnswerValidator<OrderQuestion, OrderQuestionAnswer> {\n  /**\n   * Checks if user has filled all slots\n   * @param answer Record mapping slots to item_ids\n   * @returns True if all slots have items assigned (no null values)\n   */\n  isComplete(answer: OrderQuestionAnswer): boolean {\n    // If no answer object or no items in question, nothing is complete\n    if (!answer || typeof answer !== 'object' || this.question.correctOrder.length === 0) {\n      return false;\n    }\n    \n    // Check if we have the right number of slots and none are null\n    const slotCount = this.question.correctOrder.length;\n    let filledSlots = 0;\n    \n    for (let i = 0; i < slotCount; i++) {\n      const slotKey = `slot_${i}`;\n      if (answer[slotKey] !== undefined && answer[slotKey] !== null) {\n        filledSlots++;\n      }\n    }\n    \n    return filledSlots === slotCount;\n  }\n  \n  /**\n   * Validates which items are in the correct slots based on the question's correctOrder\n   * @param answer Record mapping slots to item_ids\n   * @returns Map with entries for each item's correctness\n   */\n  getCorrectnessMap(answer: OrderQuestionAnswer): CorrectnessMap {\n    const correctnessMap: CorrectnessMap = {};\n    \n    // If no answer object, return empty map\n    if (!answer || typeof answer !== 'object') {\n      return correctnessMap;\n    }\n    \n    // Check each slot against the correctOrder\n    this.question.correctOrder.forEach((correctItemId, index) => {\n      const slotKey = `slot_${index}`;\n      const placedItemId = answer[slotKey];\n      \n      // Mark the placed item as correct or incorrect\n      if (placedItemId) {\n        const isCorrect = correctItemId === placedItemId;\n        correctnessMap[placedItemId] = isCorrect;\n      }\n    });\n    \n    return correctnessMap;\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/validators/AnswerValidator.ts",
      "content": "import { AnyQuestion } from \"@/app/types/quiz\";\n\n/**\n * Represents the result of validating an answer\n * Maps target IDs to boolean indicating correctness\n */\nexport type CorrectnessMap = Record<string, boolean>;\n\n/**\n * Abstract AnswerValidator class\n * Provides a common interface for validating different question types\n */\nexport abstract class AnswerValidator<Q extends AnyQuestion, A> {\n  protected question: Q;\n\n  /**\n   * Creates an instance of AnswerValidator\n   * @param question The question to validate answers against\n   */\n  constructor(question: Q) {\n    this.question = question;\n  }\n\n  /**\n   * Checks if the answer is complete\n   * @param answer The answer to check\n   * @returns True if the answer is complete and can be submitted\n   */\n  abstract isComplete(answer: A): boolean;\n\n  /**\n   * Gets a map showing correctness of each part of the answer\n   * @param answer The answer to validate\n   * @returns Object mapping target/option IDs to boolean indicating correctness\n   */\n  abstract getCorrectnessMap(answer: A): CorrectnessMap;\n\n  /**\n   * Calculates the overall correctness score\n   * @param answer The answer to score\n   * @returns A value from 0 to 1 representing percentage correct\n   */\n  getCorrectnessScore(answer: A): number {\n    const correctnessMap = this.getCorrectnessMap(answer);\n    const totalItems = Object.keys(correctnessMap).length;\n    \n    if (totalItems === 0) return 0;\n    \n    const correctItems = Object.values(correctnessMap)\n      .filter(isCorrect => isCorrect)\n      .length;\n      \n    return correctItems / totalItems;\n  }\n\n  /**\n   * Determines if the answer is entirely correct\n   * @param answer The answer to check\n   * @returns True if all parts of the answer are correct\n   */\n  isCorrect(answer: A): boolean {\n    const correctnessMap = this.getCorrectnessMap(answer);\n    return Object.values(correctnessMap).every(isCorrect => isCorrect);\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/controllers/QuestionControllerFactory.ts",
      "content": "import { \n  SingleSelectionQuestion, \n  MultiChoiceQuestion, \n  DragAndDropQuestion, \n  DropdownSelectionQuestion,\n  OrderQuestion,\n  AnyQuestion \n} from \"@/app/types/quiz\";\nimport { SingleSelectionController } from \"./SingleSelectionController\";\nimport { MultiChoiceController } from \"./MultiChoiceController\";\nimport { DragAndDropController } from \"./DragAndDropController\";\nimport { DropdownSelectionController } from \"./DropdownSelectionController\";\nimport { OrderController } from \"./OrderController\";\nimport { QuestionController } from \"./QuestionController\";\n\n/**\n * Factory function to create the appropriate controller for a question type\n * @param question The question data\n * @returns A controller instance for the specific question type\n */\nexport function createQuestionController(question: AnyQuestion): QuestionController<any, any> {\n  switch (question.type) {\n    case 'single_selection':\n      return new SingleSelectionController(question as SingleSelectionQuestion);\n    case 'multi':\n      return new MultiChoiceController(question as MultiChoiceQuestion);\n    case 'drag_and_drop':\n      return new DragAndDropController(question as DragAndDropQuestion);\n    case 'dropdown_selection':\n      return new DropdownSelectionController(question as DropdownSelectionQuestion);\n    case 'order':\n      return new OrderController(question as OrderQuestion);\n    default:\n      throw new Error(`No controller available for question type: ${question.type}`);\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/controllers/MultiChoiceController.ts",
      "content": "import { MultiChoiceQuestion } from '@/app/types/quiz';\nimport { QuestionController } from './QuestionController';\nimport { MultiChoiceValidator } from '../validators/MultiChoiceValidator';\n\n/**\n * Controller for multi-choice questions\n * Manages state and validation for questions where the user selects multiple options\n */\nexport class MultiChoiceController extends QuestionController<MultiChoiceQuestion, string[]> {\n  /**\n   * Creates an instance of MultiChoiceController\n   * @param question The multi-choice question\n   */\n  constructor(question: MultiChoiceQuestion) {\n    // Create the validator and pass it to the base controller\n    const validator = new MultiChoiceValidator(question);\n    super(question, validator);\n  }\n  \n  /**\n   * Gets the IDs of the correct options\n   * @returns Array of correct option IDs\n   */\n  getCorrectOptionIds(): string[] {\n    return this.question.correctAnswerOptionIds;\n  }\n  \n  /**\n   * Gets the required number of selections\n   * @returns Number of options that should be selected\n   */\n  getRequiredSelectionCount(): number {\n    return this.question.correctAnswerOptionIds.length;\n  }\n  \n  /**\n   * Checks if a specific option is part of the correct answer set\n   * @param optionId The option ID to check\n   * @returns True if the option is one of the correct answers\n   */\n  isOptionCorrect(optionId: string): boolean {\n    return this.question.correctAnswerOptionIds.includes(optionId);\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/controllers/DropdownSelectionController.ts",
      "content": "import { DropdownSelectionQuestion } from '@/app/types/quiz';\nimport { QuestionController } from './QuestionController';\nimport { DropdownSelectionValidator } from '../validators/DropdownSelectionValidator';\n\n/**\n * Controller for dropdown selection questions\n * Manages state and validation for questions where the user selects options from dropdowns\n */\nexport class DropdownSelectionController extends QuestionController<\n  DropdownSelectionQuestion, \n  Record<string, string | null>\n> {\n  /**\n   * Creates an instance of DropdownSelectionController\n   * @param question The dropdown selection question\n   */\n  constructor(question: DropdownSelectionQuestion) {\n    // Create the validator and pass it to the base controller\n    const validator = new DropdownSelectionValidator(question);\n    super(question, validator);\n  }\n  \n  /**\n   * Gets the correct text for a specific placeholder\n   * @param placeholderKey The placeholder key\n   * @returns The correct option text or null if placeholder not found\n   */\n  getCorrectOptionForPlaceholder(placeholderKey: string): string | null {\n    return this.question.placeholderTargets[placeholderKey]?.correctOptionText || null;\n  }\n  \n  /**\n   * Gets all placeholder keys in the question\n   * @returns Array of placeholder keys\n   */\n  getPlaceholderKeys(): string[] {\n    return Object.keys(this.question.placeholderTargets || {});\n  }\n  \n  /**\n   * Checks if a specific selection for a placeholder is correct\n   * @param placeholderKey The placeholder key\n   * @param selectedText The selected option text\n   * @returns True if the selection is correct\n   */\n  isSelectionCorrect(placeholderKey: string, selectedText: string | null): boolean {\n    if (!selectedText) return false;\n    \n    const correctText = this.getCorrectOptionForPlaceholder(placeholderKey);\n    return selectedText === correctText;\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/controllers/DragAndDropController.ts",
      "content": "import { DragAndDropQuestion, DragAndDropOption, DragAndDropTarget } from '@/app/types/quiz';\nimport { QuestionController } from './QuestionController';\nimport { DragAndDropValidator } from '../validators/DragAndDropValidator';\n\n/**\n * Controller for drag and drop questions\n * Manages state and validation for questions where the user drags options to targets\n */\nexport class DragAndDropController extends QuestionController<\n  DragAndDropQuestion, \n  Record<string, string | null>\n> {\n  /**\n   * Creates an instance of DragAndDropController\n   * @param question The drag and drop question\n   */\n  constructor(question: DragAndDropQuestion) {\n    // Create the validator and pass it to the base controller\n    const validator = new DragAndDropValidator(question);\n    super(question, validator);\n  }\n  \n  /**\n   * Gets all targets in the question\n   * @returns Array of targets\n   */\n  getTargets(): DragAndDropTarget[] {\n    return this.question.targets;\n  }\n  \n  /**\n   * Gets all options in the question\n   * @returns Array of options\n   */\n  getOptions(): DragAndDropOption[] {\n    return this.question.options;\n  }\n  \n  /**\n   * Gets the correct option ID for a specific target\n   * @param targetId The target ID\n   * @returns The correct option ID or null if not found\n   */\n  getCorrectOptionForTarget(targetId: string): string | null {\n    const correctPair = this.question.correctPairs.find(pair => pair.target_id === targetId);\n    return correctPair ? correctPair.option_id : null;\n  }\n  \n  /**\n   * Checks if a specific placement is correct\n   * @param targetId The target ID\n   * @param optionId The option ID\n   * @returns True if the placement is correct\n   */\n  isPlacementCorrect(targetId: string, optionId: string | null): boolean {\n    if (!optionId) return false;\n    \n    const correctPair = this.question.correctPairs.find(pair => \n      pair.target_id === targetId && pair.option_id === optionId\n    );\n    \n    return !!correctPair;\n  }\n  \n  /**\n   * Gets the available options not yet placed in targets\n   * @param placedAnswers The current state of option placements\n   * @returns Array of options that are still available\n   */\n  getAvailableOptions(placedAnswers: Record<string, string | null>): DragAndDropOption[] {\n    // Get all placed option IDs\n    const placedOptionIds = Object.values(placedAnswers).filter(Boolean) as string[];\n    \n    // Return options that aren't placed anywhere\n    return this.question.options.filter(option => \n      !placedOptionIds.includes(option.option_id)\n    );\n  }\n  \n  /**\n   * Creates an initial empty answers object with all targets set to null\n   * @returns Initial answers object\n   */\n  createInitialAnswers(): Record<string, string | null> {\n    const initialAnswers: Record<string, string | null> = {};\n    this.question.targets.forEach(target => {\n      initialAnswers[target.target_id] = null;\n    });\n    return initialAnswers;\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/controllers/OrderController.ts",
      "content": "import { OrderQuestion, OrderItem, OrderQuestionAnswer } from '@/app/types/quiz';\nimport { QuestionController } from './QuestionController';\nimport { OrderValidator } from '../validators/OrderValidator';\n\n/**\n * Controller for order questions\n * Manages state and validation for questions where the user arranges items in the correct sequence\n */\nexport class OrderController extends QuestionController<OrderQuestion, OrderQuestionAnswer> {\n  /**\n   * Creates an instance of OrderController\n   * @param question The order question\n   */\n  constructor(question: OrderQuestion) {\n    // Create the validator and pass it to the base controller\n    const validator = new OrderValidator(question);\n    super(question, validator);\n  }\n  \n  /**\n   * Gets all items in the question\n   * @returns Array of items\n   */\n  getItems(): OrderItem[] {\n    return this.question.items;\n  }\n  \n  /**\n   * Gets the correct order of item IDs\n   * @returns Array of item IDs in the correct order\n   */\n  getCorrectOrder(): string[] {\n    return this.question.correctOrder;\n  }\n\n  /**\n   * Gets the number of slots needed for this question\n   * @returns The number of slots\n   */\n  getSlotCount(): number {\n    return this.question.correctOrder.length;\n  }\n\n  /**\n   * Gets the correct item ID for a specific slot\n   * @param slotIndex The zero-based index of the slot\n   * @returns The correct item ID for the slot, or null if out of range\n   */\n  getCorrectItemForSlot(slotIndex: number): string | null {\n    if (slotIndex < 0 || slotIndex >= this.question.correctOrder.length) {\n      return null;\n    }\n    return this.question.correctOrder[slotIndex];\n  }\n\n  /**\n   * Checks if an item is correctly placed in a slot\n   * @param slotIndex The zero-based index of the slot\n   * @param itemId The item ID to check, or null if the slot is empty\n   * @returns True if the item is correct for the slot\n   */\n  isItemCorrectlyPlacedInSlot(slotIndex: number, itemId: string | null): boolean {\n    // Empty slots are always incorrect\n    if (itemId === null) {\n      return false;\n    }\n    \n    return slotIndex >= 0 && \n           slotIndex < this.question.correctOrder.length && \n           this.question.correctOrder[slotIndex] === itemId;\n  }\n  \n  /**\n   * Gets the correctness map for a given answer.\n   * Delegates to the validator.\n   * @param answer The answer to validate\n   * @returns A record mapping slot keys to boolean indicating correctness, or null if not applicable.\n   */\n  getCorrectnessMap(answer: OrderQuestionAnswer): Record<string, boolean | null> {\n    // Ensure the validator is an instance of OrderValidator\n    if (this.validator instanceof OrderValidator) {\n      return this.validator.getCorrectnessMap(answer);\n    }\n    // Fallback or error handling if validator is not the expected type\n    // This should ideally not happen if constructor is correctly used\n    console.error(\"Validator is not an instance of OrderValidator\");\n    const emptyMap: Record<string, boolean | null> = {};\n    Object.keys(answer).forEach(key => {\n      emptyMap[key] = null;\n    });\n    return emptyMap;\n  }\n\n  /**\n   * Creates an initial empty answer with all slots set to null\n   * @returns An object mapping slot names to null values\n   */\n  createInitialAnswer(): OrderQuestionAnswer {\n    const answer: OrderQuestionAnswer = {};\n    const slotCount = this.getSlotCount();\n    \n    for (let i = 0; i < slotCount; i++) {\n      answer[`slot_${i}`] = null;\n    }\n    \n    return answer;\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/controllers/QuestionController.ts",
      "content": "import { AnyQuestion } from \"@/app/types/quiz\";\nimport { AnswerValidator, CorrectnessMap } from \"../validators/AnswerValidator\";\n\n/**\n * Abstract base controller for question components\n * Manages state and validation logic for question interactions\n */\nexport abstract class QuestionController<Q extends AnyQuestion, A> {\n  protected question: Q;\n  protected validator: AnswerValidator<Q, A>;\n  \n  /**\n   * Creates an instance of QuestionController\n   * @param question The question this controller manages\n   * @param validator The validator for the question's answers\n   */\n  constructor(question: Q, validator: AnswerValidator<Q, A>) {\n    this.question = question;\n    this.validator = validator;\n  }\n  \n  /**\n   * Gets the question this controller manages\n   */\n  getQuestion(): Q {\n    return this.question;\n  }\n  \n  /**\n   * Checks if the answer is complete and ready to be submitted\n   * @param answer The current answer state\n   * @returns True if the answer can be submitted\n   */\n  isAnswerComplete(answer: A): boolean {\n    return this.validator.isComplete(answer);\n  }\n  \n  /**\n   * Validates the correctness of each part of the answer\n   * @param answer The answer to validate\n   * @returns Map of answer parts to correctness booleans\n   */\n  validateAnswer(answer: A): CorrectnessMap {\n    return this.validator.getCorrectnessMap(answer);\n  }\n  \n  /**\n   * Calculates the overall score for an answer (0-1)\n   * @param answer The answer to score\n   * @returns Proportion of correct elements (0-1)\n   */\n  getScore(answer: A): number {\n    return this.validator.getCorrectnessScore(answer);\n  }\n  \n  /**\n   * Checks if the answer is completely correct\n   * @param answer The answer to check\n   * @returns True if the answer is entirely correct\n   */\n  isCorrect(answer: A): boolean {\n    return this.validator.isCorrect(answer);\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/controllers/SingleSelectionController.ts",
      "content": "import { SingleSelectionQuestion } from '@/app/types/quiz';\nimport { QuestionController } from './QuestionController';\nimport { SingleSelectionValidator } from '../validators/SingleSelectionValidator';\n\n/**\n * Controller for single selection questions\n * Manages state and validation for questions where the user selects one option\n */\nexport class SingleSelectionController extends QuestionController<SingleSelectionQuestion, string | null> {\n  /**\n   * Creates an instance of SingleSelectionController\n   * @param question The single selection question\n   */\n  constructor(question: SingleSelectionQuestion) {\n    // Create the validator and pass it to the base controller\n    const validator = new SingleSelectionValidator(question);\n    super(question, validator);\n  }\n  \n  /**\n   * Gets the ID of the correct option\n   * @returns The correct option ID\n   */\n  getCorrectOptionId(): string {\n    return this.question.correctAnswerOptionId;\n  }\n  \n  /**\n   * Checks if a specific option is the correct answer\n   * @param optionId The option ID to check\n   * @returns True if the option is correct\n   */\n  isOptionCorrect(optionId: string): boolean {\n    return optionId === this.question.correctAnswerOptionId;\n  }\n}\n"
    },
    {
      "filepath": "app/features/quiz/pages/QuizPage.tsx",
      "content": "'use client';\n\nimport React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport { useQuiz } from '../context/QuizContext';\nimport { QuizService } from '../services/quizService';\nimport QuestionCard from '../components/QuestionCard';\nimport QuizProgress from '../components/QuizProgress';\nimport QuizNavigation from '../components/QuizNavigation';\nimport QuizCompletionSummary from '../components/QuizCompletionSummary';\n\n// Quiz Runner Component\nconst QuizPageContent: React.FC<{ quizId: string; questionType?: string }> = ({ quizId, questionType }) => {\n  const { state, dispatch } = useQuiz();\n\n  // Load quiz data on component mount or when quizId/questionType changes\n  useEffect(() => {\n    const loadQuiz = async () => {\n      if (!quizId) return;\n      \n      // Reset quiz state when question type changes to avoid confusion\n      dispatch({ type: 'RESET_QUIZ' });\n      dispatch({ type: 'LOAD_QUIZ_START' });\n      \n      try {\n        const quizData = await QuizService.fetchQuizById(quizId, questionType);\n        dispatch({ type: 'LOAD_QUIZ_SUCCESS', payload: quizData });\n      } catch (error: any) {\n        console.error(\"Error fetching quiz data:\", error);\n        dispatch({ \n          type: 'LOAD_QUIZ_FAILURE', \n          payload: error.message || 'Error fetching quiz.' \n        });\n      }\n    };\n    \n    loadQuiz();\n  }, [quizId, questionType, dispatch]);\n\n  // Loading states\n  if (state.isLoading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen bg-custom-light-bg\">\n        <p className=\"text-xl text-custom-dark-blue\">Loading quiz...</p>\n      </div>\n    );\n  }\n\n  // Error state\n  if (state.error) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen bg-custom-light-bg\">\n        <p className=\"text-xl text-custom-error\">Error: {state.error}</p>\n      </div>\n    );\n  }\n\n  // No quiz data\n  if (!state.quiz) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen bg-custom-light-bg\">\n        <p className=\"text-xl text-custom-dark-blue\">Quiz not found.</p>\n      </div>\n    );\n  }\n  \n  // Quiz loaded but no questions match the filter\n  if (state.questions.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-custom-light-bg py-6 px-4 md:px-6\">\n        <div className=\"quiz-container max-w-3xl mx-auto\">\n          <header className=\"text-center mb-8 animate-fade-in\">\n            <h1 className=\"text-3xl md:text-4xl font-bold text-custom-dark-blue mb-3 relative inline-block pb-2\">\n              {state.quiz.title}\n              <span className=\"absolute left-1/4 bottom-0 w-1/2 h-1 bg-primary-gradient rounded-rounded-full\"></span>\n            </h1>\n            \n            {/* Filter by question type */}\n            <div className=\"mb-6\">\n              <div className=\"flex flex-wrap justify-center gap-2 mb-2\">\n                <Link \n                  href={`/quiz-test/${quizId}`}\n                  className={`px-3 py-1 rounded-full text-sm ${!questionType ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n                >\n                  All Questions\n                </Link>\n                <Link \n                  href={`/quiz-test/${quizId}/single_selection`}\n                  className={`px-3 py-1 rounded-full text-sm ${questionType === 'single_selection' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n                >\n                  Single Selection\n                </Link>\n                <Link \n                  href={`/quiz-test/${quizId}/multi`}\n                  className={`px-3 py-1 rounded-full text-sm ${questionType === 'multi' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n                >\n                  Multiple Selection\n                </Link>\n                <Link \n                  href={`/quiz-test/${quizId}/drag_and_drop`}\n                  className={`px-3 py-1 rounded-full text-sm ${questionType === 'drag_and_drop' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n                >\n                  Drag and Drop\n                </Link>\n                <Link \n                  href={`/quiz-test/${quizId}/dropdown_selection`}\n                  className={`px-3 py-1 rounded-full text-sm ${questionType === 'dropdown_selection' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n                >\n                  Dropdown\n                </Link>\n                <Link \n                  href={`/quiz-test/${quizId}/order`}\n                  className={`px-3 py-1 rounded-full text-sm ${questionType === 'order' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n                >\n                  Order\n                </Link>\n              </div>\n              <div className=\"mt-2\">\n                <Link \n                  href={`/quiz-test/${quizId}`}\n                  className=\"text-custom-primary text-sm hover:underline flex items-center justify-center\"\n                >\n                  View all question types\n                </Link>\n              </div>\n            </div>\n          </header>\n          \n          <div className=\"flex justify-center items-center p-10 bg-white rounded-xl shadow-md\">\n            <p className=\"text-xl text-custom-dark-blue\">\n              {questionType \n                ? `No questions of type \"${questionType}\" available in this quiz.` \n                : \"No questions available in this quiz.\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const currentQuestion = state.questions[state.currentQuestionIndex];\n\n  // Quiz completed state\n  if (!currentQuestion && state.isQuizComplete) {\n    return <QuizCompletionSummary quiz={state.quiz} />;\n  }\n  \n  // No current question\n  if (!currentQuestion) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen bg-custom-light-bg\">\n        <p className=\"text-xl text-custom-dark-blue\">No current question available.</p>\n      </div>\n    );\n  }\n  \n  // Render quiz content\n  return (\n    <div className=\"min-h-screen bg-custom-light-bg py-6 px-4 md:px-6\">\n      <div className=\"quiz-container max-w-3xl mx-auto\">\n        <header className=\"text-center mb-8 animate-fade-in\">\n          <h1 className=\"text-3xl md:text-4xl font-bold text-custom-dark-blue mb-3 relative inline-block pb-2\">\n            {state.quiz.title}\n            <span className=\"absolute left-1/4 bottom-0 w-1/2 h-1 bg-primary-gradient rounded-rounded-full\"></span>\n          </h1>\n          \n          {/* Filter by question type */}\n          <div className=\"mb-6 flex flex-wrap justify-center gap-2\">\n            <Link \n              href={`/quiz-test/${quizId}`}\n              className={`px-3 py-1 rounded-full text-sm ${!questionType ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n            >\n              All Questions\n            </Link>\n            <Link \n              href={`/quiz-test/${quizId}/single_selection`}\n              className={`px-3 py-1 rounded-full text-sm ${questionType === 'single_selection' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n            >\n              Single Selection\n            </Link>\n            <Link \n              href={`/quiz-test/${quizId}/multi`}\n              className={`px-3 py-1 rounded-full text-sm ${questionType === 'multi' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n            >\n              Multiple Selection\n            </Link>\n            <Link \n              href={`/quiz-test/${quizId}/drag_and_drop`}\n              className={`px-3 py-1 rounded-full text-sm ${questionType === 'drag_and_drop' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n            >\n              Drag and Drop\n            </Link>\n            <Link \n              href={`/quiz-test/${quizId}/dropdown_selection`}\n              className={`px-3 py-1 rounded-full text-sm ${questionType === 'dropdown_selection' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n            >\n              Dropdown\n            </Link>\n            <Link \n              href={`/quiz-test/${quizId}/order`}\n              className={`px-3 py-1 rounded-full text-sm ${questionType === 'order' ? 'bg-custom-primary text-white' : 'bg-gray-200 hover:bg-gray-300'}`}\n            >\n              Order\n            </Link>\n          </div>\n          \n          <QuizProgress \n            currentIndex={state.currentQuestionIndex} \n            totalQuestions={state.questions.length} \n          />\n        </header>\n        \n        <QuestionCard question={currentQuestion} />\n        \n        <QuizNavigation currentQuestionId={currentQuestion.id} />\n      </div>\n    </div>\n  );\n};  // Main Quiz Page Component that can be used directly\nconst QuizPage: React.FC<{ quizId: string; questionType?: string }> = (props) => {\n  return <QuizPageContent {...props} />;\n};\n\nexport default QuizPage;\n\n// Define list of available question types for easy import elsewhere\nexport const availableQuestionTypes = [\n  { type: 'single_selection', name: 'Single Selection' },\n  { type: 'multi', name: 'Multiple Selection' },\n  { type: 'drag_and_drop', name: 'Drag and Drop' },\n  { type: 'dropdown_selection', name: 'Dropdown' },\n  { type: 'order', name: 'Order' }\n];\n"
    },
    {
      "filepath": "app/features/quiz/pages/QuizPage.tsx.new",
      "content": ""
    },
    {
      "filepath": "app/features/quiz/services/quizApiClient.ts",
      "content": ""
    },
    {
      "filepath": "app/features/quiz/services/quizService.ts",
      "content": "import { Quiz } from '../../../types/quiz';\n\n// Client-side service for fetching quiz data\nexport class QuizService {\n  // Fetch quiz by ID with optional question type filter\n  static async fetchQuizById(quizId: string, questionType?: string): Promise<Quiz> {\n    const url = questionType \n      ? `/api/quiz/${quizId}?questionType=${questionType}`\n      : `/api/quiz/${quizId}`;\n    \n    const response = await fetch(url);\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || `Failed to fetch quiz: ${response.statusText}`);\n    }\n    \n    return await response.json();\n  }\n}\n"
    },
    {
      "filepath": "app/blog/layout.tsx",
      "content": "import { Suspense } from \"react\";\nimport HeaderBlog from \"./_assets/components/HeaderBlog\";\nimport Footer from \"@/components/Footer\";\n\nexport default async function LayoutBlog({ children }: { children: any }) {\n  return (\n    <div>\n      <Suspense>\n        <HeaderBlog />\n      </Suspense>\n\n      <main className=\"min-h-screen max-w-6xl mx-auto p-8\">{children}</main>\n\n      <div className=\"h-24\" />\n\n      <Footer />\n    </div>\n  );\n}\n"
    },
    {
      "filepath": "app/blog/page.tsx",
      "content": "import { categories, articles } from \"./_assets/content\";\nimport CardArticle from \"./_assets/components/CardArticle\";\nimport CardCategory from \"./_assets/components/CardCategory\";\nimport config from \"@/config\";\nimport { getSEOTags } from \"@/libs/seo\";\n\nexport const metadata = getSEOTags({\n  title: `${config.appName} Blog | Stripe Chargeback Protection`,\n  description:\n    \"Learn how to prevent chargebacks, how to accept payments online, and keep your Stripe account in good standing\",\n  canonicalUrlRelative: \"/blog\",\n});\n\nexport default async function Blog() {\n  const articlesToDisplay = articles\n    .sort(\n      (a, b) =>\n        new Date(b.publishedAt).valueOf() - new Date(a.publishedAt).valueOf()\n    )\n    .slice(0, 6);\n  return (\n    <>\n      <section className=\"text-center max-w-xl mx-auto mt-12 mb-24 md:mb-32\">\n        <h1 className=\"font-extrabold text-3xl lg:text-5xl tracking-tight mb-6\">\n          The {config.appName} Blog\n        </h1>\n        <p className=\"text-lg opacity-80 leading-relaxed\">\n          Learn how to ship your startup in days, not weeks. And get the latest\n          updates about the boilerplate\n        </p>\n      </section>\n\n      <section className=\"grid lg:grid-cols-2 mb-24 md:mb-32 gap-8\">\n        {articlesToDisplay.map((article, i) => (\n          <CardArticle\n            article={article}\n            key={article.slug}\n            isImagePriority={i <= 2}\n          />\n        ))}\n      </section>\n\n      <section>\n        <p className=\"font-bold text-2xl lg:text-4xl tracking-tight text-center mb-8 md:mb-12\">\n          Browse articles by category\n        </p>\n\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n          {categories.map((category) => (\n            <CardCategory key={category.slug} category={category} tag=\"div\" />\n          ))}\n        </div>\n      </section>\n    </>\n  );\n}\n"
    },
    {
      "filepath": "app/blog/_assets/content.tsx",
      "content": "import type { JSX } from \"react\";\nimport Image, { StaticImageData } from \"next/image\";\nimport marcImg from \"@/app/blog/_assets/images/authors/marc.png\";\nimport introducingSupabaseImg from \"@/public/blog/introducing-supabase/header.png\";\n\n// ==================================================================================================================================================================\n// BLOG CATEGORIES \ud83c\udff7\ufe0f\n// ==================================================================================================================================================================\n\nexport type categoryType = {\n  slug: string;\n  title: string;\n  titleShort?: string;\n  description: string;\n  descriptionShort?: string;\n};\n\n// These slugs are used to generate pages in the /blog/category/[categoryI].js. It's a way to group articles by category.\nconst categorySlugs: { [key: string]: string } = {\n  feature: \"feature\",\n  tutorial: \"tutorial\",\n};\n\n// All the blog categories data display in the /blog/category/[categoryI].js pages.\nexport const categories: categoryType[] = [\n  {\n    // The slug to use in the URL, from the categorySlugs object above.\n    slug: categorySlugs.feature,\n    // The title to display the category title (h1), the category badge, the category filter, and more. Less than 60 characters.\n    title: \"New Features\",\n    // A short version of the title above, display in small components like badges. 1 or 2 words\n    titleShort: \"Features\",\n    // The description of the category to display in the category page. Up to 160 characters.\n    description:\n      \"Here are the latest features we've added to ShipFast. I'm constantly improving our product to help you ship faster.\",\n    // A short version of the description above, only displayed in the <Header /> on mobile. Up to 60 characters.\n    descriptionShort: \"Latest features added to ShipFast.\",\n  },\n  {\n    slug: categorySlugs.tutorial,\n    title: \"How Tos & Tutorials\",\n    titleShort: \"Tutorials\",\n    description:\n      \"Learn how to use ShipFast with these step-by-step tutorials. I'll show you how to ship faster and save time.\",\n    descriptionShort:\n      \"Learn how to use ShipFast with these step-by-step tutorials.\",\n  },\n];\n\n// ==================================================================================================================================================================\n// BLOG AUTHORS \ud83d\udcdd\n// ==================================================================================================================================================================\n\nexport type authorType = {\n  slug: string;\n  name: string;\n  job: string;\n  description: string;\n  avatar: StaticImageData | string;\n  socials?: {\n    name: string;\n    icon: JSX.Element;\n    url: string;\n  }[];\n};\n\n// Social icons used in the author's bio.\nconst socialIcons: {\n  [key: string]: {\n    name: string;\n    svg: JSX.Element;\n  };\n} = {\n  twitter: {\n    name: \"Twitter\",\n    svg: (\n      <svg\n        version=\"1.1\"\n        id=\"svg5\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 1668.56 1221.19\"\n        className=\"w-9 h-9\"\n        // Using a dark theme? ->  className=\"w-9 h-9 fill-white\"\n      >\n        <g id=\"layer1\" transform=\"translate(52.390088,-25.058597)\">\n          <path\n            id=\"path1009\"\n            d=\"M283.94,167.31l386.39,516.64L281.5,1104h87.51l340.42-367.76L984.48,1104h297.8L874.15,558.3l361.92-390.99   h-87.51l-313.51,338.7l-253.31-338.7H283.94z M412.63,231.77h136.81l604.13,807.76h-136.81L412.63,231.77z\"\n          />\n        </g>\n      </svg>\n    ),\n  },\n  linkedin: {\n    name: \"LinkedIn\",\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"w-6 h-6\"\n        // Using a dark theme? ->  className=\"w-6 h-6 fill-white\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path d=\"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z\" />\n      </svg>\n    ),\n  },\n  github: {\n    name: \"GitHub\",\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"w-6 h-6\"\n        // Using a dark theme? ->  className=\"w-6 h-6 fill-white\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n      </svg>\n    ),\n  },\n};\n\n// These slugs are used to generate pages in the /blog/author/[authorId].js. It's a way to show all articles from an author.\nconst authorSlugs: {\n  [key: string]: string;\n} = {\n  marc: \"marc\",\n};\n\n// All the blog authors data display in the /blog/author/[authorId].js pages.\nexport const authors: authorType[] = [\n  {\n    // The slug to use in the URL, from the authorSlugs object above.\n    slug: authorSlugs.marc,\n    // The name to display in the author's bio. Up to 60 characters.\n    name: \"Marc Lou\",\n    // The job to display in the author's bio. Up to 60 characters.\n    job: \"Maker of ByeDispute\",\n    // The description of the author to display in the author's bio. Up to 160 characters.\n    description:\n      \"Marc is a developer and an entrepreneur. He's built 20 startups in the last 3 years. 6 were profitable and 3 were acquired. He's currently building ByeDispute, the #1 Stripe Chargebacks Protection tool.\",\n    // The avatar of the author to display in the author's bio and avatar badge. It's better to use a local image, but you can also use an external image (https://...)\n    avatar: marcImg,\n    // A list of social links to display in the author's bio.\n    socials: [\n      {\n        name: socialIcons.twitter.name,\n        icon: socialIcons.twitter.svg,\n        url: \"https://twitter.com/marc_louvion\",\n      },\n      {\n        name: socialIcons.linkedin.name,\n        icon: socialIcons.linkedin.svg,\n        url: \"https://www.linkedin.com/in/marclouvion/\",\n      },\n      {\n        name: socialIcons.github.name,\n        icon: socialIcons.github.svg,\n        url: \"https://github.com/Marc-Lou-Org/ship-fast\",\n      },\n    ],\n  },\n];\n\n// ==================================================================================================================================================================\n// BLOG ARTICLES \ud83d\udcda\n// ==================================================================================================================================================================\n\nexport type articleType = {\n  slug: string;\n  title: string;\n  description: string;\n  categories: categoryType[];\n  author: authorType;\n  publishedAt: string;\n  image: {\n    src?: StaticImageData;\n    urlRelative: string;\n    alt: string;\n  };\n  content: JSX.Element;\n};\n\n// These styles are used in the content of the articles. When you update them, all articles will be updated.\nconst styles: {\n  [key: string]: string;\n} = {\n  h2: \"text-2xl lg:text-4xl font-bold tracking-tight mb-4 text-base-content\",\n  h3: \"text-xl lg:text-2xl font-bold tracking-tight mb-2 text-base-content\",\n  p: \"text-base-content/90 leading-relaxed\",\n  ul: \"list-inside list-disc text-base-content/90 leading-relaxed\",\n  li: \"list-item\",\n  // Altnernatively, you can use the library react-syntax-highlighter to display code snippets.\n  code: \"text-sm font-mono bg-neutral text-neutral-content p-6 rounded-box my-4 overflow-x-scroll select-all\",\n  codeInline:\n    \"text-sm font-mono bg-base-300 px-1 py-0.5 rounded-box select-all\",\n};\n\n// All the blog articles data display in the /blog/[articleId].js pages.\nexport const articles: articleType[] = [\n  {\n    // The unique slug to use in the URL. It's also used to generate the canonical URL.\n    slug: \"introducing-supabase\",\n    // The title to display in the article page (h1). Less than 60 characters. It's also used to generate the meta title.\n    title: \"Introducing Supabase to ShipFast\",\n    // The description of the article to display in the article page. Up to 160 characters. It's also used to generate the meta description.\n    description:\n      \"Supabase is an open-source Firebase alternative. It's a great tool for building a backend for your app. It's now integrated with ShipFast!\",\n    // An array of categories of the article. It's used to generate the category badges, the category filter, and more.\n    categories: [\n      categories.find((category) => category.slug === categorySlugs.feature),\n    ],\n    // The author of the article. It's used to generate a link to the author's bio page.\n    author: authors.find((author) => author.slug === authorSlugs.marc),\n    // The date of the article. It's used to generate the meta date.\n    publishedAt: \"2023-11-20\",\n    image: {\n      // The image to display in <CardArticle /> components.\n      src: introducingSupabaseImg,\n      // The relative URL of the same image to use in the Open Graph meta tags & the Schema Markup JSON-LD. It should be the same image as the src above.\n      urlRelative: \"/blog/introducing-supabase/header.jpg\",\n      alt: \"Supabase and ShipFast logo combined\",\n    },\n    // The actual content of the article that will be shown under the <h1> title in the article page.\n    content: (\n      <>\n        <Image\n          src={introducingSupabaseImg}\n          alt=\"Supabase and ShipFast logo combined\"\n          width={700}\n          height={500}\n          priority={true}\n          className=\"rounded-box\"\n          placeholder=\"blur\"\n        />\n        <section>\n          <h2 className={styles.h2}>Introduction</h2>\n          <p className={styles.p}>\n            Supabase is an open-source Firebase alternative. It&apos;s a great\n            tool for building a backend for your app. It&apos;s now integrated\n            with ShipFast!\n          </p>\n        </section>\n\n        <section>\n          <h3 className={styles.h3}>1. Create a supabase account</h3>\n          <p className={styles.p}>\n            First, go to{\" \"}\n            <a href=\"https://supabase.com/\" className=\"link link-primary\">\n              Supabase\n            </a>{\" \"}\n            and create an account. It&apos;s free for up to 10,000 rows per\n            table.\n            <br />\n            Then create a new project and a new table. You can use the following\n            SQL schema:\n          </p>\n\n          <pre className={styles.code}>\n            <code>\n              {`CREATE TABLE public.users (\n  id bigint NOT NULL DEFAULT nextval('users_id_seq'::regclass),\n  email text NOT NULL,\n  password text NOT NULL,\n  created_at timestamp with time zone NOT NULL DEFAULT now(),\n  updated_at timestamp with time zone NOT NULL DEFAULT now(),\n  CONSTRAINT users_pkey PRIMARY KEY (id)\n);`}\n            </code>\n          </pre>\n        </section>\n\n        <section>\n          <h3 className={styles.h3}>2. Add your credentials to ShipFast</h3>\n          <p className={styles.p}>\n            Copy the <span className={styles.codeInline}>API URL</span> and{\" \"}\n            <span className={styles.codeInline}>API Key</span> from your\n            Supabase project settings and add them to your ShipFast project\n            settings. Add these files to your project:\n          </p>\n\n          <ul className={styles.ul}>\n            <li className={styles.li}>.env.local</li>\n            <li className={styles.li}>.env.production</li>\n          </ul>\n        </section>\n      </>\n    ),\n  },\n];\n"
    },
    {
      "filepath": "app/blog/_assets/components/HeaderBlog.tsx",
      "content": "\"use client\";\n\nimport type { JSX } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"next/navigation\";\nimport { Popover, Transition } from \"@headlessui/react\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport logo from \"@/app/icon.png\";\nimport config from \"@/config\";\nimport { categories } from \"../content\";\nimport ButtonSignin from \"@/components/ButtonSignin\";\n\nconst links: {\n  href: string;\n  label: string;\n}[] = [\n  {\n    href: \"/blog/\",\n    label: \"All Posts\",\n  },\n];\n\nconst cta: JSX.Element = (\n  <ButtonSignin text=\"Prevent disputes\" extraStyle=\"btn-primary md:btn-sm\" />\n);\n\nconst ButtonPopoverCategories = () => {\n  return (\n    <Popover className=\"relative z-30\">\n      {({ open }) => (\n        <>\n          <Popover.Button\n            className=\"link no-underline flex flex-nowrap items-center gap-1 text-base-content/80 hover:text-base-content active:text-base-content focus:text-base-content duration-100\"\n            title=\"Open Blog categories\"\n          >\n            Categories\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className={`w-5 h-5 duration-200 ${\n                open ? \"transform rotate-180 \" : \"\"\n              }`}\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </Popover.Button>\n          <Transition\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n          >\n            <Popover.Panel className=\"absolute left-0 z-30 mt-3 w-screen max-w-full sm:max-w-sm transform\">\n              {({ close }) => (\n                <div className=\"overflow-hidden rounded-box shadow-lg ring-1 ring-base-content ring-opacity-5\">\n                  <div className=\"relative grid gap-2 bg-base-100 p-2 overflow-hidden\">\n                    {categories.map((category) => (\n                      <div key={category.slug} onClick={() => close()}>\n                        <Link\n                          className=\"block text-left p-3 -m-1 cursor-pointer hover:bg-base-200 rounded-box duration-200\"\n                          href={`/blog/category/${category.slug}`}\n                        >\n                          <div className=\"\">\n                            <p className=\"font-medium mb-0.5\">\n                              {category?.titleShort || category.title}\n                            </p>\n                            <p className=\"text-sm opacity-80\">\n                              {category?.descriptionShort ||\n                                category.description}\n                            </p>\n                          </div>\n                        </Link>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </Popover.Panel>\n          </Transition>\n        </>\n      )}\n    </Popover>\n  );\n};\n\nconst ButtonAccordionCategories = () => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  return (\n    <>\n      <button\n        onClick={(e) => {\n          e.preventDefault();\n          setIsOpen(!isOpen);\n        }}\n        aria-expanded={isOpen}\n        type=\"button\"\n        className=\"link no-underline flex justify-between items-center w-full \"\n      >\n        Categories\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          className={`w-5 h-5 duration-200 ${\n            isOpen ? \"transform rotate-180 \" : \"\"\n          }`}\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n\n      {isOpen && (\n        <ul className=\"space-y-4\">\n          {categories.map((category) => (\n            <li key={category.slug}>\n              <Link\n                href={`/blog/category/${category.slug}`}\n                className=\"text-base-content/80 hover:text-base-content duration-100 link link-hover\"\n              >\n                {category?.titleShort || category.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\n// This is the header that appears on all pages in the /blog folder.\n// By default it shows the logo, the links, and the CTA.\n// In the links, there's a popover with the categories.\nconst HeaderBlog = () => {\n  const searchParams = useSearchParams();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  // setIsOpen(false) when the route changes (i.e: when the user clicks on a link on mobile)\n  useEffect(() => {\n    setIsOpen(false);\n  }, [searchParams]);\n\n  return (\n    <header className=\"bg-base-200\">\n      <nav className=\"max-w-7xl flex items-center justify-between px-8 py-3 mx-auto\">\n        {/* Your logo/name on large screens */}\n        <div className=\"flex lg:flex-1\">\n          <Link\n            className=\"flex items-center gap-2 shrink-0 \"\n            href=\"/\"\n            title={`${config.appName} homepage`}\n          >\n            <Image\n              src={logo}\n              alt={`${config.appName} logo`}\n              className=\"w-8\"\n              priority={true}\n              width={32}\n              height={32}\n            />\n            <span className=\"font-extrabold text-lg\">{config.appName}</span>\n          </Link>\n        </div>\n        {/* Burger button to open menu on mobile */}\n        <div className=\"flex lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-box p-2.5\"\n            onClick={() => setIsOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth={1.5}\n              stroke=\"currentColor\"\n              className=\"w-6 h-6 text-base-content\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        {/* Your links on large screens */}\n        <div className=\"hidden lg:flex lg:justify-center lg:gap-12 lg:items-center\">\n          {links.map((link) => (\n            <Link\n              href={link.href}\n              key={link.href}\n              className=\"link link-hover text-base-content/80 hover:text-base-content active:text-base-content focus:text-base-content duration-100\"\n              title={link.label}\n            >\n              {link.label}\n            </Link>\n          ))}\n\n          <ButtonPopoverCategories />\n        </div>\n\n        {/* CTA on large screens */}\n        <div className=\"hidden lg:flex lg:justify-end lg:flex-1\">{cta}</div>\n      </nav>\n\n      {/* Mobile menu, show/hide based on menu state. */}\n      <div className={`relative z-50 ${isOpen ? \"\" : \"hidden\"}`}>\n        <div\n          className={`fixed inset-y-0 right-0 z-10 w-full px-8 py-3 overflow-y-auto bg-base-200 sm:max-w-sm sm:ring-1 sm:ring-neutral/10 transform origin-right transition ease-in-out duration-300`}\n        >\n          {/* Your logo/name on small screens */}\n          <div className=\"flex items-center justify-between\">\n            <Link\n              className=\"flex items-center gap-2 shrink-0 \"\n              title={`${config.appName} homepage`}\n              href=\"/\"\n            >\n              <Image\n                src={logo}\n                alt={`${config.appName} logo`}\n                className=\"w-8\"\n                placeholder=\"blur\"\n                priority={true}\n                width={32}\n                height={32}\n              />\n              <span className=\"font-extrabold text-lg\">{config.appName}</span>\n            </Link>\n            <button\n              type=\"button\"\n              className=\"-m-2.5 rounded-box p-2.5\"\n              onClick={() => setIsOpen(false)}\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-6 h-6\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </button>\n          </div>\n\n          {/* Your links on small screens */}\n          <div className=\"flow-root mt-6\">\n            <div className=\"py-4\">\n              <div className=\"flex flex-col gap-y-4 items-start\">\n                {links.map((link) => (\n                  <Link\n                    href={link.href}\n                    key={link.href}\n                    className=\"link link-hover\"\n                    title={link.label}\n                  >\n                    {link.label}\n                  </Link>\n                ))}\n                <ButtonAccordionCategories />\n              </div>\n            </div>\n            <div className=\"divider\"></div>\n            {/* Your CTA on small screens */}\n            <div className=\"flex flex-col\">{cta}</div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default HeaderBlog;\n"
    },
    {
      "filepath": "app/blog/_assets/components/BadgeCategory.tsx",
      "content": "import Link from \"next/link\";\nimport { categoryType } from \"../content\";\n\n// This is the category badge that appears in the article page and in <CardArticle /> component\nconst Category = ({\n  category,\n  extraStyle,\n}: {\n  category: categoryType;\n  extraStyle?: string;\n}) => {\n  return (\n    <Link\n      href={`/blog/category/${category.slug}`}\n      className={`badge badge-sm md:badge-md hover:badge-primary ${\n        extraStyle ? extraStyle : \"\"\n      }`}\n      title={`Posts in ${category.title}`}\n      rel=\"tag\"\n    >\n      {category.titleShort}\n    </Link>\n  );\n};\n\nexport default Category;\n"
    },
    {
      "filepath": "app/blog/_assets/components/CardCategory.tsx",
      "content": "import type { JSX } from \"react\";\nimport Link from \"next/link\";\nimport { categoryType } from \"../content\";\n\n// This is the category card that appears in the home page and in the category page\nconst CardCategory = ({\n  category,\n  tag = \"h2\",\n}: {\n  category: categoryType;\n  tag?: keyof JSX.IntrinsicElements;\n}) => {\n  const TitleTag = tag;\n\n  return (\n    <Link\n      className=\"p-4 bg-base-200 text-base-content rounded-box duration-200 hover:bg-neutral hover:text-neutral-content\"\n      href={`/blog/category/${category.slug}`}\n      title={category.title}\n      rel=\"tag\"\n    >\n      <TitleTag className=\"md:text-lg font-medium\">\n        {category?.titleShort || category.title}\n      </TitleTag>\n    </Link>\n  );\n};\n\nexport default CardCategory;\n"
    },
    {
      "filepath": "app/blog/_assets/components/Avatar.tsx",
      "content": "import Link from \"next/link\";\nimport Image from \"next/image\";\nimport { articleType } from \"../content\";\n\n// This is the author avatar that appears in the article page and in <CardArticle /> component\nconst Avatar = ({ article }: { article: articleType }) => {\n  return (\n    <Link\n      href={`/blog/author/${article.author.slug}`}\n      title={`Posts by ${article.author.name}`}\n      className=\"inline-flex items-center gap-2 group\"\n      rel=\"author\"\n    >\n      <span itemProp=\"author\">\n        <Image\n          src={article.author.avatar}\n          // alt={`Avatar of ${article.author.name}`}\n          alt=\"\"\n          className=\"w-7 h-7 rounded-full object-cover object-center\"\n          width={28}\n          height={28}\n        />\n      </span>\n      <span className=\"group-hover:underline\">{article.author.name}</span>\n    </Link>\n  );\n};\n\nexport default Avatar;\n"
    },
    {
      "filepath": "app/blog/_assets/components/CardArticle.tsx",
      "content": "import type { JSX } from \"react\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport BadgeCategory from \"./BadgeCategory\";\nimport Avatar from \"./Avatar\";\nimport { articleType } from \"../content\";\n\n// This is the article card that appears in the home page, in the category page, and in the author's page\nconst CardArticle = ({\n  article,\n  tag = \"h2\",\n  showCategory = true,\n  isImagePriority = false,\n}: {\n  article: articleType;\n  tag?: keyof JSX.IntrinsicElements;\n  showCategory?: boolean;\n  isImagePriority?: boolean;\n}) => {\n  const TitleTag = tag;\n\n  return (\n    <article className=\"card bg-base-200 rounded-box overflow-hidden\">\n      {article.image?.src && (\n        <Link\n          href={`/blog/${article.slug}`}\n          className=\"link link-hover hover:link-primary\"\n          title={article.title}\n          rel=\"bookmark\"\n        >\n          <figure>\n            <Image\n              src={article.image.src}\n              alt={article.image.alt}\n              width={600}\n              height={338}\n              priority={isImagePriority}\n              placeholder=\"blur\"\n              className=\"aspect-video object-center object-cover hover:scale-[1.03] duration-200 ease-in-out\"\n            />\n          </figure>\n        </Link>\n      )}\n      <div className=\"card-body\">\n        {/* CATEGORIES */}\n        {showCategory && (\n          <div className=\"flex flex-wrap gap-2\">\n            {article.categories.map((category) => (\n              <BadgeCategory category={category} key={category.slug} />\n            ))}\n          </div>\n        )}\n\n        {/* TITLE WITH RIGHT TAG */}\n        <TitleTag className=\"mb-1 text-xl md:text-2xl font-bold\">\n          <Link\n            href={`/blog/${article.slug}`}\n            className=\"link link-hover hover:link-primary\"\n            title={article.title}\n            rel=\"bookmark\"\n          >\n            {article.title}\n          </Link>\n        </TitleTag>\n\n        <div className=\" text-base-content/80 space-y-4\">\n          {/* DESCRIPTION */}\n          <p className=\"\">{article.description}</p>\n\n          {/* AUTHOR & DATE */}\n          <div className=\"flex items-center gap-4 text-sm\">\n            <Avatar article={article} />\n\n            <span itemProp=\"datePublished\">\n              {new Date(article.publishedAt).toLocaleDateString(\"en-US\", {\n                month: \"long\",\n                day: \"numeric\",\n              })}\n            </span>\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default CardArticle;\n"
    },
    {
      "filepath": "app/blog/category/[categoryId]/page.tsx",
      "content": "import { categories, articles } from \"../../_assets/content\";\nimport CardArticle from \"../../_assets/components/CardArticle\";\nimport CardCategory from \"../../_assets/components/CardCategory\";\nimport { getSEOTags } from \"@/libs/seo\";\nimport config from \"@/config\";\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: { categoryId: string };\n}) {\n  const category = categories.find(\n    (category) => category.slug === params.categoryId\n  );\n\n  return getSEOTags({\n    title: `${category.title} | Blog by ${config.appName}`,\n    description: category.description,\n    canonicalUrlRelative: `/blog/category/${category.slug}`,\n  });\n}\n\nexport default async function Category({\n  params,\n}: {\n  params: { categoryId: string };\n}) {\n  const category = categories.find(\n    (category) => category.slug === params.categoryId\n  );\n  const articlesInCategory = articles\n    .filter((article) =>\n      article.categories.map((c) => c.slug).includes(category.slug)\n    )\n    .sort(\n      (a, b) =>\n        new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime()\n    )\n    .slice(0, 3);\n\n  return (\n    <>\n      <section className=\"mt-12 mb-24 md:mb-32 max-w-3xl mx-auto text-center\">\n        <h1 className=\"font-extrabold text-3xl lg:text-5xl tracking-tight mb-6 md:mb-12\">\n          {category.title}\n        </h1>\n        <p className=\"md:text-lg opacity-80 max-w-xl mx-auto\">\n          {category.description}\n        </p>\n      </section>\n\n      <section className=\"mb-24\">\n        <h2 className=\"font-bold text-2xl lg:text-4xl tracking-tight text-center mb-8 md:mb-12\">\n          Most recent articles in {category.title}\n        </h2>\n\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          {articlesInCategory.map((article) => (\n            <CardArticle\n              key={article.slug}\n              article={article}\n              tag=\"h3\"\n              showCategory={false}\n            />\n          ))}\n        </div>\n      </section>\n\n      <section>\n        <h2 className=\"font-bold text-2xl lg:text-4xl tracking-tight text-center mb-8 md:mb-12\">\n          Other categories you might like\n        </h2>\n\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n          {categories\n            .filter((c) => c.slug !== category.slug)\n            .map((category) => (\n              <CardCategory key={category.slug} category={category} tag=\"h3\" />\n            ))}\n        </div>\n      </section>\n    </>\n  );\n}\n"
    },
    {
      "filepath": "app/blog/[articleId]/page.tsx",
      "content": "import Link from \"next/link\";\nimport Script from \"next/script\";\nimport { articles } from \"../_assets/content\";\nimport BadgeCategory from \"../_assets/components/BadgeCategory\";\nimport Avatar from \"../_assets/components/Avatar\";\nimport { getSEOTags } from \"@/libs/seo\";\nimport config from \"@/config\";\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: { articleId: string };\n}) {\n  const article = articles.find((article) => article.slug === params.articleId);\n\n  return getSEOTags({\n    title: article.title,\n    description: article.description,\n    canonicalUrlRelative: `/blog/${article.slug}`,\n    extraTags: {\n      openGraph: {\n        title: article.title,\n        description: article.description,\n        url: `/blog/${article.slug}`,\n        images: [\n          {\n            url: article.image.urlRelative,\n            width: 1200,\n            height: 660,\n          },\n        ],\n        locale: \"en_US\",\n        type: \"website\",\n      },\n    },\n  });\n}\n\nexport default async function Article({\n  params,\n}: {\n  params: { articleId: string };\n}) {\n  const article = articles.find((article) => article.slug === params.articleId);\n  const articlesRelated = articles\n    .filter(\n      (a) =>\n        a.slug !== params.articleId &&\n        a.categories.some((c) =>\n          article.categories.map((c) => c.slug).includes(c.slug)\n        )\n    )\n    .sort(\n      (a, b) =>\n        new Date(b.publishedAt).valueOf() - new Date(a.publishedAt).valueOf()\n    )\n    .slice(0, 3);\n\n  return (\n    <>\n      {/* SCHEMA JSON-LD MARKUP FOR GOOGLE */}\n      <Script\n        type=\"application/ld+json\"\n        id={`json-ld-article-${article.slug}`}\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Article\",\n            mainEntityOfPage: {\n              \"@type\": \"WebPage\",\n              \"@id\": `https://${config.domainName}/blog/${article.slug}`,\n            },\n            name: article.title,\n            headline: article.title,\n            description: article.description,\n            image: `https://${config.domainName}${article.image.urlRelative}`,\n            datePublished: article.publishedAt,\n            dateModified: article.publishedAt,\n            author: {\n              \"@type\": \"Person\",\n              name: article.author.name,\n            },\n          }),\n        }}\n      />\n\n      {/* GO BACK LINK */}\n      <div>\n        <Link\n          href=\"/blog\"\n          className=\"link !no-underline text-base-content/80 hover:text-base-content inline-flex items-center gap-1\"\n          title=\"Back to Blog\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"w-5 h-5\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M15 10a.75.75 0 01-.75.75H7.612l2.158 1.96a.75.75 0 11-1.04 1.08l-3.5-3.25a.75.75 0 010-1.08l3.5-3.25a.75.75 0 111.04 1.08L7.612 9.25h6.638A.75.75 0 0115 10z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          Back to Blog\n        </Link>\n      </div>\n\n      <article>\n        {/* HEADER WITH CATEGORIES AND DATE AND TITLE */}\n        <section className=\"my-12 md:my-20 max-w-[800px]\">\n          <div className=\"flex items-center gap-4 mb-6\">\n            {article.categories.map((category) => (\n              <BadgeCategory\n                category={category}\n                key={category.slug}\n                extraStyle=\"!badge-lg\"\n              />\n            ))}\n            <span className=\"text-base-content/80\" itemProp=\"datePublished\">\n              {new Date(article.publishedAt).toLocaleDateString(\"en-US\", {\n                month: \"long\",\n                day: \"numeric\",\n                year: \"numeric\",\n              })}\n            </span>\n          </div>\n\n          <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-extrabold tracking-tight mb-6 md:mb-8\">\n            {article.title}\n          </h1>\n\n          <p className=\"text-base-content/80 md:text-lg max-w-[700px]\">\n            {article.description}\n          </p>\n        </section>\n\n        <div className=\"flex flex-col md:flex-row\">\n          {/* SIDEBAR WITH AUTHORS AND 3 RELATED ARTICLES */}\n          <section className=\"max-md:pb-4 md:pl-12 max-md:border-b md:border-l md:order-last md:w-72 shrink-0 border-base-content/10\">\n            <p className=\"text-base-content/80 text-sm mb-2 md:mb-3\">\n              Posted by\n            </p>\n            <Avatar article={article} />\n\n            {articlesRelated.length > 0 && (\n              <div className=\"hidden md:block mt-12\">\n                <p className=\" text-base-content/80 text-sm  mb-2 md:mb-3\">\n                  Related reading\n                </p>\n                <div className=\"space-y-2 md:space-y-5\">\n                  {articlesRelated.map((article) => (\n                    <div className=\"\" key={article.slug}>\n                      <p className=\"mb-0.5\">\n                        <Link\n                          href={`/blog/${article.slug}`}\n                          className=\"link link-hover hover:link-primary font-medium\"\n                          title={article.title}\n                          rel=\"bookmark\"\n                        >\n                          {article.title}\n                        </Link>\n                      </p>\n                      <p className=\"text-base-content/80 max-w-full text-sm\">\n                        {article.description}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </section>\n\n          {/* ARTICLE CONTENT */}\n          <section className=\"w-full max-md:pt-4 md:pr-20 space-y-12 md:space-y-20\">\n            {article.content}\n          </section>\n        </div>\n      </article>\n    </>\n  );\n}\n"
    },
    {
      "filepath": "app/blog/author/[authorId]/page.tsx",
      "content": "import Image from \"next/image\";\nimport { authors, articles } from \"../../_assets/content\";\nimport CardArticle from \"../../_assets/components/CardArticle\";\nimport { getSEOTags } from \"@/libs/seo\";\nimport config from \"@/config\";\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: { authorId: string };\n}) {\n  const author = authors.find((author) => author.slug === params.authorId);\n\n  return getSEOTags({\n    title: `${author.name}, Author at ${config.appName}'s Blog`,\n    description: `${author.name}, Author at ${config.appName}'s Blog`,\n    canonicalUrlRelative: `/blog/author/${author.slug}`,\n  });\n}\n\nexport default async function Author({\n  params,\n}: {\n  params: { authorId: string };\n}) {\n  const author = authors.find((author) => author.slug === params.authorId);\n  const articlesByAuthor = articles\n    .filter((article) => article.author.slug === author.slug)\n    .sort(\n      (a, b) =>\n        new Date(b.publishedAt).valueOf() - new Date(a.publishedAt).valueOf()\n    );\n\n  return (\n    <>\n      <section className=\"max-w-3xl mx-auto flex flex-col md:flex-row gap-8 mt-12 mb-24 md:mb-32\">\n        <div>\n          <p className=\"text-xs uppercase tracking-wide text-base-content/80 mb-2\">\n            Authors\n          </p>\n          <h1 className=\"font-extrabold text-3xl lg:text-5xl tracking-tight mb-2\">\n            {author.name}\n          </h1>\n          <p className=\"md:text-lg mb-6 md:mb-10 font-medium\">{author.job}</p>\n          <p className=\"md:text-lg text-base-content/80\">\n            {author.description}\n          </p>\n        </div>\n\n        <div className=\"max-md:order-first flex md:flex-col gap-4 shrink-0\">\n          <Image\n            src={author.avatar}\n            width={256}\n            height={256}\n            alt={author.name}\n            priority={true}\n            className=\"rounded-box w-[12rem] md:w-[16rem] \"\n          />\n\n          {author.socials?.length > 0 && (\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              {author.socials.map((social) => (\n                <a\n                  key={social.name}\n                  href={social.url}\n                  className=\"btn btn-square\"\n                  // Using a dark theme? -> className=\"btn btn-square btn-neutral\"\n                  title={`Go to ${author.name} profile on ${social.name}`}\n                  target=\"_blank\"\n                >\n                  {social.icon}\n                </a>\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      <section>\n        <h2 className=\"font-bold text-2xl lg:text-4xl tracking-tight text-center mb-8 md:mb-12\">\n          Most recent articles by {author.name}\n        </h2>\n\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          {articlesByAuthor.map((article) => (\n            <CardArticle key={article.slug} article={article} />\n          ))}\n        </div>\n      </section>\n    </>\n  );\n}\n"
    },
    {
      "filepath": "app/quiz-type-filters/layout.tsx",
      "content": "import React from 'react';\nimport { Metadata } from 'next';\n\nexport const metadata: Metadata = {\n  title: 'Quiz Type Filters | Test Your Knowledge',\n  description: 'Filter quizzes by question type - single selection, multiple choice, drag and drop, and more!',\n};\n\nexport default function QuizTypeFiltersLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return <>{children}</>;\n}\n"
    },
    {
      "filepath": "app/quiz-type-filters/page.tsx",
      "content": "'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { availableQuestionTypes } from '../features/quiz/pages/QuizPage';\n\n// Sample quizzes - in a real implementation you'd fetch these from an API\nconst SAMPLE_QUIZZES = [\n  { id: 'azure-a102', title: 'Microsoft Azure A102 Certification' },\n  { id: 'aws-fundamentals', title: 'AWS Cloud Fundamentals' },\n  { id: 'react-basics', title: 'React Basics Quiz' },\n];\n\nexport default function QuizTypesPage() {\n  const [quizzes, setQuizzes] = useState(SAMPLE_QUIZZES);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // In a real implementation, you'd fetch quizzes from the API\n  // useEffect(() => {\n  //   const fetchQuizzes = async () => {\n  //     setIsLoading(true);\n  //     try {\n  //       const response = await fetch('/api/quizzes');\n  //       const data = await response.json();\n  //       setQuizzes(data);\n  //     } catch (error) {\n  //       console.error(\"Error fetching quizzes:\", error);\n  //     } finally {\n  //       setIsLoading(false);\n  //     }\n  //   };\n  //   \n  //   fetchQuizzes();\n  // }, []);\n  \n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-custom-light-bg flex items-center justify-center\">\n        <p className=\"text-xl text-custom-dark-blue\">Loading quizzes...</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-custom-light-bg py-12 px-4\">\n      <div className=\"max-w-5xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-center mb-8 text-custom-dark-blue\">\n          Quizzes with Question Type Filtering\n        </h1>\n        \n        {quizzes.map((quiz) => (\n          <div key={quiz.id} className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n            <h2 className=\"text-2xl font-semibold mb-4 text-custom-primary\">{quiz.title}</h2>\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium mb-2 text-gray-700\">Take quiz with all question types:</h3>\n              <Link \n                href={`/quiz-test/${quiz.id}`}\n                className=\"inline-block px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 mr-4\"\n              >\n                All Questions\n              </Link>\n            </div>\n            \n            <div>\n              <h3 className=\"text-lg font-medium mb-2 text-gray-700\">Filter by question type:</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {availableQuestionTypes.map((type) => (\n                  <Link\n                    key={type.type}\n                    href={`/quiz-test/${quiz.id}/${type.type}`}\n                    className=\"px-3 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300\"\n                  >\n                    {type.name} Questions\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"
    },
    {
      "filepath": "app/dashboard/layout.tsx",
      "content": "import { ReactNode } from \"react\";\nimport { redirect } from \"next/navigation\";\nimport { cookies } from \"next/headers\";\nimport { createServerComponentClient } from \"@supabase/auth-helpers-nextjs\";\nimport config from \"@/config\";\n\n// This is a server-side component to ensure the user is logged in.\n// If not, it will redirect to the login page.\n// It's applied to all subpages of /dashboard in /app/dashboard/*** pages\n// You can also add custom static UI elements like a Navbar, Sidebar, Footer, etc..\n// See https://shipfa.st/docs/tutorials/private-page\nexport default async function LayoutPrivate({\n  children,\n}: {\n  children: ReactNode;\n}) {\n  const supabase = createServerComponentClient({ cookies });\n\n  const {\n    data: { session },\n  } = await supabase.auth.getSession();\n\n  if (!session) {\n    redirect(config.auth.loginUrl);\n  }\n\n  return <>{children}</>;\n}\n"
    },
    {
      "filepath": "app/dashboard/page.tsx",
      "content": "import ButtonAccount from \"@/components/ButtonAccount\";\n\nexport const dynamic = \"force-dynamic\";\n\n// This is a private page: It's protected by the layout.js component which ensures the user is authenticated.\n// It's a server compoment which means you can fetch data (like the user profile) before the page is rendered.\n// See https://shipfa.st/docs/tutorials/private-page\nexport default async function Dashboard() {\n  return (\n    <main className=\"min-h-screen p-8 pb-24\">\n      <section className=\"max-w-xl mx-auto space-y-8\">\n        <ButtonAccount />\n        <h1 className=\"text-3xl md:text-4xl font-extrabold\">Private Page</h1>\n      </section>\n    </main>\n  );\n}\n"
    },
    {
      "filepath": "app/tos/page.tsx",
      "content": "import Link from \"next/link\";\nimport { getSEOTags } from \"@/libs/seo\";\nimport config from \"@/config\";\n\n// CHATGPT PROMPT TO GENERATE YOUR TERMS & SERVICES \u2014 replace with your own data \ud83d\udc47\n\n// 1. Go to https://chat.openai.com/\n// 2. Copy paste bellow\n// 3. Replace the data with your own (if needed)\n// 4. Paste the answer from ChatGPT directly in the <pre> tag below\n\n// You are an excellent lawyer.\n\n// I need your help to write a simple Terms & Services for my website. Here is some context:\n// - Website: https://shipfa.st\n// - Name: ShipFast\n// - Contact information: marc@shipfa.st\n// - Description: A JavaScript code boilerplate to help entrepreneurs launch their startups faster\n// - Ownership: when buying a package, users can download code to create apps. They own the code but they do not have the right to resell it. They can ask for a full refund within 7 day after the purchase.\n// - User data collected: name, email and payment information\n// - Non-personal data collection: web cookies\n// - Link to privacy-policy: https://shipfa.st/privacy-policy\n// - Governing Law: France\n// - Updates to the Terms: users will be updated by email\n\n// Please write a simple Terms & Services for my site. Add the current date. Do not add or explain your reasoning. Answer:\n\nexport const metadata = getSEOTags({\n  title: `Terms and Conditions | ${config.appName}`,\n  canonicalUrlRelative: \"/tos\",\n});\n\nconst TOS = () => {\n  return (\n    <main className=\"max-w-xl mx-auto\">\n      <div className=\"p-5\">\n        <Link href=\"/\" className=\"btn btn-ghost\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"w-5 h-5\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M15 10a.75.75 0 01-.75.75H7.612l2.158 1.96a.75.75 0 11-1.04 1.08l-3.5-3.25a.75.75 0 010-1.08l3.5-3.25a.75.75 0 111.04 1.08L7.612 9.25h6.638A.75.75 0 0115 10z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          Back\n        </Link>\n        <h1 className=\"text-3xl font-extrabold pb-6\">\n          Terms and Conditions for {config.appName}\n        </h1>\n\n        <pre\n          className=\"leading-relaxed whitespace-pre-wrap\"\n          style={{ fontFamily: \"sans-serif\" }}\n        >\n          {`Last Updated: September 26, 2023\n\nWelcome to ShipFast!\n\nThese Terms of Service (\"Terms\") govern your use of the ShipFast website at https://shipfa.st (\"Website\") and the services provided by ShipFast. By using our Website and services, you agree to these Terms.\n\n1. Description of ShipFast\n\nShipFast is a platform that offers a JavaScript code boilerplate to assist entrepreneurs in launching their startups more efficiently.\n\n2. Ownership and Usage Rights\n\nWhen you purchase a package from ShipFast, you gain the right to download and use the code provided for creating applications. You own the code you create but do not have the right to resell it. We offer a full refund within 7 days of purchase, as specified in our refund policy.\n\n3. User Data and Privacy\n\nWe collect and store user data, including name, email, and payment information, as necessary to provide our services. For details on how we handle your data, please refer to our Privacy Policy at https://shipfa.st/privacy-policy.\n\n4. Non-Personal Data Collection\n\nWe use web cookies to collect non-personal data for the purpose of improving our services and user experience.\n\n5. Governing Law\n\nThese Terms are governed by the laws of France.\n\n6. Updates to the Terms\n\nWe may update these Terms from time to time. Users will be notified of any changes via email.\n\nFor any questions or concerns regarding these Terms of Service, please contact us at marc@shipfa.st.\n\nThank you for using ShipFast!`}\n        </pre>\n      </div>\n    </main>\n  );\n};\n\nexport default TOS;\n"
    },
    {
      "filepath": "app/test-order-questions/page.tsx",
      "content": "'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport OrderQuestionComponent from '@/app/features/quiz/components/question-types/OrderQuestionComponent';\nimport { Quiz, AnyQuestion, OrderQuestion, OrderQuestionAnswer } from '@/app/types/quiz'; // Added Quiz, AnyQuestion\nimport { OrderController } from '@/app/features/quiz/controllers/OrderController';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ChevronLeft, ChevronRight, CheckCircle, XCircle } from 'lucide-react';\n\n// Updated sampleOrderQuestions to conform to OrderQuestion type\nconst sampleOrderQuestions: OrderQuestion[] = [\n  {\n    id: 'order_q1_simple', // Changed from question_id\n    quiz_tag: 'demo_quiz', // Changed from quiz_id\n    type: 'order', // Changed from question_type\n    question: 'Arrange these historical events in chronological order:', // Changed from text\n    items: [\n      { item_id: 'event_ww1', text: 'World War I' },\n      { item_id: 'event_moon', text: 'Moon Landing' },\n      { item_id: 'event_fall_berlin_wall', text: 'Fall of the Berlin Wall' },\n    ],\n    correctOrder: ['event_ww1', 'event_moon', 'event_fall_berlin_wall'],\n    points: 10,\n    explanation: 'Understanding the timeline of major world events is key.', // Was feedback.general_feedback\n    feedback_correct: 'Excellent! You know your history.', // Was feedback.correct_feedback\n    feedback_incorrect: 'Not quite. Review the timeline of these events.', // Was feedback.incorrect_feedback\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    difficulty: 'medium',\n    // 'tags' and 'config' removed as they are not in OrderQuestion type\n  },\n  {\n    id: 'order_q2_distractors',\n    quiz_tag: 'demo_quiz',\n    type: 'order',\n    question: 'Order the first four planets from the Sun, starting with the closest.',\n    items: [\n      { item_id: 'planet_mercury', text: 'Mercury' },\n      { item_id: 'planet_venus', text: 'Venus' },\n      { item_id: 'planet_earth', text: 'Earth' },\n      { item_id: 'planet_mars', text: 'Mars' },\n      { item_id: 'distractor_jupiter', text: 'Jupiter (Distractor)' },\n      { item_id: 'distractor_moon', text: 'Moon (Distractor)' },\n    ],\n    correctOrder: ['planet_mercury', 'planet_venus', 'planet_earth', 'planet_mars'],\n    points: 15,\n    explanation: 'The solar system has a fascinating order.',\n    feedback_correct: 'Perfect! You know your planets.',\n    feedback_incorrect: 'Check your astronomy notes! Some of these are further out or not planets.',\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    difficulty: 'medium',\n  },\n  {\n    id: 'order_q3_similar_text',\n    quiz_tag: 'demo_quiz',\n    type: 'order',\n    question: 'Arrange the steps to make a cup of tea (simplified).',\n    items: [\n      { item_id: 'tea_boil', text: 'Boil water' },\n      { item_id: 'tea_pour', text: 'Pour water into cup with tea bag' },\n      { item_id: 'tea_steep', text: 'Let tea steep' },\n      { item_id: 'tea_add_milk', text: 'Add milk/sugar (optional)' },\n      { item_id: 'distractor_drink_cold_water', text: 'Drink cold water (Distractor)' },\n    ],\n    correctOrder: ['tea_boil', 'tea_pour', 'tea_steep', 'tea_add_milk'],\n    points: 10,\n    explanation: 'Making tea is a simple process.',\n    feedback_correct: 'Great! Enjoy your virtual tea.',\n    feedback_incorrect: 'Think about the logical sequence of making tea.',\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    difficulty: 'easy',\n  },\n  {\n    id: 'order_q4_long_sequence',\n    quiz_tag: 'demo_quiz',\n    type: 'order',\n    question: 'Order the stages of cellular respiration (simplified to 5 steps).',\n    items: [\n      { item_id: 'cr_glycolysis', text: 'Glycolysis' },\n      { item_id: 'cr_pyruvate_oxidation', text: 'Pyruvate Oxidation' },\n      { item_id: 'cr_citric_acid_cycle', text: 'Citric Acid Cycle (Krebs Cycle)' },\n      { item_id: 'cr_electron_transport_chain', text: 'Electron Transport Chain' },\n      { item_id: 'cr_oxidative_phosphorylation', text: 'Oxidative Phosphorylation (Final Stage)' },\n      { item_id: 'distractor_photosynthesis', text: 'Photosynthesis (Distractor)' },\n    ],\n    correctOrder: [\n      'cr_glycolysis', \n      'cr_pyruvate_oxidation', \n      'cr_citric_acid_cycle', \n      'cr_electron_transport_chain', \n      'cr_oxidative_phosphorylation'\n    ],\n    points: 20,\n    explanation: 'Cellular respiration is fundamental to energy production in cells. This is a simplified 5-step model.',\n    feedback_correct: 'Excellent! You have a good grasp of cellular respiration.',\n    feedback_incorrect: 'Review the stages of cellular respiration. It\u2019s a complex but logical process.',\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    difficulty: 'hard',\n  },\n];\n\nconst TestOrderQuestionsPage = () => {\n  const [quizData, setQuizData] = useState<Quiz | null>(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState<Record<string, OrderQuestionAnswer>>({});\n  const [isSubmitted, setIsSubmitted] = useState<Record<string, boolean>>({});\n  const [scores, setScores] = useState<Record<string, number | null>>({});\n  const [correctnessMap, setCorrectnessMap] = useState<Record<string, Record<string, boolean | null>>>({});\n\n  useEffect(() => {\n    // Simulate loading quiz data\n    const loadedQuiz: Quiz = {\n      id: 'demo_quiz',\n      title: 'Order Questions Test Suite',\n      description: 'A collection of order questions for testing.',\n      difficulty: 'medium',\n      quiz_topic: 'testing',\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      questions: sampleOrderQuestions as AnyQuestion[], // Cast to AnyQuestion[]\n    };\n    setQuizData(loadedQuiz);\n\n    // Initialize answers\n    const initialAnswers: Record<string, OrderQuestionAnswer> = {};\n    loadedQuiz.questions.forEach(q => {\n      if (q.type === 'order') {\n        const orderQ = q as OrderQuestion;\n        const controller = new OrderController(orderQ);\n        initialAnswers[orderQ.id] = controller.createInitialAnswer();\n      }\n    });\n    setAnswers(initialAnswers);\n  }, []);\n\n  const handleAnswerSelect = useCallback((questionId: string, answer: OrderQuestionAnswer) => {\n    setAnswers(prev => ({ ...prev, [questionId]: answer }));\n    // If you had auto-validation or immediate feedback logic, it would go here\n    // For now, submission is manual\n  }, []);\n\n  const handleSubmit = (questionId: string) => {\n    if (!quizData) return;\n    const question = quizData.questions.find(q => q.id === questionId) as OrderQuestion | undefined;\n    if (question && question.type === 'order') {\n      const controller = new OrderController(question);\n      const answer = answers[questionId];\n      const score = controller.getScore(answer);\n      const currentCorrectnessMap = controller.getCorrectnessMap(answer);\n      \n      setScores(prev => ({ ...prev, [questionId]: score }));\n      setCorrectnessMap(prev => ({ ...prev, [questionId]: currentCorrectnessMap }));\n      setIsSubmitted(prev => ({ ...prev, [questionId]: true }));\n    }\n  };\n\n  const currentQuestion = quizData?.questions[currentQuestionIndex] as OrderQuestion | undefined;\n\n  if (!quizData || !currentQuestion || currentQuestion.type !== 'order') {\n    return <div>Loading or invalid question type...</div>;\n  }\n\n  const controller = new OrderController(currentQuestion);\n  const numSlots = controller.getSlotCount();\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"container mx-auto p-4 min-h-screen flex flex-col items-center\">\n        <Card className=\"w-full max-w-2xl\">\n          <CardHeader>\n            <CardTitle>Test Order Question ({currentQuestionIndex + 1} / {quizData.questions.length})</CardTitle>\n            <p className=\"text-sm text-muted-foreground\">{currentQuestion.question}</p>\n            <p className=\"text-sm text-muted-foreground\">Points: {currentQuestion.points}</p>\n          </CardHeader>\n          <CardContent>\n            <OrderQuestionComponent\n              question={currentQuestion}\n              onAnswerSelect={(answer) => handleAnswerSelect(currentQuestion.id, answer as OrderQuestionAnswer)}\n              initialAnswer={answers[currentQuestion.id]}\n              isSubmitted={isSubmitted[currentQuestion.id] || false}\n              isQuizReviewMode={isSubmitted[currentQuestion.id] || false} // Simulate review mode post-submit\n              correctnessMap={correctnessMap[currentQuestion.id]}\n            />\n            {isSubmitted[currentQuestion.id] && (\n              <div className=\"mt-4 p-3 rounded-md bg-gray-100 dark:bg-gray-800\">\n                <h3 className=\"font-semibold mb-2\">Feedback:</h3>\n                {scores[currentQuestion.id] !== null && (\n                  <p className=\"mb-1\">\n                    Your score: {scores[currentQuestion.id]} / {currentQuestion.points}\n                    {scores[currentQuestion.id] === currentQuestion.points ? \n                      <CheckCircle className=\"inline ml-2 h-5 w-5 text-green-500\" /> : \n                      <XCircle className=\"inline ml-2 h-5 w-5 text-red-500\" />}\n                  </p>\n                )}\n                <p className=\"text-sm\">\n                  {scores[currentQuestion.id] === currentQuestion.points \n                    ? currentQuestion.feedback_correct \n                    : currentQuestion.feedback_incorrect}\n                </p>\n                {currentQuestion.explanation && <p className=\"text-xs mt-1 italic\">{currentQuestion.explanation}</p>}\n                 <div className=\"mt-2\">\n                  <h4 className=\"text-sm font-semibold\">Correct Order:</h4>\n                  <ul className=\"list-decimal list-inside text-sm\">\n                    {currentQuestion.correctOrder.map((itemId) => {\n                      const item = currentQuestion.items.find(i => i.item_id === itemId);\n                      return <li key={itemId}>{item ? item.text : 'Unknown item'}</li>;\n                    })}\n                  </ul>\n                </div>\n              </div>\n            )}\n          </CardContent>\n          <CardFooter className=\"flex flex-col items-center space-y-4\">\n            {!isSubmitted[currentQuestion.id] && (\n              <Button onClick={() => handleSubmit(currentQuestion.id)} className=\"w-full\">\n                Submit Answer\n              </Button>\n            )}\n            {isSubmitted[currentQuestion.id] && (\n               <Button onClick={() => handleSubmit(currentQuestion.id)} className=\"w-full\" variant=\"outline\" disabled>\n                Answer Submitted\n              </Button>\n            )}\n            <div className=\"flex justify-between w-full\">\n              <Button \n                onClick={() => setCurrentQuestionIndex(prev => Math.max(0, prev - 1))} \n                disabled={currentQuestionIndex === 0}\n                variant=\"outline\"\n              >\n                <ChevronLeft className=\"mr-2 h-4 w-4\" /> Previous\n              </Button>\n              <Button \n                onClick={() => setCurrentQuestionIndex(prev => Math.min(quizData.questions.length - 1, prev + 1))} \n                disabled={currentQuestionIndex === quizData.questions.length - 1}\n                variant=\"outline\"\n              >\n                Next <ChevronRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </div>\n          </CardFooter>\n        </Card>\n        \n        {/* Debugging section */}\n        <Card className=\"w-full max-w-2xl mt-6\">\n          <CardHeader><CardTitle>Debug State</CardTitle></CardHeader>\n          <CardContent className=\"text-xs space-y-2\">\n            <div><strong>Current Answer:</strong> <pre>{JSON.stringify(answers[currentQuestion.id], null, 2)}</pre></div>\n            <div><strong>Is Submitted:</strong> {isSubmitted[currentQuestion.id]?.toString() || 'false'}</div>\n            <div><strong>Score:</strong> {scores[currentQuestion.id]?.toString() ?? 'N/A'}</div>\n            <div><strong>Correctness Map:</strong> <pre>{JSON.stringify(correctnessMap[currentQuestion.id], null, 2)}</pre></div>\n            <div><strong>Available Items (for D&D reference):</strong>\n              <ul>\n                {currentQuestion.items\n                  .filter(item => !Object.values(answers[currentQuestion.id] || {}).includes(item.item_id))\n                  .map(item => <li key={item.item_id}>{item.text} ({item.item_id})</li>)\n                }\n              </ul>\n            </div>\n            <div><strong>Slots (Correct Order for reference):</strong>\n                <ol>\n                    {currentQuestion.correctOrder.map((itemId, index) => {\n                        const item = currentQuestion.items.find(i => i.item_id === itemId);\n                        return <li key={itemId}>Slot {index}: {item?.text} ({itemId})</li>\n                    })}\n                </ol>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default TestOrderQuestionsPage;\n\n// Ensure all questions are processed for initial answers\n// This was a small bug fix for the initialAnswers setup.\n// The original code was fine, but this is a slightly more robust way to ensure all questions are processed.\n// No, the original code was fine. This comment is not needed.\n"
    },
    {
      "filepath": "app/components/QuizCTA.tsx",
      "content": "import Link from 'next/link';\n\nconst QuizCTA = () => {\n  return (\n    <section className=\"py-12 md:py-20 bg-gradient-to-r from-purple-600 to-blue-600 text-white\">\n      <div className=\"container mx-auto px-6 text-center\">\n        <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">\n          Up for a Challenge? Test Your Skills!\n        </h2>\n        <p className=\"mb-8 text-lg md:text-xl opacity-90 max-w-2xl mx-auto\">\n          Our brand new interactive quizzes are here! Start with our engaging Single Selection questions\n          and prove your expertise. More question types are on the way. Dare to see your score?\n        </p>\n        <div className=\"flex flex-col md:flex-row justify-center gap-4\">\n          <Link\n            href=\"/quiz-test/azure-a102\" // Assuming 'azure-a102' is a valid quiz ID\n            className=\"inline-block bg-white hover:bg-gray-100 text-purple-700 font-bold py-3 px-10 rounded-lg text-lg transition duration-300 ease-in-out transform hover:scale-105 shadow-lg\"\n          >\n            Take the Challenge!\n          </Link>\n          <Link\n            href=\"/quiz-type-filters\"\n            className=\"inline-block bg-blue-800 hover:bg-blue-900 text-white font-bold py-3 px-10 rounded-lg text-lg transition duration-300 ease-in-out transform hover:scale-105 shadow-lg\"\n          >\n            Filtered Quizzes\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default QuizCTA; "
    },
    {
      "filepath": "app/question-types-demo/type-client-page.tsx",
      "content": ""
    },
    {
      "filepath": "app/question-types-demo/[type]/page.tsx",
      "content": "'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react'; // Added useCallback\nimport { AnyQuestion, MultiChoiceQuestion, SingleSelectionQuestion, QuestionType, DropdownSelectionQuestion, OrderQuestion } from '../../types/quiz'; // Added OrderQuestion\nimport SingleSelectionComponent from '../../features/quiz/components/question-types/SingleSelectionComponent';\nimport MultiChoiceComponent from '../../features/quiz/components/question-types/MultiChoiceComponent';\nimport DropdownSelectionComponent from '../../features/quiz/components/question-types/DropdownSelectionComponent'; // Import DropdownSelectionComponent\nimport OrderQuestionComponent from '../../features/quiz/components/question-types/OrderQuestionComponent'; // Import OrderQuestionComponent\nimport { fetchRandomQuestionByTypeAndFilters } from '../../lib/supabaseQuizService'; // Import the new service function\n\nexport default function QuestionTypeDemo({ params }: { params: { type: string } }) {\n  const [currentQuestion, setCurrentQuestion] = useState<AnyQuestion | null>(null);\n  const [isLoading, setIsLoading] = useState(true); // Added isLoading state\n  const [error, setError] = useState<string | null>(null); // Added error state\n  const [selectedOption, setSelectedOption] = useState<string | null>(null); // single_selection\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]); // multi\n  const [dropdownSelections, setDropdownSelections] = useState<Record<string, string | null>>({}); // dropdown_selection\n  const [orderedItems, setOrderedItems] = useState<string[]>([]); // order\n  const [isSubmittedDemo, setIsSubmittedDemo] = useState(false);\n  const [showCorrectAnswerDemo, setShowCorrectAnswerDemo] = useState(false);\n\n  const [filters, setFilters] = useState({\n    difficulty: 'all',\n    tags: [] as string[]\n  });\n  const questionType = params.type as QuestionType;\n  \n  const loadQuestion = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setCurrentQuestion(null); // Clear previous question\n    try {\n      const question = await fetchRandomQuestionByTypeAndFilters(questionType, filters);\n      if (question) {\n        setCurrentQuestion(question);\n      } else {\n        setError('No question found matching your criteria.');\n      }\n    } catch (err: any) {\n      console.error(\"Error fetching question:\", err);\n      setError(err.message || 'Failed to fetch question.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [questionType, filters]); // Added dependencies to useCallback\n\n  useEffect(() => {\n    loadQuestion();\n    // Reset selections when question or filters change\n    setSelectedOption(null);\n    setSelectedOptions([]);\n    setDropdownSelections({}); // Reset dropdown selections\n    setOrderedItems([]); // Reset order selections\n    setIsSubmittedDemo(false);\n    setShowCorrectAnswerDemo(false);\n  }, [loadQuestion]); // useEffect now depends on loadQuestion\n\n  const handleSingleSelect = (optionId: string) => {\n    if (!isSubmittedDemo) {\n      setSelectedOption(optionId);\n    }\n  };\n\n  const handleMultiSelect = (optionIds: string[]) => {\n    if (!isSubmittedDemo) {\n      setSelectedOptions(optionIds);\n    }\n  };\n\n  const handleDropdownSelect = (selections: Record<string, string | null>) => {\n    if (!isSubmittedDemo) {\n      setDropdownSelections(selections);\n    }\n  };\n  \n  const handleOrderSelect = (itemIds: string[]) => {\n    if (!isSubmittedDemo) {\n      setOrderedItems(itemIds);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-custom-light-bg flex items-center justify-center\">\n        <p className=\"text-xl text-custom-dark-blue\">Loading question...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-custom-light-bg flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-red-600 mb-4\">Error</h1>\n          <p className=\"text-lg text-gray-700\">{error}</p>\n          <button \n            onClick={loadQuestion} \n            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 mr-2\"\n          >\n            Try Again\n          </button>\n          <a\n            href=\"/question-types\"\n            className=\"mt-6 inline-block px-6 py-3 bg-gray-600 text-white font-medium rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Back to Question Types\n          </a>\n        </div>\n      </div>\n    );\n  }\n  \n  if (!currentQuestion) {\n    return (\n      <div className=\"min-h-screen bg-custom-light-bg flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-red-600 mb-4\">No Question Available</h1>\n          <p className=\"text-lg text-gray-700\">\n            Could not load a question of type \"{questionType}\" with the current filters (Difficulty: {filters.difficulty}, Tags: {filters.tags.join(', ') || 'None'}).\n          </p>\n          <button \n            onClick={loadQuestion} \n            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 mr-2\"\n          >\n            Try Fetching Again\n          </button>\n          <a\n            href=\"/question-types\"\n            className=\"mt-6 inline-block px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            Back to Question Types\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  const pageTitle = currentQuestion \n    ? `${currentQuestion.type.replace('_', ' ').replace(/\\\\b\\\\w/g, l => l.toUpperCase())} Question Demo` \n    : 'Question Demo';\n\n  return (\n    <div className=\"min-h-screen bg-custom-light-bg py-12 px-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-center mb-8 text-custom-dark-blue\">\n          {pageTitle}\n        </h1>\n        \n        {/* Filter section */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          <div className=\"flex flex-col md:flex-row justify-between mb-4\">\n            <h2 className=\"text-xl font-semibold mb-2 md:mb-0 text-custom-primary\">Filters</h2>\n            <button \n              onClick={() => setFilters({ difficulty: 'all', tags: [] })}\n              className=\"text-sm text-blue-600 hover:text-blue-800\"\n            >\n              Reset Filters\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Difficulty filter */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Difficulty</label>\n              <select\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                value={filters.difficulty}\n                onChange={(e) => setFilters(prev => ({ ...prev, difficulty: e.target.value }))}\n              >\n                <option value=\"all\">All difficulties</option>\n                <option value=\"easy\">Easy</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"hard\">Hard</option>\n              </select>\n            </div>\n            \n            {/* Tags filter - simplified with checkboxes */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Tags</label>\n              <div className=\"space-x-4\">\n                {['question-types-demo', 'cloud-services'].map(tag => (\n                  <label key={tag} className=\"inline-flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-4 w-4 text-indigo-600\"\n                      checked={filters.tags.includes(tag)}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setFilters(prev => ({ ...prev, tags: [...prev.tags, tag] }));\n                        } else {\n                          setFilters(prev => ({ \n                            ...prev, \n                            tags: prev.tags.filter(t => t !== tag) \n                          }));\n                        }\n                      }}\n                    />\n                    <span className=\"ml-2 text-gray-700\">{tag}</span>\n                  </label>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4 text-custom-primary\">Instructions</h2>\n          <p className=\"text-gray-700\">\n            {currentQuestion.type === 'single_selection' && 'Select the correct answer from the options below.'}\n            {currentQuestion.type === 'multi' && `Select all correct answers from the options below. (Correct: ${(currentQuestion as MultiChoiceQuestion).correctAnswerOptionIds.length})`}\n            {currentQuestion.type === 'dropdown_selection' && 'Select the correct option for each placeholder in the text.'}\n            {/* Add instructions for other question types as they are implemented */}\n          </p>\n        </div>\n        \n        {/* Question display area */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          {currentQuestion.type === 'single_selection' && (\n            <SingleSelectionComponent\n              question={currentQuestion as SingleSelectionQuestion}\n              selectedOptionId={selectedOption}\n              onAnswerSelect={handleSingleSelect}\n              isSubmitted={isSubmittedDemo}\n              showCorrectAnswer={showCorrectAnswerDemo}\n            />\n          )}\n          {currentQuestion.type === 'multi' && (\n            <MultiChoiceComponent\n              question={currentQuestion as MultiChoiceQuestion}\n              selectedOptionIds={selectedOptions}\n              onAnswerSelect={handleMultiSelect}\n              isSubmitted={isSubmittedDemo}\n              showCorrectAnswer={showCorrectAnswerDemo}\n            />\n          )}\n          {currentQuestion.type === 'dropdown_selection' && (\n            <DropdownSelectionComponent\n              question={currentQuestion as DropdownSelectionQuestion}\n              selectedAnswer={dropdownSelections} // Pass current dropdown selections\n              onAnswerSelect={handleDropdownSelect} // Handle updates to dropdown selections\n              isSubmitted={isSubmittedDemo}\n              showCorrectAnswer={showCorrectAnswerDemo}\n              validateOnComplete={true} // Add the new prop to wait for all dropdowns to be filled\n            />\n          )}\n          {currentQuestion.type === 'order' && (\n            <OrderQuestionComponent\n              question={currentQuestion as OrderQuestion}\n              onAnswerSelect={handleOrderSelect}\n              userAnswer={orderedItems}\n              isSubmitted={isSubmittedDemo}\n              showCorrectAnswer={showCorrectAnswerDemo}\n              isQuizReviewMode={false}\n              validateOnComplete={true}\n            />\n          )}\n          {/* Add other question type components here as needed */}\n\n          {/* Demo Controls */}\n          <div className=\"mt-6 pt-6 border-t border-gray-200\">\n            <h3 className=\"text-lg font-semibold mb-3 text-custom-dark-blue\">Demo Controls</h3>\n            <div className=\"flex flex-wrap gap-4 items-center\">\n              <button\n                onClick={() => setIsSubmittedDemo(!isSubmittedDemo)}\n                className={`px-4 py-2 rounded-md text-white font-medium transition-colors text-sm ${\n                  isSubmittedDemo ? 'bg-yellow-500 hover:bg-yellow-600' : 'bg-blue-500 hover:bg-blue-600'\n                }`}\n              >\n                {isSubmittedDemo ? 'Unlock Answers (View Mode)' : 'Lock Answers (Submit)'}\n              </button>\n              <button\n                onClick={() => setShowCorrectAnswerDemo(!showCorrectAnswerDemo)}\n                className={`px-4 py-2 rounded-md text-white font-medium transition-colors text-sm ${\n                  showCorrectAnswerDemo ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'\n                }`}\n              >\n                {showCorrectAnswerDemo ? 'Hide Feedback' : 'Show Feedback'}\n              </button>\n            </div>\n            {isSubmittedDemo && (\n              <p className=\"mt-3 text-xs text-gray-600\">\n                Answers are {selectedOption || selectedOptions.length > 0 || Object.values(dropdownSelections).some(s => s !== null) ? 'locked' : 'not selected but locked'}. Toggle \"Show Feedback\" to see correctness.\n              </p>\n            )}\n             {!isSubmittedDemo && (\n              <p className=\"mt-3 text-xs text-gray-600\">\n                Select an answer. Then \"Lock Answers\" to simulate submission.\n              </p>\n            )}\n          </div>\n        </div>\n        \n        {/* Navigation */}\n        <div className=\"mt-8 text-center\">\n          <a\n            href=\"/question-types\"\n            className=\"px-6 py-3 bg-gray-600 text-white font-medium rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Back to Question Types\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
    },
    {
      "filepath": "app/signin/layout.tsx",
      "content": "import { ReactNode } from \"react\";\nimport config from \"@/config\";\nimport { getSEOTags } from \"@/libs/seo\";\n\nexport const metadata = getSEOTags({\n  title: `Sign-in to ${config.appName}`,\n  canonicalUrlRelative: \"/auth/signin\",\n});\n\nexport default function Layout({ children }: { children: ReactNode }) {\n  return <>{children}</>;\n}\n"
    },
    {
      "filepath": "app/signin/page.tsx",
      "content": "\"use client\";\n\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport { createClientComponentClient } from \"@supabase/auth-helpers-nextjs\";\nimport { Provider } from \"@supabase/supabase-js\";\nimport toast from \"react-hot-toast\";\nimport config from \"@/config\";\n\n// This a login/singup page for Supabase Auth.\n// Successfull login redirects to /api/auth/callback where the Code Exchange is processed (see app/api/auth/callback/route.js).\nexport default function Login() {\n  const supabase = createClientComponentClient();\n  const [email, setEmail] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isDisabled, setIsDisabled] = useState<boolean>(false);\n\n  const handleSignup = async (\n    e: any,\n    options: {\n      type: string;\n      provider?: Provider;\n    }\n  ) => {\n    e?.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      const { type, provider } = options;\n      const redirectURL = window.location.origin + \"/api/auth/callback\";\n\n      if (type === \"oauth\") {\n        await supabase.auth.signInWithOAuth({\n          provider,\n          options: {\n            redirectTo: redirectURL,\n          },\n        });\n      } else if (type === \"magic_link\") {\n        await supabase.auth.signInWithOtp({\n          email,\n          options: {\n            emailRedirectTo: redirectURL,\n          },\n        });\n\n        toast.success(\"Check your emails!\");\n\n        setIsDisabled(true);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <main className=\"p-8 md:p-24\" data-theme={config.colors.theme}>\n      <div className=\"text-center mb-4\">\n        <Link href=\"/\" className=\"btn btn-ghost btn-sm\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"w-5 h-5\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M15 10a.75.75 0 01-.75.75H7.612l2.158 1.96a.75.75 0 11-1.04 1.08l-3.5-3.25a.75.75 0 010-1.08l3.5-3.25a.75.75 0 111.04 1.08L7.612 9.25h6.638A.75.75 0 0115 10z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          Home\n        </Link>\n      </div>\n      <h1 className=\"text-3xl md:text-4xl font-extrabold tracking-tight text-center mb-12\">\n        Sign-in to {config.appName}{\" \"}\n      </h1>\n\n      <div className=\"space-y-8 max-w-xl mx-auto\">\n        <button\n          className=\"btn btn-block\"\n          onClick={(e) =>\n            handleSignup(e, { type: \"oauth\", provider: \"google\" })\n          }\n          disabled={isLoading}\n        >\n          {isLoading ? (\n            <span className=\"loading loading-spinner loading-xs\"></span>\n          ) : (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"w-6 h-6\"\n              viewBox=\"0 0 48 48\"\n            >\n              <path\n                fill=\"#FFC107\"\n                d=\"M43.611 20.083H42V20H24v8h11.303c-1.649 4.657-6.08 8-11.303 8-6.627 0-12-5.373-12-12s5.373-12 12-12c3.059 0 5.842 1.154 7.961 3.039l5.657-5.657C34.046 6.053 29.268 4 24 4 12.955 4 4 12.955 4 24s8.955 20 20 20 20-8.955 20-20c0-1.341-.138-2.65-.389-3.917z\"\n              />\n              <path\n                fill=\"#FF3D00\"\n                d=\"m6.306 14.691 6.571 4.819C14.655 15.108 18.961 12 24 12c3.059 0 5.842 1.154 7.961 3.039l5.657-5.657C34.046 6.053 29.268 4 24 4 16.318 4 9.656 8.337 6.306 14.691z\"\n              />\n              <path\n                fill=\"#4CAF50\"\n                d=\"M24 44c5.166 0 9.86-1.977 13.409-5.192l-6.19-5.238A11.91 11.91 0 0 1 24 36c-5.202 0-9.619-3.317-11.283-7.946l-6.522 5.025C9.505 39.556 16.227 44 24 44z\"\n              />\n              <path\n                fill=\"#1976D2\"\n                d=\"M43.611 20.083H42V20H24v8h11.303a12.04 12.04 0 0 1-4.087 5.571l.003-.002 6.19 5.238C36.971 39.205 44 34 44 24c0-1.341-.138-2.65-.389-3.917z\"\n              />\n            </svg>\n          )}\n          Sign-up with Google\n        </button>\n\n        <div className=\"divider text-xs text-base-content/50 font-medium\">\n          OR\n        </div>\n\n        <form\n          className=\"form-control w-full space-y-4\"\n          onSubmit={(e) => handleSignup(e, { type: \"magic_link\" })}\n        >\n          <input\n            required\n            type=\"email\"\n            value={email}\n            autoComplete=\"email\"\n            placeholder=\"tom@cruise.com\"\n            className=\"input input-bordered w-full placeholder:opacity-60\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <button\n            className=\"btn btn-primary btn-block\"\n            disabled={isLoading || isDisabled}\n            type=\"submit\"\n          >\n            {isLoading && (\n              <span className=\"loading loading-spinner loading-xs\"></span>\n            )}\n            Send Magic Link\n          </button>\n        </form>\n      </div>\n    </main>\n  );\n}\n"
    },
    {
      "filepath": "app/lib/supabaseQuizService.ts",
      "content": "import { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { \n  BaseQuestion, \n  AnyQuestion, \n  SingleSelectionQuestion, \n  MultiChoiceQuestion,\n  SelectionOption,\n  DragAndDropTarget,\n  DragAndDropOption,\n  DragAndDropCorrectPair,\n  DragAndDropQuestion,\n  DropdownOption,\n  DropdownPlaceholderTarget,\n  DropdownSelectionQuestion,\n  OrderQuestion,\n  OrderItem,\n  Quiz\n} from '../types/quiz';\n\n// Initialize Supabase client\n// Using hardcoded values from .env file for debugging\nconst supabaseUrl = \"https://rvwvnralrlsdtugtgict.supabase.co\";\nconst supabaseServiceRoleKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ2d3ZucmFscmxzZHR1Z3RnaWN0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NTQ0NzM0NCwiZXhwIjoyMDYxMDIzMzQ0fQ.hFRjn5zq24WmKEoCLbWDRUY6dUdEjlPS-c4OemCaFM4\";\n\nconsole.log('Supabase Environment Variables:');\nconsole.log('URL:', supabaseUrl ? 'Defined' : 'Undefined');\nconsole.log('Service Role Key:', supabaseServiceRoleKey ? 'Defined' : 'Undefined');\n\n// No need to check for undefined since we're using hardcoded values\n// if (!supabaseUrl || !supabaseServiceRoleKey) {\n//   throw new Error('Supabase URL or Service Role Key is not defined in environment variables.');\n// }\n\nconst supabase: SupabaseClient = createClient(supabaseUrl, supabaseServiceRoleKey, {\n  auth: { persistSession: false } // Recommended for server-side clients\n});\n\nexport async function enrichQuestionWithDetails(\n  baseQuestion: BaseQuestion\n): Promise<AnyQuestion | null> {\n  if (baseQuestion.type === 'single_selection') {\n    try {\n      // Fetch options for the single selection question\n      const { data: optionsData, error: optionsError } = await supabase\n        .from('single_selection_options')\n        .select('option_id, text')\n        .eq('question_id', baseQuestion.id);\n\n      if (optionsError) {\n        console.error(`Error fetching options for question ${baseQuestion.id}:`, optionsError.message);\n        return null;\n      }\n\n      // Fetch the correct answer for the single selection question\n      const { data: correctAnswerData, error: correctAnswerError } = await supabase\n        .from('single_selection_correct_answer')\n        .select('option_id')\n        .eq('question_id', baseQuestion.id)\n        .single(); // Expecting only one row\n\n      if (correctAnswerError) {\n        // .single() throws an error if no row is found, or more than one is found.\n        // We can check the error code/details if needed, e.g. PostgrestError PGRST116 (0 rows)\n        if (correctAnswerError.code === 'PGRST116') {\n            console.warn(`No correct answer found for single_selection question ${baseQuestion.id}. (PGRST116)`);\n        } else {\n            console.error(`Error fetching correct answer for question ${baseQuestion.id}:`, correctAnswerError.message);\n        }\n        return null;\n      }\n\n      if (!correctAnswerData) { // Should be redundant if .single() succeeded, but good for safety\n        console.warn(`No correct answer data returned for single_selection question ${baseQuestion.id} despite no error.`);\n        return null;\n      }\n\n      const typedOptions: SelectionOption[] = (optionsData || []).map((opt: any) => ({\n        option_id: opt.option_id,\n        text: opt.text,\n      }));\n\n      const correctAnswerOptionId = correctAnswerData.option_id;\n\n      // It's possible optionsData is empty, which might be valid for a question under construction.\n      // However, a correct answer ID must exist.\n      if (!correctAnswerOptionId) {\n        console.warn(`Correct answer option_id missing after fetch for single_selection question ${baseQuestion.id}`);\n        return null; // Critical data missing\n      }\n      \n      const singleSelectionQuestion: SingleSelectionQuestion = {\n        ...baseQuestion,\n        type: 'single_selection',\n        options: typedOptions,\n        correctAnswerOptionId: correctAnswerOptionId,\n      };\n      return singleSelectionQuestion;\n\n    } catch (error: any) {\n      console.error(`Unexpected error enriching single_selection question ${baseQuestion.id}:`, error.message || error);\n      return null;\n    }\n  } else if (baseQuestion.type === 'multi') {\n    try {\n      // Fetch options for the multi-choice question\n      const { data: optionsData, error: optionsError } = await supabase\n        .from('multi_options')\n        .select('option_id, text')\n        .eq('question_id', baseQuestion.id);\n\n      if (optionsError) {\n        console.error(`Error fetching options for multi question ${baseQuestion.id}:`, optionsError.message);\n        return null;\n      }\n\n      // Fetch the correct answers for the multi-choice question\n      const { data: correctAnswersData, error: correctAnswersError } = await supabase\n        .from('multi_correct_answers')\n        .select('option_id')\n        .eq('question_id', baseQuestion.id);\n\n      if (correctAnswersError) {\n        console.error(`Error fetching correct answers for multi question ${baseQuestion.id}:`, correctAnswersError.message);\n        return null;\n      }\n\n      const typedOptions: SelectionOption[] = (optionsData || []).map((opt: any) => ({\n        option_id: opt.option_id,\n        text: opt.text,\n      }));\n\n      const correctAnswerOptionIds = (correctAnswersData || []).map((ans: any) => ans.option_id);\n\n      if (!correctAnswerOptionIds.length) {\n        console.warn(`No correct answer options found for multi question ${baseQuestion.id}`);\n        return null; // Critical data missing\n      }\n      \n      const multiChoiceQuestion: MultiChoiceQuestion = {\n        ...baseQuestion,\n        type: 'multi',\n        options: typedOptions,\n        correctAnswerOptionIds: correctAnswerOptionIds,\n      };\n      return multiChoiceQuestion;\n\n    } catch (error: any) {\n      console.error(`Unexpected error enriching multi question ${baseQuestion.id}:`, error.message || error);\n      return null;\n    }\n  } else if (baseQuestion.type === 'drag_and_drop') {\n    try {\n      // Fetch targets for the drag and drop question\n      const { data: targetsData, error: targetsError } = await supabase\n        .from('drag_and_drop_targets')\n        .select('target_id, text')\n        .eq('question_id', baseQuestion.id);\n\n      if (targetsError) {\n        console.error(`Error fetching targets for drag_and_drop question ${baseQuestion.id}:`, targetsError.message);\n        return null;\n      }\n\n      // Fetch options for the drag and drop question\n      const { data: optionsData, error: optionsError } = await supabase\n        .from('drag_and_drop_options')\n        .select('option_id, text')\n        .eq('question_id', baseQuestion.id);\n\n      if (optionsError) {\n        console.error(`Error fetching options for drag_and_drop question ${baseQuestion.id}:`, optionsError.message);\n        return null;\n      }\n\n      // Fetch correct pairs for the drag and drop question\n      const { data: correctPairsData, error: correctPairsError } = await supabase\n        .from('drag_and_drop_correct_pairs')\n        .select('option_id, target_id')\n        .eq('question_id', baseQuestion.id);\n\n      if (correctPairsError) {\n        console.error(`Error fetching correct pairs for drag_and_drop question ${baseQuestion.id}:`, correctPairsError.message);\n        return null;\n      }\n\n      const typedTargets: DragAndDropTarget[] = (targetsData || []).map((target: any) => ({\n        target_id: target.target_id,\n        text: target.text,\n      }));\n\n      const typedOptions: DragAndDropOption[] = (optionsData || []).map((option: any) => ({\n        option_id: option.option_id,\n        text: option.text,\n      }));\n\n      const typedCorrectPairs: DragAndDropCorrectPair[] = (correctPairsData || []).map((pair: any) => ({\n        option_id: pair.option_id,\n        target_id: pair.target_id,\n      }));\n\n      // Check if we have the minimum required data\n      if (!typedTargets.length) {\n        console.warn(`No targets found for drag_and_drop question ${baseQuestion.id}`);\n        return null;\n      }\n      if (!typedOptions.length) {\n        console.warn(`No options found for drag_and_drop question ${baseQuestion.id}`);\n        return null;\n      }\n      if (!typedCorrectPairs.length) {\n        console.warn(`No correct pairs found for drag_and_drop question ${baseQuestion.id}`);\n        return null;\n      }\n      \n      const dragAndDropQuestion: DragAndDropQuestion = {\n        ...baseQuestion,\n        type: 'drag_and_drop',\n        targets: typedTargets,\n        options: typedOptions,\n        correctPairs: typedCorrectPairs,\n      };\n      return dragAndDropQuestion;\n\n    } catch (error: any) {\n      console.error(`Unexpected error enriching drag_and_drop question ${baseQuestion.id}:`, error.message || error);\n      return null;\n    }\n  } else if (baseQuestion.type === 'dropdown_selection') { // New case for dropdown_selection\n    try {\n      // Fetch all available options for this dropdown question\n      const { data: optionsData, error: optionsError } = await supabase\n        .from('dropdown_selection_options')\n        .select('option_id, text, is_correct') // is_correct might be useful for some UI/logic\n        .eq('question_id', baseQuestion.id);\n\n      if (optionsError) {\n        console.error(`Error fetching options for dropdown_selection question ${baseQuestion.id}:`, optionsError.message);\n        return null;\n      }\n\n      // Fetch the placeholder-to-correct-value mappings\n      const { data: targetsData, error: targetsError } = await supabase\n        .from('dropdown_selection_targets')\n        .select('key, value') // 'key' is the placeholder, 'value' is the correct option's text\n        .eq('question_id', baseQuestion.id);\n\n      if (targetsError) {\n        console.error(`Error fetching targets for dropdown_selection question ${baseQuestion.id}:`, targetsError.message);\n        return null;\n      }\n\n      const typedOptions: DropdownOption[] = (optionsData || []).map((opt: any) => ({\n        option_id: opt.option_id,\n        text: opt.text,\n        is_correct: opt.is_correct, // Keep is_correct as it's in the table and type\n      }));\n\n      const placeholderTargets: Record<string, DropdownPlaceholderTarget> = {};\n      (targetsData || []).forEach((target: any) => {\n        placeholderTargets[target.key] = {\n          key: target.key,\n          correctOptionText: target.value,\n        };\n      });\n\n      if (!typedOptions.length) {\n        console.warn(`No options found for dropdown_selection question ${baseQuestion.id}`);\n        return null; // Critical: a dropdown question must have options\n      }\n      if (Object.keys(placeholderTargets).length === 0) {\n        console.warn(`No placeholder targets found for dropdown_selection question ${baseQuestion.id}`);\n        return null; // Critical: must have target mappings\n      }\n\n      const dropdownSelectionQuestion: DropdownSelectionQuestion = {\n        ...baseQuestion,\n        type: 'dropdown_selection',\n        options: typedOptions,\n        placeholderTargets: placeholderTargets,\n      };\n      return dropdownSelectionQuestion;\n\n    } catch (error: any) {\n      console.error(`Unexpected error enriching dropdown_selection question ${baseQuestion.id}:`, error.message || error);\n      return null;\n    }\n  } else if (baseQuestion.type === 'order') {\n    try {\n      // Fetch the order items\n      const { data: itemsData, error: itemsError } = await supabase\n        .from('order_items')\n        .select('item_id, text')\n        .eq('question_id', baseQuestion.id);\n\n      if (itemsError) {\n        console.error(`Error fetching items for order question ${baseQuestion.id}:`, itemsError.message);\n        return null;\n      }\n\n      // Fetch the correct order sequence\n      const { data: correctOrderData, error: correctOrderError } = await supabase\n        .from('order_correct_order')\n        .select('item_id, position')\n        .eq('question_id', baseQuestion.id)\n        .order('position', { ascending: true });\n\n      if (correctOrderError) {\n        console.error(`Error fetching correct order for question ${baseQuestion.id}:`, correctOrderError.message);\n        return null;\n      }\n\n      const items: OrderItem[] = (itemsData || []).map((item: any) => ({\n        item_id: item.item_id,\n        text: item.text,\n      }));\n\n      // Sort by position and extract just the item_ids for correctOrder\n      const correctOrder = (correctOrderData || [])\n        .sort((a: any, b: any) => a.position - b.position)\n        .map((item: any) => item.item_id);\n\n      if (!items.length) {\n        console.warn(`No items found for order question ${baseQuestion.id}`);\n        return null;\n      }\n\n      if (!correctOrder.length) {\n        console.warn(`No correct order found for order question ${baseQuestion.id}`);\n        return null;\n      }\n\n      const orderQuestion: OrderQuestion = {\n        ...baseQuestion,\n        type: 'order',\n        items: items,\n        correctOrder: correctOrder,\n      };\n      return orderQuestion;\n\n    } catch (error: any) {\n      console.error(`Unexpected error enriching order question ${baseQuestion.id}:`, error.message || error);\n      return null;\n    }\n  } else {\n    console.warn(`enrichQuestionWithDetails: Unhandled question type '${baseQuestion.type}' for Q ID ${baseQuestion.id}. Returning null.`);\n    return null; \n  }\n}\n\nexport async function fetchQuizById(\n  quizId: string,\n  questionType?: string\n): Promise<Quiz | null> {\n  try {\n    // 1. Fetch quiz metadata\n    const { data: quizData, error: quizError } = await supabase\n      .from('quizzes')\n      .select('*')\n      .eq('id', quizId)\n      .single();\n\n    if (quizError) {\n      if (quizError.code === 'PGRST116') { // Not found\n        console.warn(`Quiz with ID '${quizId}' not found.`);\n      } else {\n        console.error(`Error fetching quiz ${quizId}:`, quizError.message);\n      }\n      return null;\n    }\n    if (!quizData) {\n      console.warn(`No data for quiz ${quizId} despite no error.`);\n      return null;\n    }\n\n    // 2. Fetch base questions for the quiz, with optional type filter\n    let query = supabase\n      .from('questions')\n      .select('*') // Select all base question fields\n      .eq('quiz_tag', quizId);\n      \n    // Apply type filter if provided\n    if (questionType) {\n      query = query.eq('type', questionType);\n    }\n    \n    // Execute the query\n    const { data: baseQuestionsData, error: questionsError } = await query;\n\n    if (questionsError) {\n      console.error(`Error fetching questions for quiz ${quizId}:`, questionsError.message);\n      return null;\n    }\n\n    // 3. Enrich each question with its specific details\n    const enrichedQuestionsPromises = (baseQuestionsData || []).map(bq => \n      enrichQuestionWithDetails(bq as BaseQuestion)\n    );\n    const resolvedQuestions = await Promise.all(enrichedQuestionsPromises);\n    const successfullyEnrichedQuestions = resolvedQuestions.filter(q => q !== null) as AnyQuestion[];\n\n    if (baseQuestionsData && successfullyEnrichedQuestions.length !== baseQuestionsData.length) {\n      console.warn(`Not all questions for quiz ${quizId} could be successfully enriched.`);\n    }\n\n    return {\n      ...(quizData as Quiz), // Spread fetched quiz metadata\n      questions: successfullyEnrichedQuestions, // Add the array of enriched questions\n    };\n\n  } catch (error: any) {\n    console.error(`Unexpected error in fetchQuizById for quiz ${quizId}:`, error.message || error);\n    return null;\n  }\n}\n\n// New function to fetch a random question by type and filters\nexport async function fetchRandomQuestionByTypeAndFilters(\n  type: string, // Should be QuestionType, but using string for broader initial compatibility\n  filters: { difficulty?: string; tags?: string[] }\n): Promise<AnyQuestion | null> {\n  try {\n    let query = supabase\n      .from('questions')\n      .select('*')\n      .eq('type', type);\n\n    if (filters.difficulty && filters.difficulty !== 'all') {\n      query = query.eq('difficulty', filters.difficulty);\n    }\n\n    if (filters.tags && filters.tags.length > 0) {\n      // Assuming quiz_tag can be used for general tagging for now\n      // If you have a separate tags table or array column, this would need adjustment\n      query = query.in('quiz_tag', filters.tags);\n    }\n\n    // Fetch multiple to then pick one randomly, or use a database-specific random function\n    // For simplicity, fetching a few and picking the first one.\n    // For true randomness and performance on large datasets, a DB function like RANDOM() or TABLESAMPLE is better.\n    query = query.limit(10); // Fetch up to 10 matching questions\n\n    const { data: baseQuestionsData, error: questionsError } = await query;\n\n    if (questionsError) {\n      console.error(`Error fetching questions by type ${type} and filters:`, questionsError.message);\n      return null;\n    }\n\n    if (!baseQuestionsData || baseQuestionsData.length === 0) {\n      console.warn(`No questions found for type ${type} with current filters.`);\n      return null;\n    }\n\n    // Pick a random question from the fetched ones\n    const randomIndex = Math.floor(Math.random() * baseQuestionsData.length);\n    const randomBaseQuestion = baseQuestionsData[randomIndex] as BaseQuestion;\n\n    if (!randomBaseQuestion) {\n      return null;\n    }\n\n    // Enrich the selected base question with its specific details\n    return await enrichQuestionWithDetails(randomBaseQuestion);\n\n  } catch (error: any) {\n    console.error(`Unexpected error in fetchRandomQuestionByTypeAndFilters for type ${type}:`, error.message || error);\n    return null;\n  }\n}"
    },
    {
      "filepath": "app/api/webhook/mailgun/route.ts",
      "content": "import { NextResponse, NextRequest } from \"next/server\";\nimport { sendEmail } from \"@/libs/mailgun\";\nimport config from \"@/config\";\n\n// This route is used to receive emails from Mailgun and forward them to our customer support email.\n// See more: https://shipfa.st/docs/features/emails\nexport async function POST(req: NextRequest) {\n  try {\n    // extract the email content, subject and sender\n    const formData = await req.formData();\n    const sender = formData.get(\"From\");\n    const subject = formData.get(\"Subject\");\n    const html = formData.get(\"body-html\");\n\n    // send email to the admin if forwardRepliesTo is et & emailData exists\n    if (config.mailgun.forwardRepliesTo && html && subject && sender) {\n      await sendEmail({\n        to: config.mailgun.forwardRepliesTo,\n        subject: `${config?.appName} | ${subject}`,\n        html: `<div><p><b>- Subject:</b> ${subject}</p><p><b>- From:</b> ${sender}</p><p><b>- Content:</b></p><div>${html}</div></div>`,\n        replyTo: String(sender),\n      });\n    }\n\n    return NextResponse.json({});\n  } catch (e) {\n    console.error(e?.message);\n    return NextResponse.json({ error: e?.message }, { status: 500 });\n  }\n}\n"
    },
    {
      "filepath": "app/api/webhook/stripe/route.ts",
      "content": "import { NextResponse, NextRequest } from \"next/server\";\nimport { headers } from \"next/headers\";\nimport Stripe from \"stripe\";\nimport { SupabaseClient } from \"@supabase/supabase-js\";\nimport configFile from \"@/config\";\nimport { findCheckoutSession } from \"@/libs/stripe\";\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  apiVersion: \"2023-08-16\",\n  typescript: true,\n});\nconst webhookSecret = process.env.STRIPE_WEBHOOK_SECRET;\n\n// This is where we receive Stripe webhook events\n// It used to update the user data, send emails, etc...\n// By default, it'll store the user in the database\n// See more: https://shipfa.st/docs/features/payments\nexport async function POST(req: NextRequest) {\n  const body = await req.text();\n\n  const signature = headers().get(\"stripe-signature\");\n\n  let eventType;\n  let event;\n\n  // Create a private supabase client using the secret service_role API key\n  const supabase = new SupabaseClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.SUPABASE_SERVICE_ROLE_KEY\n  );\n\n  // verify Stripe event is legit\n  try {\n    event = stripe.webhooks.constructEvent(body, signature, webhookSecret);\n  } catch (err) {\n    console.error(`Webhook signature verification failed. ${err.message}`);\n    return NextResponse.json({ error: err.message }, { status: 400 });\n  }\n\n  eventType = event.type;\n\n  try {\n    switch (eventType) {\n      case \"checkout.session.completed\": {\n        // First payment is successful and a subscription is created (if mode was set to \"subscription\" in ButtonCheckout)\n        // \u2705 Grant access to the product\n        const stripeObject: Stripe.Checkout.Session = event.data\n          .object as Stripe.Checkout.Session;\n\n        const session = await findCheckoutSession(stripeObject.id);\n\n        const customerId = session?.customer;\n        const priceId = session?.line_items?.data[0]?.price.id;\n        const userId = stripeObject.client_reference_id;\n        const plan = configFile.stripe.plans.find((p) => p.priceId === priceId);\n\n        if (!plan) break;\n\n        // Update the profile where id equals the userId (in table called 'profiles') and update the customer_id, price_id, and has_access (provisioning)\n        await supabase\n          .from(\"profiles\")\n          .update({\n            customer_id: customerId,\n            price_id: priceId,\n            has_access: true,\n          })\n          .eq(\"id\", userId);\n\n        // Extra: send email with user link, product page, etc...\n        // try {\n        //   await sendEmail(...);\n        // } catch (e) {\n        //   console.error(\"Email issue:\" + e?.message);\n        // }\n\n        break;\n      }\n\n      case \"checkout.session.expired\": {\n        // User didn't complete the transaction\n        // You don't need to do anything here, by you can send an email to the user to remind him to complete the transaction, for instance\n        break;\n      }\n\n      case \"customer.subscription.updated\": {\n        // The customer might have changed the plan (higher or lower plan, cancel soon etc...)\n        // You don't need to do anything here, because Stripe will let us know when the subscription is canceled for good (at the end of the billing cycle) in the \"customer.subscription.deleted\" event\n        // You can update the user data to show a \"Cancel soon\" badge for instance\n        break;\n      }\n\n      case \"customer.subscription.deleted\": {\n        // The customer subscription stopped\n        // \u274c Revoke access to the product\n        const stripeObject: Stripe.Subscription = event.data\n          .object as Stripe.Subscription;\n        const subscription = await stripe.subscriptions.retrieve(\n          stripeObject.id\n        );\n\n        await supabase\n          .from(\"profiles\")\n          .update({ has_access: false })\n          .eq(\"customer_id\", subscription.customer);\n        break;\n      }\n\n      case \"invoice.paid\": {\n        // Customer just paid an invoice (for instance, a recurring payment for a subscription)\n        // \u2705 Grant access to the product\n        const stripeObject: Stripe.Invoice = event.data\n          .object as Stripe.Invoice;\n        const priceId = stripeObject.lines.data[0].price.id;\n        const customerId = stripeObject.customer;\n\n        // Find profile where customer_id equals the customerId (in table called 'profiles')\n        const { data: profile } = await supabase\n          .from(\"profiles\")\n          .select(\"*\")\n          .eq(\"customer_id\", customerId)\n          .single();\n\n        // Make sure the invoice is for the same plan (priceId) the user subscribed to\n        if (profile.price_id !== priceId) break;\n\n        // Grant the profile access to your product. It's a boolean in the database, but could be a number of credits, etc...\n        await supabase\n          .from(\"profiles\")\n          .update({ has_access: true })\n          .eq(\"customer_id\", customerId);\n\n        break;\n      }\n\n      case \"invoice.payment_failed\":\n        // A payment failed (for instance the customer does not have a valid payment method)\n        // \u274c Revoke access to the product\n        // \u23f3 OR wait for the customer to pay (more friendly):\n        //      - Stripe will automatically email the customer (Smart Retries)\n        //      - We will receive a \"customer.subscription.deleted\" when all retries were made and the subscription has expired\n\n        break;\n\n      default:\n      // Unhandled event type\n    }\n  } catch (e) {\n    console.error(\"stripe error: \", e.message);\n  }\n\n  return NextResponse.json({});\n}\n"
    },
    {
      "filepath": "app/api/auth/callback/route.ts",
      "content": "import { NextResponse, NextRequest } from \"next/server\";\nimport { createRouteHandlerClient } from \"@supabase/auth-helpers-nextjs\";\nimport { cookies } from \"next/headers\";\nimport config from \"@/config\";\n\nexport const dynamic = \"force-dynamic\";\n\n// This route is called after a successful login. It exchanges the code for a session and redirects to the callback URL (see config.js).\nexport async function GET(req: NextRequest) {\n  const requestUrl = new URL(req.url);\n  const code = requestUrl.searchParams.get(\"code\");\n\n  if (code) {\n    const supabase = createRouteHandlerClient({ cookies });\n    await supabase.auth.exchangeCodeForSession(code);\n  }\n\n  // URL to redirect to after sign in process completes\n  return NextResponse.redirect(requestUrl.origin + config.auth.callbackUrl);\n}\n"
    },
    {
      "filepath": "app/api/quiz/[quizId]/route.ts",
      "content": "import { NextResponse } from 'next/server';\nimport { fetchQuizById } from '../../../lib/supabaseQuizService'; // We'll keep using the server-side service for API routes\n\nexport async function GET(\n  request: Request,\n  { params }: { params: { quizId: string } }\n) {\n  // Need to properly handle params in Next.js 13+\n  const quizId = (await Promise.resolve(params)).quizId;\n  \n  // Extract questionType from URL if present\n  const url = new URL(request.url);\n  const questionType = url.searchParams.get('questionType');\n\n  if (!quizId) {\n    return NextResponse.json({ error: 'Quiz ID is required' }, { status: 400 });\n  }\n\n  try {\n    // Pass questionType to the fetchQuizById function\n    const quiz = await fetchQuizById(quizId, questionType || undefined);\n    if (!quiz) {\n      return NextResponse.json({ error: 'Quiz not found' }, { status: 404 });\n    }\n    return NextResponse.json(quiz);\n  } catch (error: any) {\n    console.error(`API Error fetching quiz ${quizId}:`, error);\n    return NextResponse.json({ error: 'Failed to fetch quiz', details: error.message }, { status: 500 });\n  }\n} "
    },
    {
      "filepath": "app/api/lead/route.ts",
      "content": "import { NextResponse, NextRequest } from \"next/server\";\nimport { createRouteHandlerClient } from \"@supabase/auth-helpers-nextjs\";\nimport { cookies } from \"next/headers\";\n\n// This route is used to store the leads that are generated from the landing page.\n// The API call is initiated by <ButtonLead /> component\nexport async function POST(req: NextRequest) {\n  const body = await req.json();\n\n  if (!body.email) {\n    return NextResponse.json({ error: \"Email is required\" }, { status: 400 });\n  }\n\n  try {\n    const supabase = createRouteHandlerClient({ cookies });\n    await supabase.from(\"leads\").insert({ email: body.email });\n\n    return NextResponse.json({});\n  } catch (e) {\n    console.error(e);\n    return NextResponse.json({ error: e.message }, { status: 500 });\n  }\n}\n"
    },
    {
      "filepath": "app/api/stripe/create-portal/route.ts",
      "content": "import { NextResponse, NextRequest } from \"next/server\";\nimport { createRouteHandlerClient } from \"@supabase/auth-helpers-nextjs\";\nimport { cookies } from \"next/headers\";\nimport { createCustomerPortal } from \"@/libs/stripe\";\n\nexport async function POST(req: NextRequest) {\n  try {\n    const cookieStore = cookies();\n    const supabase = createRouteHandlerClient({ cookies: () => cookieStore });\n\n    const body = await req.json();\n\n    const {\n      data: { session },\n    } = await supabase.auth.getSession();\n\n    // User who are not logged in can't make a purchase\n    if (!session) {\n      return NextResponse.json(\n        { error: \"You must be logged in to view billing information.\" },\n        { status: 401 }\n      );\n    } else if (!body.returnUrl) {\n      return NextResponse.json(\n        { error: \"Return URL is required\" },\n        { status: 400 }\n      );\n    }\n\n    const { data } = await supabase\n      .from(\"profiles\")\n      .select(\"*\")\n      .eq(\"id\", session?.user?.id)\n      .single();\n\n    if (!data?.customer_id) {\n      return NextResponse.json(\n        {\n          error: \"You don't have a billing account yet. Make a purchase first.\",\n        },\n        { status: 400 }\n      );\n    }\n\n    const stripePortalUrl = await createCustomerPortal({\n      customerId: data.customer_id,\n      returnUrl: body.returnUrl,\n    });\n\n    return NextResponse.json({\n      url: stripePortalUrl,\n    });\n  } catch (e) {\n    console.error(e);\n    return NextResponse.json({ error: e?.message }, { status: 500 });\n  }\n}\n"
    },
    {
      "filepath": "app/api/stripe/create-checkout/route.ts",
      "content": "import { NextResponse, NextRequest } from \"next/server\";\nimport { createRouteHandlerClient } from \"@supabase/auth-helpers-nextjs\";\nimport { cookies } from \"next/headers\";\nimport { createCheckout } from \"@/libs/stripe\";\n\n// This function is used to create a Stripe Checkout Session (one-time payment or subscription)\n// It's called by the <ButtonCheckout /> component\n// Users must be authenticated. It will prefill the Checkout data with their email and/or credit card (if any)\nexport async function POST(req: NextRequest) {\n  try {\n    const cookieStore = cookies();\n    const supabase = createRouteHandlerClient({ cookies: () => cookieStore });\n\n    const {\n      data: { session },\n    } = await supabase.auth.getSession();\n\n    // User who are not logged in can't make a purchase\n    if (!session) {\n      return NextResponse.json(\n        { error: \"You must be logged in to make a purchase.\" },\n        { status: 401 }\n      );\n    }\n\n    const body = await req.json();\n\n    const { priceId, mode, successUrl, cancelUrl } = body;\n\n    if (!priceId) {\n      return NextResponse.json(\n        { error: \"Price ID is required\" },\n        { status: 400 }\n      );\n    } else if (!successUrl || !cancelUrl) {\n      return NextResponse.json(\n        { error: \"Success and cancel URLs are required\" },\n        { status: 400 }\n      );\n    } else if (!body.mode) {\n      return NextResponse.json(\n        {\n          error:\n            \"Mode is required (either 'payment' for one-time payments or 'subscription' for recurring subscription)\",\n        },\n        { status: 400 }\n      );\n    }\n\n    // Search for a profile with unique ID equals to the user session ID (in table called 'profiles')\n    const { data } = await supabase\n      .from(\"profiles\")\n      .select(\"*\")\n      .eq(\"id\", session?.user?.id)\n      .single();\n\n    // If no profile found, create one. This is used to store the Stripe customer ID\n    if (!data) {\n      await supabase.from(\"profiles\").insert([\n        {\n          id: session.user.id,\n          price_id: body.priceId,\n          email: session?.user?.email,\n        },\n      ]);\n    }\n\n    const stripeSessionURL = await createCheckout({\n      priceId,\n      mode,\n      successUrl,\n      cancelUrl,\n      clientReferenceId: session.user.id,\n      user: {\n        email: session?.user?.email,\n        // If the user has already purchased, it will automatically prefill it's credit card\n        customerId: data?.customer_id,\n      },\n      // If you send coupons from the frontend, you can pass it here\n      // couponId: body.couponId,\n    });\n\n    return NextResponse.json({ url: stripeSessionURL });\n  } catch (e) {\n    console.error(e);\n    return NextResponse.json({ error: e?.message }, { status: 500 });\n  }\n}\n"
    },
    {
      "filepath": "app/api/questions/route.ts",
      "content": ""
    },
    {
      "filepath": "app/quiz-test/[quizId]/page-new.tsx",
      "content": "'use client';\n\nimport React from 'react';\nimport { QuizProvider } from '../../features/quiz/context/QuizContext';\nimport QuizPage from '../../features/quiz/pages/QuizPage';\n\n// Simple wrapper component that provides the QuizContext\nexport default async function QuizTestPage({ params }: { params: { quizId: string } }) {\n  // Using async function to address the \"params should be awaited\" warning\n  const quizId = params.quizId;\n  \n  return (\n    <QuizProvider>\n      <QuizPage quizId={quizId} />\n    </QuizProvider>\n  );\n}\n"
    },
    {
      "filepath": "app/quiz-test/[quizId]/page-server.tsx",
      "content": "import React from 'react';\nimport ClientQuizPage from './client-page';\n\n// This is a server component that can properly handle async params\nexport default async function QuizTestPage({ params }: { params: { quizId: string } }) {\n  // Server-side logic can go here if needed\n  const quizId = params.quizId;\n  \n  // Render the client component with the quizId\n  return <ClientQuizPage quizId={quizId} />;\n}\n"
    },
    {
      "filepath": "app/quiz-test/[quizId]/type-client-page.tsx",
      "content": "'use client';\n\nimport React from 'react';\nimport { QuizProvider } from '../../../../features/quiz/context/QuizContext';\nimport QuizPage from '../../../../features/quiz/pages/QuizPage';\n\ninterface QuizTypeClientPageProps {\n  quizId: string;\n  questionType: string;\n}\n\nexport default function QuizTypeClientPage({ quizId, questionType }: QuizTypeClientPageProps) {\n  return (\n    <QuizProvider>\n      <QuizPage quizId={quizId} questionType={questionType} />\n    </QuizProvider>\n  );\n}\n"
    },
    {
      "filepath": "app/quiz-test/[quizId]/page-updated.tsx",
      "content": "'use client';\n\nimport React from 'react';\nimport { QuizProvider } from '../../features/quiz/context/QuizContext';\nimport QuizRunnerComponent from '../../features/quiz/pages/QuizPage';\n\n// Page component serving as a wrapper\nconst QuizPage: React.FC<{ params: { quizId: string } }> = ({ params }) => {\n  return (\n    <QuizProvider>\n      <QuizRunnerComponent quizId={params.quizId} />\n    </QuizProvider>\n  );\n};\n\nexport default QuizPage;\n"
    },
    {
      "filepath": "app/quiz-test/[quizId]/page.tsx",
      "content": "import React from 'react';\nimport ClientQuizPage from './client-page';\n\n// This is a server component that properly handles async params in Next.js 15\nexport default async function QuizTestPage({ params }: { params: { quizId: string } }) {\n  // Using server component to access params properly\n  const quizId = params.quizId;\n  \n  // Pass the quizId to the client component\n  return <ClientQuizPage quizId={quizId} />;\n}"
    },
    {
      "filepath": "app/quiz-test/[quizId]/page.tsx.bak",
      "content": "'use client';\n\nimport React from 'react';\nimport { QuizProvider } from '../../features/quiz/context/QuizContext';\nimport QuizPage from '../../features/quiz/pages/QuizPage';\n\n  useEffect(() => {\n    if (quizId) {\n      dispatch({ type: 'LOAD_QUIZ_START' });\n      // In a real app, you would call an API route here\n      // which internally uses fetchQuizById from quizService.ts.\n      // For now, to demonstrate, we are directly calling it.\n      // This has implications: quizService.ts uses server-side env vars and Supabase client.\n      // This will NOT work directly on the client if quizService.ts is not refactored\n      // or if fetchQuizById is not exposed via an API endpoint.\n      \n      // TEMPORARY: Simulating API call for now for UI structure\n      // Replace this with actual API call\n      const loadQuiz = async () => {\n        try {\n          // This direct call to fetchQuizById from client won't work with server-side Supabase client.\n          // const quizData = await fetchQuizById(quizId);\n          // Instead, this needs to be an API call:\n          const response = await fetch(`/api/quiz/${quizId}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch quiz: ${response.statusText}`);\n          }\n          const quizData = await response.json();\n\n          if (quizData && !quizData.error) {\n            dispatch({ type: 'LOAD_QUIZ_SUCCESS', payload: quizData });\n          } else {\n            dispatch({ type: 'LOAD_QUIZ_FAILURE', payload: quizData.error || 'Failed to load quiz data.' });\n          }\n        } catch (error: any) {\n          console.error(\"Error fetching quiz data:\", error);\n          dispatch({ type: 'LOAD_QUIZ_FAILURE', payload: error.message || 'Error fetching quiz.' });\n        }\n      };\n      loadQuiz();\n    }\n  }, [quizId, dispatch]);\n\n  // Calculate progress for the progress bar\n  const progressPercentage = state.questions.length > 0 \n    ? ((state.currentQuestionIndex + 1) / state.questions.length) * 100 \n    : 0;\n\n  if (state.isLoading) return <div className=\"flex justify-center items-center min-h-screen bg-custom-light-bg\"><p className=\"text-xl text-custom-dark-blue\">Loading quiz...</p></div>;\n  if (state.error) return <div className=\"flex justify-center items-center min-h-screen bg-custom-light-bg\"><p className=\"text-xl text-custom-error\">Error: {state.error}</p></div>;\n  if (!state.quiz || state.questions.length === 0) return <div className=\"flex justify-center items-center min-h-screen bg-custom-light-bg\"><p className=\"text-xl text-custom-dark-blue\">Quiz not found or no questions available.</p></div>;\n\n  const currentQuestion = state.questions[state.currentQuestionIndex];\n  const isLastQuestion = state.questions.length > 0 && state.currentQuestionIndex === state.questions.length - 1;\n\n  if (!currentQuestion && state.isQuizComplete) {\n    return (\n        <div className=\"min-h-screen bg-custom-light-bg flex flex-col justify-center items-center p-6 animate-fade-in\">\n            <div className=\"container mx-auto p-4 md:p-8 text-center bg-white shadow-shadow-strong rounded-rounded-lg-ref\">\n                <h1 className=\"text-3xl md:text-4xl font-bold mb-6 text-custom-success\">Quiz Completed!</h1>\n                <p className=\"text-lg md:text-xl text-custom-gray-1 mb-8\">You have completed the quiz: <span className=\"font-semibold\">{state.quiz.title}</span>.</p>\n                {/* TODO: Display score or summary here */}\n                <button \n                    onClick={() => dispatch({ type: 'RESET_QUIZ' })} \n                    className=\"btn-primary-custom\"\n                >\n                    Take Another Quiz\n                </button>\n            </div>\n        </div>\n    );\n  }\n  if (!currentQuestion) return <div className=\"flex justify-center items-center min-h-screen bg-custom-light-bg\"><p className=\"text-xl text-custom-dark-blue\">No current question available.</p></div>;\n  \n  // Define button styles based on reference\n  const btnBase = \"inline-flex items-center justify-center px-8 h-12 border-none rounded-rounded-full font-semibold text-base cursor-pointer transition-all duration-200 relative overflow-hidden\";\n  const btnSecondaryCustom = `${btnBase} bg-gray-100 text-custom-gray-1 hover:bg-gray-200 hover:-translate-y-0.5`;\n  const btnPrimaryCustom = `${btnBase} bg-primary-gradient text-white shadow-lg hover:shadow-xl hover:-translate-y-0.5`;\n  // Note: Ripple effect from reference is complex for pure Tailwind; focusing on static/hover styles.\n\n  return (\n    <div className=\"min-h-screen bg-custom-light-bg py-6 px-4 md:px-6\">\n      <div className=\"quiz-container max-w-3xl mx-auto\">\n        <header className=\"text-center mb-8 animate-fade-in\">\n          <h1 className=\"text-3xl md:text-4xl font-bold text-custom-dark-blue mb-3 relative inline-block pb-2\">\n            {state.quiz.title}\n            <span className=\"absolute left-1/4 bottom-0 w-1/2 h-1 bg-primary-gradient rounded-rounded-full\"></span>\n          </h1>\n          \n          <div className=\"progress-container relative my-8 mx-auto w-full max-w-xl\">\n            <div className=\"progress-info flex justify-between mb-2 font-medium text-sm\">\n              <div className=\"question-counter bg-primary-gradient text-white py-1 px-4 rounded-rounded-full shadow-shadow-1 text-xs md:text-sm\">\n                Question {state.currentQuestionIndex + 1} of {state.questions.length}\n              </div>\n              {/* Score could go here if available: <div className=\"score-display\">Score: ...</div> */}\n            </div>\n            <div className=\"progress-bar h-2 bg-gray-200 rounded-rounded-full overflow-hidden shadow-inner\">\n              <div \n                className=\"progress-fill h-full bg-primary-gradient rounded-rounded-full transition-all duration-300 ease-out shadow-md\"\n                style={{ width: `${progressPercentage}%` }}\n              ></div>\n            </div>\n          </div>\n        </header>\n        \n        {/* QuestionCard will be animated with animate-card-appear inside its own component if possible */}\n        <QuestionCard question={currentQuestion} />\n\n        <div className=\"navigation flex flex-col md:flex-row justify-between mt-10 gap-4\">\n          <button \n            onClick={() => dispatch({ type: 'PREVIOUS_QUESTION' })}\n            disabled={state.currentQuestionIndex === 0}\n            className={`${btnSecondaryCustom} disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:translate-y-0 w-full md:w-auto`}\n          >\n            Previous\n          </button>\n          <button \n            onClick={() => {\n              if (isLastQuestion) {\n                if (state.userAnswers[currentQuestion.id]) {\n                  dispatch({ type: 'COMPLETE_QUIZ' });\n                } else {\n                  alert(\"Please submit your answer before finishing the quiz.\");\n                }\n              } else {\n                dispatch({ type: 'NEXT_QUESTION' });\n              }\n            }}\n            disabled={isLastQuestion && !state.userAnswers[currentQuestion.id]}\n            className={`${btnPrimaryCustom} disabled:opacity-60 disabled:cursor-not-allowed disabled:hover:translate-y-0 w-full md:w-auto`}\n          >\n            {isLastQuestion ? 'Finish Quiz' : 'Next Question'}\n            {/* Icon can be added here */}\n            {!isLastQuestion && \n              <svg className=\"ml-2 w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8-8-8z\" fill=\"currentColor\"/>\n              </svg>\n            }\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst QuizPage: React.FC<{ params: { quizId: string } }> = ({ params }) => {\n  return (\n    <QuizProvider>\n      <QuizRunner quizId={params.quizId} />\n    </QuizProvider>\n  );\n};\n\nexport default QuizPage; "
    },
    {
      "filepath": "app/quiz-test/[quizId]/client-page.tsx",
      "content": "'use client';\n\nimport React from 'react';\nimport { QuizProvider } from '../../features/quiz/context/QuizContext';\nimport QuizPage from '../../features/quiz/pages/QuizPage';\n\n// This is a client component that receives the quizId and optional questionType as props\ninterface ClientQuizPageProps {\n  quizId: string;\n  questionType?: string;\n}\n\nexport default function ClientQuizPage({ quizId, questionType }: ClientQuizPageProps) {\n  return (\n    <QuizProvider>\n      <QuizPage quizId={quizId} questionType={questionType} />\n    </QuizProvider>\n  );\n}\n"
    },
    {
      "filepath": "app/quiz-test/[quizId]/page-fixed.tsx",
      "content": "'use client';\n\nimport React from 'react';\nimport { QuizProvider } from '../../features/quiz/context/QuizContext';\nimport QuizPage from '../../features/quiz/pages/QuizPage';\n\n// Simple wrapper component that provides the QuizContext\nconst QuizTestPage: React.FC<{ params: { quizId: string } }> = ({ params }) => {\n  return (\n    <QuizProvider>\n      <QuizPage quizId={params.quizId} />\n    </QuizProvider>\n  );\n};\n\nexport default QuizTestPage;\n"
    },
    {
      "filepath": "app/quiz-test/[quizId]/[questionType]/page.tsx",
      "content": "import React from 'react';\nimport ClientQuizPage from '../client-page';\n\n// This is a server component that properly handles async params in Next.js 15\nexport default async function QuizTestByTypePage({ params }: { params: { quizId: string, questionType: string } }) {\n  // Using server component to access params properly - need to await params in Next.js 13+\n  const resolvedParams = await Promise.resolve(params);\n  const { quizId, questionType } = resolvedParams;\n  \n  // Pass the quizId and questionType to the client component\n  return <ClientQuizPage quizId={quizId} questionType={questionType} />;\n}\n"
    },
    {
      "filepath": "app/quiz-test/[quizId]/questions/page.tsx",
      "content": "import React from 'react';\nimport Link from 'next/link';\nimport { fetchQuizById } from '../../../lib/supabaseQuizService';\n\nexport default async function QuestionTypesListPage({ params }: { params: { quizId: string } }) {\n  const quizId = params.quizId;\n  \n  // Fetch the quiz data to get all available question types\n  const quiz = await fetchQuizById(quizId);\n  \n  if (!quiz) {\n    return (\n      <div className=\"min-h-screen bg-custom-light-bg py-12 px-4\">\n        <div className=\"max-w-3xl mx-auto\">\n          <h1 className=\"text-3xl font-bold text-custom-dark-blue mb-6\">Quiz Not Found</h1>\n          <p className=\"mb-6\">The quiz you're looking for could not be found.</p>\n          <Link href=\"/\" className=\"text-custom-primary hover:underline\">\n            Return to Home\n          </Link>\n        </div>\n      </div>\n    );\n  }\n  \n  // Get unique question types from the quiz\n  const questionTypes = Array.from(\n    new Set(quiz.questions.map(question => question.type))\n  );\n  \n  return (\n    <div className=\"min-h-screen bg-custom-light-bg py-12 px-4\">\n      <div className=\"max-w-3xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-custom-dark-blue mb-6\">{quiz.title}</h1>\n        <p className=\"mb-6\">Select a question type to practice:</p>\n        \n        <div className=\"mb-8\">\n          <Link \n            href={`/quiz-test/${quizId}`} \n            className=\"inline-block bg-custom-primary text-white px-4 py-2 rounded-lg mb-4 mr-4 hover:bg-custom-primary-dark transition\"\n          >\n            All Questions ({quiz.questions.length})\n          </Link>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {questionTypes.map(type => {\n            const count = quiz.questions.filter(q => q.type === type).length;\n            return (\n              <Link \n                key={type} \n                href={`/quiz-test/${quizId}/questions/${type}`}\n                className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition\"\n              >\n                <h3 className=\"text-xl font-semibold text-custom-dark-blue mb-2\">\n                  {type.replace('_', ' ').replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase())}\n                </h3>\n                <p className=\"text-gray-600\">{count} questions</p>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n"
    },
    {
      "filepath": "app/quiz-test/[quizId]/questions/[type]/page.tsx",
      "content": "import React from 'react';\nimport QuizTypeClientPage from '../../../type-client-page';\n\n// This is a server component that properly handles async params in Next.js\nexport default async function QuizByTypeAndQuestionTypePage({ params }: { params: { quizId: string, type: string } }) {\n  // Using server component to access params properly\n  const { quizId, type } = params;\n  \n  // Pass the quizId and questionType to the client component\n  return <QuizTypeClientPage quizId={quizId} questionType={type} />;\n}\n"
    },
    {
      "filepath": "app/data/quizzes/azure-a102/clean_single_selection_questions.json",
      "content": "{\n  \"questions\": [\n    {\n      \"id\": \"1\",\n      \"type\": \"single_selection\",\n      \"question\": \"You need to build a chatbot that meets the following requirements:\\n- Supports chit-chat, knowledge base, and multilingual models\\n- Performs sentiment analysis on user messages\\n- Selects the best language model automatically\\nWhat should you integrate into the chatbot?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. QnA Maker, Language Understanding, and Dispatch\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Translator, Speech, and Dispatch\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Language Understanding, Text Analytics, and QnA Maker\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Text Analytics, Translator, and Dispatch\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Language Understanding: An AI service that allows users to interact with your applications, bots, and loT devices by using natural language. QnA Maker is a cloud-based Natural Language Processing (NLP) service that allows you to create a natural conversational layer over your data. It is used to find the most appropriate answer for any input from your custom knowledge base (KB) of information. Text Analytics: Mine insights in unstructured text using natural language processing (NLP) (no machine learning expertise required). Gain a deeper understanding of customer opinions with sentiment analysis. The Language Detection feature of the Azure Text Analytics REST API evaluates text input.\",\n        \"incorrect\": \"Incorrect! Language Understanding, Text Analytics (now part of Azure AI Language), and QnA Maker (now Custom Question Answering) provide the required capabilities.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"2\",\n      \"type\": \"single_selection\",\n      \"question\": \"Your company wants to reduce how long it takes for employees to log receipts in expense reports. All the receipts are in English. You need to extract top-level information from the receipts, such as the vendor and the transaction total. The solution must minimize development effort. Which Azure service should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Custom Vision\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Personalizer\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Form Recognizer\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Computer Vision\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Azure Form Recognizer (now Azure AI Document Intelligence) is a cognitive service that lets you build automated data processing software using machine learning technology. Identify and extract text, key/value pairs, selection marks, tables, and structure from your documents. The service outputs structured data that includes the relationships in the original file, bounding boxes, confidence and more. Form Recognizer is composed of custom document processing models, prebuilt models for invoices, receipts, IDs and business cards, and the layout model.\",\n        \"incorrect\": \"Incorrect! Form Recognizer (now Azure AI Document Intelligence) has a prebuilt receipt model perfect for this scenario with minimal development effort.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"8\",\n      \"type\": \"single_selection\",\n      \"question\": \"You plan to perform predictive maintenance. You collect IoT sensor data from 100 industrial machines for a year. Each machine has 50 different sensors that generate data at one-minute intervals. In total, you have 5,000 time series datasets. You need to identify unusual values in each time series to help predict machinery failures. Which Azure service should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Anomaly Detector\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Cognitive Search\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Form Recognizer\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Custom Vision\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Anomaly Detector is designed to identify unusual patterns or outliers in time series data, making it suitable for detecting potential machinery failures from sensor readings.\",\n        \"incorrect\": \"Incorrect! Anomaly Detector is specifically designed for finding anomalies in time series data like sensor readings.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"12\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building a language model by using a Language Understanding (classic) service. You create a new Language Understanding (classic) resource. You need to add more contributors. What should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. a conditional access policy in Azure Active Directory (Azure AD)\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. the Access control (IAM) page for the authoring resources in the Azure portal\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. the Access control (IAM) page for the prediction resources in the Azure portal\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Contributors are managed via Azure RBAC roles assigned on the LUIS authoring resource in the Azure portal using Access control (IAM).\",\n        \"incorrect\": \"Incorrect! Access control for LUIS resources is managed via IAM roles on the authoring resource in the Azure portal.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"16\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have a Language Understanding resource named lu1. You build and deploy an Azure bot named bot1 that uses lu1. You need to ensure that bot1 adheres to the Microsoft responsible AI principle of inclusiveness. How should you extend bot1?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Implement authentication for bot1.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Enable active learning for lu1.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Host lu1 in a container.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Add Direct Line Speech to bot1.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Inclusiveness: AI systems should empower everyone and engage people. Direct Line Speech enables voice interaction, making the bot accessible to users who prefer or need to interact via speech, thus enhancing inclusiveness.\",\n        \"incorrect\": \"Incorrect! Adding speech capabilities via Direct Line Speech enhances accessibility, supporting the principle of inclusiveness.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"19\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have a factory that produces food products. You need to build a monitoring solution for staff compliance with personal protective equipment (PPE) requirements. The solution must meet the following requirements:\\n* Identify staff who have removed masks or safety glasses.\\n* Perform a compliance check every 15 minutes.\\n* Minimize development effort.\\n* Minimize costs.\\nWhich service should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Face\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Computer Vision\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Azure Video Analyzer for Media (formerly Video Indexer)\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Face API is an AI service that analyzes faces in images. Features include face detection that perceives facial features and attributes such as a face mask, glasses, or face location in an image, and identification of a person. This aligns well with detecting masks/glasses with minimal development effort using pre-built capabilities.\",\n        \"incorrect\": \"Incorrect! The Face API includes attributes for detecting accessories like masks and glasses with minimal effort.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"26\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure Video Analyzer for Media (previously Video Indexer) service that is used to provide a search interface over company videos on your company's website. You need to be able to search for videos based on who is present in the video. What should you do?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Create a person model and associate the model to the videos.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Create person objects and provide face images for each object.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Invite the entire staff of the company to Video Indexer.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Edit the faces in the videos.\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. Upload names to a language model.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Video Indexer supports face detection and celebrity recognition. For non-celebrities, you label faces which adds them to your account's Person model. Associating this model during indexing/reindexing allows recognition and search based on known faces.\",\n        \"incorrect\": \"Incorrect! Video Indexer uses Person models to recognize and search for specific individuals in videos.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"33\",\n      \"type\": \"single_selection\",\n      \"question\": \"You need to build a solution that will use optical character recognition (OCR) to scan sensitive documents by using the Computer Vision API. The solution must NOT be deployed to the public cloud. What should you do?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Build an on-premises web app to query the Computer Vision endpoint.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Host the Computer Vision endpoint in a container on an on-premises server.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Host an exported Open Neural Network Exchange (ONNX) model on an on-premises server.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Build an Azure web app to query the Computer Vision endpoint.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Cognitive Services, including Computer Vision's Read API (OCR), can be deployed in Docker containers, allowing them to run on-premises, meeting the requirement of not deploying to the public cloud while using the standard API.\",\n        \"incorrect\": \"Incorrect! Running the Computer Vision container on-premises keeps data processing local.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"41\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have the following C# method for creating Azure Cognitive Services resources programmatically.\\n```csharp\\nstatic void create_resource(CognitiveServicesManagementClient client, string resource_group_name, string resource_name, string kind, string account_tier, string location)\\n{\\n    CognitiveServicesAccount parameters = new CognitiveServicesAccount(null, null, kind, location, resource_name, new CognitiveServicesAccountProperties(), new Sku(account_tier));\\n    var result = client.Accounts.Create(resource_group_name, resource_name, parameters);\\n}\\n```\\nYou need to call the method to create a free Azure resource in the West US Azure region. The resource will be used to generate captions of images automatically. Which code should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. create_resource(client, \\\"RG1\\\", \\\"res1\\\", \\\"ComputerVision\\\", \\\"F0\\\", \\\"westus\\\")\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. create_resource(client, \\\"RG1\\\", \\\"res1\\\", \\\"CustomVision.Prediction\\\", \\\"F0\\\", \\\"westus\\\")\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. create_resource(client, \\\"RG1\\\", \\\"res1\\\", \\\"ComputerVision\\\", \\\"S0\\\", \\\"westus\\\")\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. create_resource(client, \\\"RG1\\\", \\\"res1\\\", \\\"CustomVision.Prediction\\\", \\\"S0\\\", \\\"westus\\\")\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Image captioning is a feature of the Computer Vision service ('Kind' = 'ComputerVision'). 'F0' specifies the Free pricing tier. 'westus' is the location.\",\n        \"incorrect\": \"Incorrect! Computer Vision provides image captioning, F0 is the free tier, and westus is the location.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"42\",\n      \"type\": \"single_selection\",\n      \"question\": \"You successfully run the following HTTP request.\\nPOST https://management.azure.com/subscriptions/18c51a87-3a69-47a8-aedc-a54745f708a1/resourceGroups/RG1/providers/Microsoft.CognitiveServices/accounts/contoso1/regenerateKey?api-version=2017-04-18\\nBody{\\\"keyName\\\": \\\"Key2\\\"}\\nWhat is the result of the request?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. A key for Azure Cognitive Services was generated in Azure Key Vault.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. A new query key was generated.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. The primary subscription key and the secondary subscription key were rotated.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. The secondary subscription key was reset.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The `regenerateKey` action with `keyName: Key2` specifically regenerates (resets) the secondary subscription key for the specified Cognitive Services account.\",\n        \"incorrect\": \"Incorrect! Specifying 'Key2' targets the secondary subscription key for regeneration.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"43\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are developing a new sales system that will process the video and text from a public-facing website. You plan to notify users that their data has been processed by the sales system. Which responsible AI principle does this help meet?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. transparency\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. fairness\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. inclusiveness\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. reliability and safety\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Transparency involves making AI systems understandable. Notifying users about data processing is a key aspect of being transparent about how the system operates and uses their data.\",\n        \"incorrect\": \"Incorrect! Informing users how their data is used directly supports the principle of Transparency.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"46\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have receipts that are accessible from a URL. You need to extract data from the receipts by using Form Recognizer and the SDK. The solution must use a prebuilt model. Which client and method should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. the FormRecognizerClient client and the StartRecognizeContentFromUri method\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. the FormTrainingClient client and the StartRecognizeContentFromUri method\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. the FormRecognizerClient client and the StartRecognizeReceiptsFromUri method\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. the FormTrainingClient client and the StartRecognizeReceiptsFromUri method\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The `FormRecognizerClient` is used for analysis operations. The `StartRecognizeReceiptsFromUri` method specifically targets the prebuilt receipt model and accepts a URL as input.\",\n        \"incorrect\": \"Incorrect! Use FormRecognizerClient for analysis and the specific StartRecognizeReceiptsFromUri for the prebuilt receipt model with URL input.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"47\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have a collection of 50,000 scanned documents that contain text. You plan to make the text available through Azure Cognitive Search. You need to configure an enrichment pipeline to perform optical character recognition (OCR) and text analytics. The solution must minimize costs. What should you attach to the skillset?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. a new Computer Vision resource\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. a free (Limited enrichments) Cognitive Services resource\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. an Azure Machine Learning Designer pipeline\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. a new Cognitive Services resource that uses the S0 pricing tier\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Incorrect! The free Cognitive Services tier allows only a very limited number of enrichments per day (typically 20 documents total for all skills). For 50,000 documents, a paid tier (like S0) is required. The lowest cost option that can realistically process this volume is S0.\",\n        \"incorrect\": \"Correct! Cognitive Search skillsets require an attached Cognitive Services multi-service resource for billing enrichments like OCR and text analytics. While the Free tier exists, its limits (e.g., 20 documents per indexer per day) are far too low for 50,000 documents. The S0 tier is the standard paid tier needed for this volume, making D the most practical answer, although B is technically the 'cheapest' option if processing time is not a constraint and the user intends to process over many months/years, which is unlikely.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"51\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure Cognitive Search instance that indexes purchase orders by using Form Recognizer. You need to analyze the extracted information by using Microsoft Power BI. The solution must minimize development effort. What should you add to the indexer?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. a projection group\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. a table projection\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. a file projection\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. an object projection\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Knowledge Store projections allow enriched data from the indexing pipeline to be stored outside the search index, typically in Azure Storage. A 'table' projection specifically stores data in Azure Table Storage in a structured format easily consumable by tools like Power BI with minimal effort.\",\n        \"incorrect\": \"Incorrect! Table projections store enriched data in Azure Table Storage, which Power BI can easily connect to.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"64\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure IoT hub that receives sensor data from machinery. You need to build an app that will perform the following actions:\\n- Perform anomaly detection across multiple correlated sensors.\\n- Identify the root cause of process stops.\\n- Send incident alerts.\\nThe solution must minimize development time. Which Azure service should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Azure Metrics Advisor\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Form Recognizer\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Azure Machine Learning\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Anomaly Detector\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Azure Metrics Advisor is designed for time series monitoring, multi-dimensional analysis, anomaly detection across correlated metrics, root cause analysis, and alerting, minimizing development effort for this scenario.\",\n        \"incorrect\": \"Incorrect! Metrics Advisor is specifically designed for multivariate anomaly detection, root cause analysis, and alerting on time series data.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"65\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an app that analyzes images by using the Computer Vision API. You need to configure the app to provide an output for users who are vision impaired. The solution must provide the output in complete sentences. Which API call should you perform?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. readInStreamAsync\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. analyzeImagesByDomainInStreamAsync\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. tagImageInStreamAsync\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. describeImageInStreamAsync\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The Describe Image operation generates a human-readable sentence describing the image content, suitable for alt text or accessibility.\",\n        \"incorrect\": \"Incorrect! The Describe Image API generates full-sentence descriptions of images.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"67\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building an AI solution that will use Sentiment Analysis results from surveys to calculate bonuses for customer service staff. You need to ensure that the solution meets the Microsoft responsible AI principles. What should you do?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Add a human review and approval step before making decisions that affect the staff's financial situation.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Include the Sentiment Analysis results when surveys return a low confidence score.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Use all the surveys, including surveys by customers who requested that their account be deleted and their data be removed.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Publish the raw survey data to a central location and provide the staff with access to the location.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! This aligns with the principles of Accountability and Fairness, ensuring that automated decisions with significant impact on individuals are subject to human oversight and intervention, mitigating potential biases or errors from the AI.\",\n        \"incorrect\": \"Incorrect! Adding human oversight for high-stakes decisions aligns with Accountability and Fairness.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"68\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure subscription that contains a Language service resource named ta1 and a virtual network named vnet1. You need to ensure that only resources in vnet1 can access ta1. What should you configure?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. a network security group (NSG) for vnet1\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Azure Firewall for vnet1\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. the virtual network settings for ta1\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. a Language service container for ta1\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Configuring the networking settings directly on the Language service resource (ta1), specifically by setting up Private Endpoints or Service Endpoints linked to vnet1 and potentially disabling public access, restricts access to the specified VNet.\",\n        \"incorrect\": \"Incorrect! Configuring network settings (like Private Endpoints or VNet service endpoints) on the Language service resource itself restricts access.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"69\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are developing a monitoring system that will analyze engine sensor data, such as rotation speed, angle, temperature, and pressure. The system must generate an alert in response to atypical values.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Application Insights in Azure Monitor\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. metric alerts in Azure Monitor\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Multivariate Anomaly Detection\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Univariate Anomaly Detection\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Multivariate Anomaly Detection (available in Anomaly Detector API or Metrics Advisor) is designed to analyze correlations between multiple time series (sensors) to find systemic anomalies.\",\n        \"incorrect\": \"Incorrect! Analyzing multiple correlated sensors requires Multivariate Anomaly Detection.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"70\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an app named App1 that uses an Azure Cognitive Services model to identify anomalies in a time series data stream. You need to run App1 in a location that has limited connectivity. The solution must minimize costs. What should you use to host the model?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Azure Kubernetes Service (AKS)\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Azure Container Instances\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. a Kubernetes cluster hosted in an Azure Stack Hub integrated system\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. the Docker Engine\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! ACI allows running single containers without managing underlying infrastructure, offering a cost-effective and simpler way to host the model container, suitable for scenarios like limited connectivity where complex orchestration might not be needed.\",\n        \"incorrect\": \"Incorrect! Azure Container Instances (ACI) provides a simple, cost-effective way to run individual containers, suitable for edge scenarios with limited connectivity.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"72\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building a solution that will detect anomalies in sensor data from the previous 24 hours. You need to ensure that the solution scans the entire dataset, at the same time, for anomalies. Which type of detection should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. batch\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. streaming\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. change points\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Batch detection processes a whole dataset (like the previous 24 hours) at once.\",\n        \"incorrect\": \"Incorrect! Analyzing an entire existing dataset (previous 24 hours) at once is batch detection.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"75\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure subscription that contains an Anomaly Detector resource. You deploy a Docker host server named Server1 to the on-premises network. You need to host an instance of the Anomaly Detector service on Server1. Which parameter should you include in the docker run command?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Fluentd\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Billing\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Http Proxy\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Mounts\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The 'Billing' parameter is required for all Cognitive Services containers to specify the endpoint of the associated Azure resource for usage metering.\",\n        \"incorrect\": \"Incorrect! The Billing endpoint parameter is mandatory for running Cognitive Services containers.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"86\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure Video Analyzer for Media (previously Video Indexer) service that is used to provide a search interface over company videos on your company's website. You need to be able to search for videos based on who is present in the video. What should you do?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Create a person model and associate the model to the videos.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Create person objects and provide face images for each object.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Invite the entire staff of the company to Video Indexer.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Edit the faces in the videos.\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. Upload names to a language model.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Video Indexer uses Person models to store known faces. You train this model by labeling unknown faces in videos. Associating the model during indexing allows recognition and searching by name.\",\n        \"incorrect\": \"Incorrect! Create and train a Person Model within Video Indexer by labeling faces.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"92\",\n      \"type\": \"single_selection\",\n      \"question\": \"Your company uses an Azure Cognitive Services solution to detect faces in uploaded images. The method uses the Face API Detect endpoint with `detectionModel=detection_01`. You discover that the solution frequently fails to detect faces in blurred images and in images that contain sideways faces. You need to increase the likelihood that the solution can detect faces in blurred images and images that contain sideways faces. What should you do?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Use a different version of the Face API.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Use the Computer Vision service instead of the Face service.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Use the Identify method instead of the Detect method.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Change the detection model.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Detection models `detection_02` and `detection_03` offer improved accuracy for challenging images, including blur, sideways orientations, and small faces, compared to `detection_01`. Changing the `detectionModel` parameter in the API call is the correct approach.\",\n        \"incorrect\": \"Incorrect! Newer detection models (`detection_02`, `detection_03`) are better at handling challenging images like blurred or sideways faces.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"93\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have the following Python function for creating Azure Cognitive Services resources programmatically.\\n```python\\ndef create_resource(resource_group_name, resource_name, kind, account_tier, location):\\n    parameters = CognitiveServicesAccount(sku=Sku(name=account_tier), kind=kind, location=location, properties={})\\n    client = CognitiveServicesManagementClient(credential, subscription_id)\\n    result = client.accounts.begin_create(resource_group_name, resource_name, parameters).result()\\n```\\nYou need to call the function to create a free Azure resource in the West US Azure region. The resource will be used to generate captions of images automatically. Which code should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"ComputerVision\\\", \\\"F0\\\", \\\"westus\\\")\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"CustomVision.Prediction\\\", \\\"F0\\\", \\\"westus\\\")\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"ComputerVision\\\", \\\"S0\\\", \\\"westus\\\")\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"CustomVision.Prediction\\\", \\\"S0\\\", \\\"westus\\\")\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Image captioning is part of 'ComputerVision'. 'F0' represents the Free tier. 'westus' is the location.\",\n        \"incorrect\": \"Incorrect! Image captioning is provided by ComputerVision, F0 is the free tier, and westus is the location.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"96\",\n      \"type\": \"single_selection\",\n      \"question\": \"You need to build a solution that will use optical character recognition (OCR) to scan sensitive documents by using the Computer Vision API. The solution must NOT be deployed to the public cloud. What should you do?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Build an on-premises web app to query the Computer Vision endpoint.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Host the Computer Vision endpoint in a container on an on-premises server.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Host an exported Open Neural Network Exchange (ONNX) model on an on-premises server.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Build an Azure web app to query the Computer Vision endpoint.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Running the Computer Vision Read API container on-premises keeps the data and processing within the local network, meeting the requirement.\",\n        \"incorrect\": \"Incorrect! Running the Computer Vision container on-premises allows local processing without sending data to the public cloud.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"97\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure Cognitive Search solution and a collection of handwritten letters stored as JPEG files. You plan to index the collection. The solution must ensure that queries can be performed on the contents of the letters. You need to create an indexer that has a skillset. Which skill should you include?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. image analysis\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. optical character recognition (OCR)\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. key phrase extraction\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. document extraction\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The OCR skill (specifically using its 'printed' or 'handwritten' mode) is designed to extract text content from images, including scanned documents and handwritten letters, making it searchable.\",\n        \"incorrect\": \"Incorrect! The OCR skill extracts text (including handwritten) from images, making it searchable.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"99\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an app that captures live video of exam candidates. You need to use the Face service to validate that the subjects of the videos are real people.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Call the face detection API and retrieve the face rectangle by using the FaceRectangle attribute.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Call the face detection API repeatedly and check for changes to the FaceAttributes.HeadPose attribute.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Call the face detection API and use the FaceLandmarks attribute to calculate the distance between pupils.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Call the face detection API repeatedly and check for changes to the FaceAttributes.Accessories attribute.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Natural head movements (changes in yaw, pitch, roll in HeadPose) over a short time suggest a live person rather than a static photo. While not foolproof, it's a basic liveness check available through standard attributes.\",\n        \"incorrect\": \"Incorrect! Checking for natural changes in head pose over time is a basic method to infer liveness.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"100\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure subscription that contains an AI enrichment pipeline in Azure Cognitive Search and an Azure Storage account that has 10 GB of scanned documents and images. You need to index the documents and images in the storage account. The solution must minimize how long it takes to build the index. What should you do?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. From the Azure portal, configure parallel indexing.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. From the Azure portal, configure scheduled indexing.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Configure field mappings by using the REST API.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Create a text-based indexer by using the REST API.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Parallel indexing allows the indexer to process multiple documents concurrently, significantly speeding up the indexing process for large datasets, provided the search service has sufficient scale (partitions/replicas).\",\n        \"incorrect\": \"Incorrect! Parallel indexing processes multiple documents simultaneously, reducing overall indexing time.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"102\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have a mobile app that manages printed forms. You need the app to send images of the forms directly to Forms Recognizer to extract relevant information. For compliance reasons, the image files must not be stored in the cloud. In which format should you send the images to the Form Recognizer API endpoint?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. raw image binary\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. form URL encoded\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. JSON\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! To avoid storing the image in the cloud (e.g., by providing a URL), the image can be sent directly in the request body as raw binary data (octet-stream). This meets the compliance requirement.\",\n        \"incorrect\": \"Incorrect! Sending the image as raw binary data in the request body avoids storing it externally.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"103\",\n      \"type\": \"single_selection\",\n      \"question\": \"You plan to build an app that will generate a list of tags for uploaded images. The app must meet the following requirements:\\n- Generate tags in a user's preferred language.\\n- Support English, French, and Spanish.\\n- Minimize development effort.\\nYou need to build a function that will generate the tags for the app. Which Azure service endpoint should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Content Moderator Image Moderation\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Custom Vision image classification\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Computer Vision Image Analysis\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Custom Translator\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The Computer Vision Image Analysis endpoint (specifically the 'tag' feature) provides thousands of recognizable objects, living things, scenery, and actions. It supports multiple languages for the output tags with minimal development effort using a pre-built model.\",\n        \"incorrect\": \"Incorrect! Computer Vision Image Analysis provides pre-built image tagging with multi-language support.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"107\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building an app that will include one million scanned magazine articles. Each article will be stored as an image file. You need to configure the app to extract text from the images. The solution must minimize development effort.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Computer Vision Image Analysis\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. the Read API in Computer Vision\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Form Recognizer\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Azure Cognitive Service for Language\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The Read API (also known as OCR in v3.2+) is specifically designed for extracting large amounts of printed and handwritten text from images and multi-page PDF documents, making it ideal for scanned articles with minimal development effort using the pre-built model.\",\n        \"incorrect\": \"Incorrect! The Computer Vision Read API (OCR) is optimized for extracting text from dense documents like articles.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"108\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have a 20-GB video file named File1.avi that is stored on a local drive. You need to index File1.avi by using the Azure Video Indexer website. What should you do first?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Upload File1.avi to an Azure Storage queue.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Upload File1.avi to the Azure Video Indexer website.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Upload File1.avi to Microsoft OneDrive.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Upload File1.avi to the www.youtube.com webpage.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The Video Indexer website provides an interface to directly upload video files from a local drive or provide a URL for processing. Note: There might be size limits for direct upload vs URL, but upload is the first step.\",\n        \"incorrect\": \"Incorrect! The Video Indexer portal allows direct file uploads for processing.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"115\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building a Conversational Language Understanding model for an e-commerce chatbot. Users can speak or type their billing address when prompted by the chatbot. You need to construct an entity to capture billing addresses. Which entity type should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. machine learned\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Regex\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. list\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Pattern.any\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! A billing address is complex and has varied structure ('123 Main St, Anytown, CA 90210', 'PO Box 100', etc.). A machine learned entity is best suited for learning to identify such complex, context-dependent entities from examples.\",\n        \"incorrect\": \"Incorrect! Addresses have variable structure and context, making machine learned entities the best choice.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"118\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building a conversational language understanding model. You need to enable active learning.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Add show-all-intents=true to the prediction endpoint query.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Enable speech priming.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Add log=true to the prediction endpoint query.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Enable sentiment analysis.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Setting the `log=true` query parameter when calling the prediction endpoint logs the utterance, allowing it to be reviewed later for active learning suggestions.\",\n        \"incorrect\": \"Incorrect! Setting log=true logs endpoint utterances, enabling active learning.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"120\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building a Language Understanding model for an e-commerce platform. You need to construct an entity to capture billing addresses. Which entity type should you use for the billing address?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. machine learned\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Regex\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. geographyV2\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Pattern.any\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. list\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! As explained in Q115, addresses are complex and variable, best handled by machine learned entities trained on examples.\",\n        \"incorrect\": \"Incorrect! Machine learned entities are best for complex, variable data like addresses.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"121\",\n      \"type\": \"single_selection\",\n      \"question\": \"You need to upload speech samples to a Speech Studio project for use in training. How should you upload the samples?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Combine the speech samples into a single audio file in the .wma format and upload the file.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Upload a .zip file that contains a collection of audio files in the .wav format and a corresponding text transcript file.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Upload individual audio files in the FLAC format and manually upload a corresponding transcript in Microsoft Word format.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Upload individual audio files in the .wma format.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Speech Studio accepts datasets packaged as a .zip file containing multiple audio files (often .wav or .mp3) and a single transcript file mapping filenames to their text content.\",\n        \"incorrect\": \"Incorrect! Speech Studio typically requires a zip file containing audio files (e.g., WAV) and a single transcript text file.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"127\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are training a Language Understanding model for a user support system. You create the first intent named GetContactDetails and add 200 examples. You need to decrease the likelihood of a false positive.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Enable active learning.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Add a machine learned entity.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Add additional examples to the GetContactDetails intent.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Add examples to the None intent.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Adding varied examples of utterances that should *not* trigger the 'GetContactDetails' intent (or any other defined intent) to the 'None' intent helps the model learn the boundaries between intents and reduces the chance of misclassifying irrelevant utterances (false positives).\",\n        \"incorrect\": \"Incorrect! Adding examples to the None intent helps the model learn what is *not* a specific intent, reducing false positives.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"129\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have the following C# method.\\n```csharp\\nstatic void create_resource(string resource_group_name, string resource_name, string kind, string account_tier, string location)\\n{\\n    CognitiveServicesManagementClient client = /* Assume initialized */;\\n    CognitiveServicesAccount parameters = new CognitiveServicesAccount(sku: new Sku(account_tier), kind: kind, location: location);\\n    var result = client.Accounts.BeginCreate(resource_group_name, resource_name, parameters).Result;\\n}\\n```\\nYou need to deploy an Azure resource to the East US Azure region. The resource will be used to perform sentiment analysis. How should you call the method?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"ContentModerator\\\", \\\"S0\\\", \\\"eastus\\\")\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"TextAnalytics\\\", \\\"S0\\\", \\\"eastus\\\")\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"ContentModerator\\\", \\\"Standard\\\", \\\"East US\\\")\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"TextAnalytics\\\", \\\"Standard\\\", \\\"East US\\\")\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Sentiment analysis is part of the 'TextAnalytics' service kind (or the newer 'Language' kind). 'S0' is a valid standard tier name. 'eastus' is the location.\",\n        \"incorrect\": \"Incorrect! Sentiment analysis falls under the 'TextAnalytics' (or 'Language') kind, 'S0' is a standard tier, and 'eastus' is the location.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"130\",\n      \"type\": \"single_selection\",\n      \"question\": \"You build a Conversational Language Understanding model by using the Language Services portal. You export the model as a JSON file as shown in the following sample:\\n```json\\n{\\n  \\\"text\\\": \\\"average amount of rain by month at chicago last year\\\",\\n  \\\"intent\\\": \\\"Weather.CheckWeatherValue\\\",\\n  \\\"entities\\\": [\\n    {\\n      \\\"entity\\\": \\\"Weather.WeatherRange\\\",\\n      \\\"startPos\\\": 0,\\n      \\\"endPos\\\": 6,\\n      \\\"children\\\": []\\n    },\\n    {\\n      \\\"entity\\\": \\\"Weather.WeatherCondition\\\",\\n      \\\"startPos\\\": 18,\\n      \\\"endPos\\\": 21,\\n      \\\"children\\\": []\\n    },\\n    {\\n      \\\"entity\\\": \\\"Weather.Historic\\\",\\n      \\\"startPos\\\": 23,\\n      \\\"endPos\\\": 30,\\n      \\\"children\\\": []\\n    }\\n  ]\\n}\\n```\\nTo what does the Weather.Historic entity correspond in the utterance?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. by month\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. chicago\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. rain\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. location\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The 'Weather.Historic' entity has `startPos: 23` and `endPos: 30`. Counting characters in the utterance 'average amount of rain by month at chicago last year', index 23 starts at 'b' in 'by month' and index 30 is the end of 'month'.\",\n        \"incorrect\": \"Incorrect! The start and end positions (23 to 30) correspond to 'by month' in the utterance.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"131\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are examining the Text Analytics output of an application. The text analyzed is: \\u201cOur tour guide took us up the Space Needle during our trip to Seattle last week.\\u201d The response contains the data shown in the following table:\\nText | Category | ConfidenceScore\\n---|---|---\\nTour guide | PersonType | 0.45\\nSpace Needle | Location | 0.38\\nTrip | Event | 0.78\\nSeattle | Location | 0.78\\nLast week | DateTime | 0.80\\nWhich Text Analytics API is used to analyze the text?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Entity Linking\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Named Entity Recognition\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Sentiment Analysis\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Key Phrase Extraction\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Named Entity Recognition (NER) identifies and categorizes entities in text into predefined categories like Person, Location, Organization, DateTime, Event, etc., which matches the output shown.\",\n        \"incorrect\": \"Incorrect! Identifying and categorizing entities like PersonType, Location, Event, and DateTime is Named Entity Recognition (NER).\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"134\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have the following data sources:\\n- Finance: On-premises Microsoft SQL Server database\\n- Sales: Azure Cosmos DB using the Core (SQL) API\\n- Logs: Azure Table storage\\n- HR: Azure SQL database\\nYou need to ensure that you can search all the data by using the Azure Cognitive Search REST API. What should you do?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Migrate the data in HR to Azure Blob storage.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Migrate the data in HR to the on-premises SQL server.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Export the data in Finance to Azure Data Lake Storage.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Ingest the data in Logs into Azure Sentinel.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! On-premises SQL Server is NOT a directly supported data source for Cognitive Search indexers. Azure Cosmos DB (SQL API), Azure Table Storage, and Azure SQL Database ARE supported. To make the Finance data searchable via a standard indexer, it must be moved to a supported Azure source like Azure SQL DB, Azure Blob Storage, or Azure Data Lake Storage Gen2.\",\n        \"incorrect\": \"Incorrect! On-premises SQL Server is not a directly supported data source for Cognitive Search indexers. Moving the Finance data to a supported Azure source like ADLS Gen2 is necessary.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"137\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have a Language service resource that performs the following:\\n- Sentiment analysis\\n- Named Entity Recognition (NER)\\n- Personally Identifiable Information (PII) identification\\nYou need to prevent the resource from persisting input data once the data is analyzed. Which query parameter in the Language service API should you configure?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. model-version\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. piiCategories\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. showStats\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. loggingOptOut\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Setting `loggingOptOut=true` in the API request prevents the service from logging the input text for 48 hours, helping with compliance and privacy.\",\n        \"incorrect\": \"Incorrect! The loggingOptOut parameter prevents the service from logging input text.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"138\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure Cognitive Services model named Model1 that identifies the intent of text input. You develop an app in C# named App1. You need to configure App1 to use Model1. Which package should you add to App1?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Universal.Microsoft.CognitiveServices.Speech\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. SpeechServicesToolkit\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Azure.AI.Language.Conversations\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Xamarin.Cognitive.Speech\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! This is the correct .NET SDK package for interacting with the newer Conversational Language Understanding (CLU) service, which identifies intents and entities.\",\n        \"incorrect\": \"Incorrect! The Azure.AI.Language.Conversations NuGet package contains the SDK for Conversational Language Understanding.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"140\",\n      \"type\": \"single_selection\",\n      \"question\": \"You need to measure the public perception of your brand on social media by using natural language processing. Which Azure service should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Language service\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Content Moderator\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Computer Vision\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Form Recognizer\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The Azure Cognitive Service for Language includes Sentiment Analysis and Opinion Mining features, which are designed to analyze text (like social media posts) and determine the positive, negative, or neutral sentiment, effectively measuring public perception.\",\n        \"incorrect\": \"Incorrect! The Language service's Sentiment Analysis feature is ideal for measuring public perception from text.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"142\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure Cognitive Search instance that indexes purchase orders by using Form Recognizer. You need to analyze the extracted information by using Microsoft Power BI. The solution must minimize development effort. What should you add to the indexer?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. a projection group\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. a table projection\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. a file projection\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. an object projection\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Knowledge Store table projections save enriched data (like Form Recognizer output) into Azure Table Storage. Power BI has built-in connectors for Table Storage, making it easy to analyze the structured data with minimal effort.\",\n        \"incorrect\": \"Incorrect! Table projections output structured data to Azure Table Storage, easily consumable by Power BI.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"143\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building a social media extension that will convert text to speech. The solution must meet the following requirements:\\n- Support messages of up to 400 characters.\\n- Provide users with multiple voice options.\\n- Minimize costs.\\nYou create an Azure Cognitive Services resource.\\nWhich Speech API endpoint provides users with the available voice options?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. https://[region].api.cognitive.microsoft.com/speechtotext/v3.0/models/base\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. https://[region].customvoice.api.speech.microsoft.com/api/texttospeech/v3.0/longaudiosynthesis/voices\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. https://[region].tts.speech.microsoft.com/cognitiveservices/voices/list\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. https://[region].voice.speech.microsoft.com/cognitiveservices/v1?deploymentId={deploymentId}\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! This REST API endpoint specifically lists the available standard and neural Text-to-Speech voices for a given region.\",\n        \"incorrect\": \"Incorrect! The /voices/list endpoint provides the available TTS voices.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"148\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are enriching your Azure Cognitive Search service with knowledge store projections. The main requirement is to save the image extracted from the documents. Which type of projection you need to use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Tables\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Objects\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Files\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Message\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! File projections are specifically designed to save binary files, such as normalized images extracted during the skillset execution (e.g., by the OCR skill), into Azure Blob Storage.\",\n        \"incorrect\": \"Incorrect! File projections are used to save binary files like images extracted during enrichment.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"149\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have been asked to develop a real-time speech-to-speech translation prototype that will be showcased in the next corporate webinar. The prototype will translate conversational English to Spanish, French, and Italian for now. What is the most suitable approach to follow?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Develop one app using Azure AI Translator and select translation of English into Spanish, French, and Italian.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Develop one app using the Speech Service SDK and add Spanish, French, and Italian as target translation languages.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Develop separate apps using the Speech Service SDK to translate English into one of the three target languages.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Develop one app to convert the speech to text using the Speech Service SDK, translate the speech with Azure AI Translator, and then read the translations with Azure AI Immersive Reader.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The Speech SDK's `SpeechTranslationConfig` allows specifying the source speech language and multiple target translation languages (`AddTargetLanguage`). The `TranslationRecognizer` then provides both the original transcription and translations to the specified target languages, which can be synthesized back to speech if needed (speech-to-speech).\",\n        \"incorrect\": \"Incorrect! The Speech SDK supports real-time speech-to-speech translation to multiple target languages within a single recognizer.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"151\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are training a Conversational Language Understanding (CLU) application. After you finish training a CLU app, it receives a prediction score of 0.01. How can you describe the result?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. A definite failure to match\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. A high-confidence, low-error model\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. A low-confidence, high-error model\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. A definite match\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! A prediction score close to 0 (like 0.01) indicates very low confidence in the predicted intent or entity. This usually correlates with a high probability of error or misclassification.\",\n        \"incorrect\": \"Incorrect! A prediction score close to 0 indicates very low confidence.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"152\",\n      \"type\": \"single_selection\",\n      \"question\": \"Your company decided to use the Azure AI Vision to analyze images for insights extraction. Given a set of input parameters, such as region/transactions and required features, you have been asked to estimate the upfront and recurring fees for implementing and using this service in a production-level environment. How could you estimate costs?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Collect the required features/inputs elements and send a request to Azure support.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Use the Azure Price Calculator to estimate costs.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Create the resources, send sample traffic, and then extrapolate costs using Cost Analysis in the Azure Portal.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Hire a specialized firm for an accurate estimation.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The Azure Pricing Calculator is the standard tool for estimating costs for Azure services based on region, tier, usage volume (e.g., number of transactions), and specific features used.\",\n        \"incorrect\": \"Incorrect! The Azure Pricing Calculator is designed for estimating costs based on service configuration and expected usage.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"153\",\n      \"type\": \"single_selection\",\n      \"question\": \"You developed a chatbot using Conversational Language Understanding (CLU) and published it. The end user interacts with the bot by sending inputs to be interpreted by the application and receiving responses. What is the exact nomination of those inputs?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Utterances\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Intents\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Entities\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Patterns\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! In the context of CLU and LUIS, the raw input text (or speech transcript) provided by the user is referred to as an utterance.\",\n        \"incorrect\": \"Incorrect! User input to a CLU/LUIS model is called an utterance.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"155\",\n      \"type\": \"single_selection\",\n      \"question\": \"A developer is working with Azure Cognitive Search and wants to enhance the current pipeline by adding searchable content out of raw unstructured text in multiple languages and apply language detection and translation. What is the most appropriate approach to fulfill those requirements?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Use AI Enrichment with custom skills to integrate with Translator and Computer Vision API.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Train and deploy custom models for language detection and translation, then use AI Enrichment to call those APIs.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Use AI Enrichment with built-in skills for language detection and translation.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Train and deploy custom models for language detection and translation then call those API right after the source documents are 'cracked'.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Cognitive Search provides built-in cognitive skills, including Language Detection and Text Translation, which can be easily added to an AI enrichment skillset to process multilingual text.\",\n        \"incorrect\": \"Incorrect! Cognitive Search has built-in skills for language detection and translation.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"156\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have been asked to build a solution using Azure and ensure its compliance with Microsoft AI principles. Which of the following is not a Microsoft AI principle?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Privacy and Security\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Transparency\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Accountability\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Scalability\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Scalability is a general cloud computing concept (and desirable for AI solutions) but is not one of the six core Microsoft Responsible AI principles (which are: Fairness, Reliability & Safety, Privacy & Security, Inclusiveness, Transparency, Accountability).\",\n        \"incorrect\": \"Incorrect! The six Microsoft Responsible AI principles are Fairness, Reliability & Safety, Privacy & Security, Inclusiveness, Transparency, and Accountability. Scalability is not one of them.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"157\",\n      \"type\": \"single_selection\",\n      \"question\": \"You want to classify URL-based images using Custom Vision Prediction API. Review the following Python 3 code fragment.\\n```python\\nimport http.client, urllib.request, urllib.parse, urllib.error, base64\\nheaders = {\\n    'Content-Type': 'application/json',\\n    'Prediction-Key': '{prediction key}',\\n}\\ntry:\\n    body = \\\"{'Url' : '\\\" + url + \\\"' }\\\"\\n    conn = http.client.HTTPSConnection( 'southcentralus.api.cognitive.microsoft.com' )\\n    conn.request(\\\"POST\\\", \\\"/customvision/v3.0/Prediction/{projectId}/{PROJECT_TYPE}/iterations/{iterationName}/{IMAGE_TYPE}\\\", body, headers)\\n    response = conn.getresponse()\\n    data = response.read()\\n    print(data)\\n    conn.close()\\nexcept Exception as e:\\n    print(\\\"[Errno {}] {}\\\".format(e.errno, e.strerror))\\n```\\nWhat parameters should replace PROJECT_TYPE and IMAGE_TYPE in this code snippet?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Enter \\u2018classify\\u2019 for {PROJECT_TYPE} parameter and enter \\u2018url\\u2019 for the {IMAGE_TYPE} parameter.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Enter \\u2018detect\\u2019 for the {PROJECT_TYPE} parameter and enter \\u2018image\\u2019 for the {IMAGE_TYPE} parameter.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Enter \\u2018classify\\u2019 for the {PROJECT_TYPE} parameter and enter \\u2018image\\u2019 for the {IMAGE_TYPE} parameter.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Enter \\u2018detect\\u2019 for the {PROJECT_TYPE} parameter and \\u2018url' for the {IMAGE_TYPE} parameter.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The problem states the goal is to 'classify' images. Since the input is a URL (provided in the 'body'), the endpoint variation for URL-based input is used, indicated by 'url' in the path.\",\n        \"incorrect\": \"Incorrect! Use 'classify' for image classification projects and 'url' when providing an image URL in the request body.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"158\",\n      \"type\": \"single_selection\",\n      \"question\": \"Which of the following techniques is not used for natural language processing?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Tokenization\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Stemming\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Lemmatization\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Optical Character Recognition\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Optical Character Recognition (OCR) is used in computer vision to extract text *from images*. NLP techniques are then applied *to* the extracted text. OCR itself is not an NLP technique.\",\n        \"incorrect\": \"Incorrect! OCR extracts text from images (Computer Vision); NLP processes the text itself.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"159\",\n      \"type\": \"single_selection\",\n      \"question\": \"Consider the following C# Computer Vision API code fragment:\\n```csharp\\nforeach (var category in results.Categories)\\n{\\n    if (category.Detail?.Celebrities != null)\\n    {\\n        foreach (var celeb in category.Detail.Celebrities)\\n        {\\n             Console.WriteLine($\\\"{celeb.Name} with confidence {celeb.Confidence} at location {celeb.FaceRectangle.Left}, \\\" +\\n             $\\\"{celeb.FaceRectangle.Top}, {celeb.FaceRectangle.Height}, {celeb.FaceRectangle.Width}\\\");\\n        }\\n    }\\n}\\nConsole.WriteLine();\\n```\\nWhat is this segment of code designed to do?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Analyze image details\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Detect celebrities in images\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Detect image categories\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Detect faces in images\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The code iterates through `results.Categories`, checks for `category.Detail.Celebrities`, and then iterates through each `celeb` in that collection, printing the celebrity's name, confidence, and face rectangle. This clearly indicates it's processing detected celebrity information.\",\n        \"incorrect\": \"Incorrect! The code specifically checks for and iterates through `category.Detail.Celebrities`.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"160\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have been asked by your management to process all internal documents such as contracts, and invoices. This process needs to identify and classify personal and sensitive information that may exist to be compliant with the regulation and respect customer privacy. What is the most suitable approach to use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Develop a custom machine learning model to identify efficiently personal info and sensitive data.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Use Computer Vision Optical Character Recognition and custom scripts using heuristics.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Use the Azure AI Language Named Entity Recognition (NER) to identify personal info and classify the documents.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Process the documents by integrating the Text Analytics Key Phrases API with Power BI.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Azure AI Language's NER feature includes pre-built categories for identifying Personally Identifiable Information (PII) and sensitive data within text, providing a suitable and efficient approach.\",\n        \"incorrect\": \"Incorrect! Azure AI Language NER has built-in capabilities for PII detection.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"161\",\n      \"type\": \"single_selection\",\n      \"question\": \"Your company must process hundreds of sales receipts manually and wants to automate the process. All the receipts are available in JPEG and PDF format and 2-3 MB in size. You decided to choose an Azure AI service for such cases. What is the most appropriate service to use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Azure AI Vision\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Azure AI Custom Vision\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Azure AI Document Intelligence\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Azure AI Personalizer\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Azure AI Document Intelligence (formerly Form Recognizer) offers a prebuilt receipt model specifically designed to extract key information (merchant name, date, total, etc.) from receipts in various formats like JPEG and PDF.\",\n        \"incorrect\": \"Incorrect! Azure AI Document Intelligence (Form Recognizer) has a prebuilt model specifically for receipts.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"164\",\n      \"type\": \"single_selection\",\n      \"question\": \"Which of the following scenarios is not suited for built-in skills for Azure Cognitive Search?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Scanned documents (JPEG) that you want to make full-text searchable.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Multi-lingual content against which you want to apply language detection and possibly text translation.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Unstructured or semi-structured documents containing content that has inherent meaning or context that is hidden in the larger document.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Identify and extract text, key-value pairs, selection marks, or tables from your documents as forms.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Extracting structured form data (key-value pairs, tables) typically requires Azure AI Document Intelligence (Form Recognizer). While Document Intelligence can be integrated as a *custom skill*, it's not a standard *built-in skill* within Cognitive Search itself for this detailed form extraction.\",\n        \"incorrect\": \"Incorrect! Detailed form extraction (key-value pairs, tables) requires Azure AI Document Intelligence, typically integrated as a custom skill, not a built-in skill.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"166\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have the following Python method.\\n```python\\ndef create_resource(resource_group_name, resource_name, kind, account_tier, location):\\n    parameters = CognitiveServicesAccount(sku=Sku(name=account_tier), kind=kind, location=location, properties={})\\n    client = CognitiveServicesManagementClient(credential, subscription_id)\\n    result = client.accounts.begin_create(resource_group_name, resource_name, parameters).result()\\n```\\nYou need to deploy an Azure resource to the East US Azure region. The resource will be used to perform sentiment analysis. How should you call the method?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"TextAnalytics\\\", \\\"Standard\\\", \\\"East US\\\")\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"ContentModerator\\\", \\\"S0\\\", \\\"eastus\\\")\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"ContentModerator\\\", \\\"Standard\\\", \\\"East US\\\")\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. create_resource(\\\"RG1\\\", \\\"res1\\\", \\\"TextAnalytics\\\", \\\"S0\\\", \\\"eastus\\\")\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Sentiment analysis uses the 'TextAnalytics' (or 'Language') kind. 'S0' is a valid standard tier SKU name. 'eastus' is the location.\",\n        \"incorrect\": \"Incorrect! Use 'TextAnalytics' kind, 'S0' tier, and 'eastus' location.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"167\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have the following C# function.\\n```csharp\\nstatic void MyFunction(TextAnalyticsClient textAnalyticsClient, string text)\\n{\\n    var response = textAnalyticsClient.ExtractKeyPhrases(text);\\n    Console.WriteLine(\\\"Key phrases:\\\");\\n    foreach (string keyphrase in response.Value)\\n    {\\n        Console.WriteLine($\\\"{keyphrase}\\\");\\n    }\\n}\\n```\\nYou call the function by using the following code.\\n`MyFunction(textAnalyticsClient, \\\"the quick brown fox jumps over the lazy dog\\\");`\\nWhich output will you receive?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. The quick\\\\nThe lazy\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. the quick brown fox jumps over the lazy dog\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. jumps over the\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. quick brown fox\\\\nlazy dog\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The Key Phrase Extraction algorithm identifies the most salient noun phrases. In this common pangram, 'quick brown fox' and 'lazy dog' are the key phrases likely to be extracted.\",\n        \"incorrect\": \"Incorrect! Key Phrase Extraction identifies 'quick brown fox' and 'lazy dog' as the main concepts.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"179\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building a retail kiosk system that will use a custom neural voice. You acquire audio samples and consent from the voice talent. You need to create a voice talent profile. What should you upload to the profile?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. a .zip file that contains 10-second .wav files and the associated transcripts as .txt files\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. a five-minute .flac audio file and the associated transcript as a .txt file\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. a .wav or .mp3 file of the voice talent consenting to the creation of a synthetic version of their voice\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. a five-minute .wav or .mp3 file of the voice talent describing the kiosk system\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Creating a voice talent profile requires uploading an audio recording where the voice talent reads a specific consent statement provided by Microsoft, verifying their identity and agreement.\",\n        \"incorrect\": \"Incorrect! The voice talent profile requires an audio recording of the consent statement.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"185\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are developing an app that will use the Decision and Language APIs. You need to provision resources for the app. The solution must ensure that each service is accessed by using a single endpoint and credential. Which type of resource should you create?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Language\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Speech\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Azure Cognitive Services\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Content Moderator\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The multi-service 'Azure Cognitive Services' resource provides a single key and endpoint to access multiple underlying services, including Language, Speech, Vision, and Decision APIs.\",\n        \"incorrect\": \"Incorrect! The Azure Cognitive Services multi-service resource provides a single key/endpoint for multiple services like Language and Decision.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"186\",\n      \"type\": \"single_selection\",\n      \"question\": \"You are building an Azure AI Language Understanding solution. You discover that many intents have similar utterances containing airport names or airport codes. You need to minimize the number of utterances used to train the model. Which type of custom entity should you use?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Pattern.any\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. machine-learning\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. regular expression\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. list\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! A List entity is ideal for a defined, finite set of items like airport names or codes. By providing the list (e.g., 'JFK', 'LAX', 'Heathrow') and optional synonyms ('Kennedy Airport', 'Los Angeles International'), you explicitly tell the model what these terms represent. The model can then generalize from fewer examples containing these list items compared to training a machine-learned entity to discover them contextually or using a broad Pattern.any.\",\n        \"incorrect\": \"Incorrect. A List entity is the most efficient way to handle a known set of specific terms like airport names/codes, allowing the model to generalize with fewer training utterances compared to other entity types.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"190\",\n      \"type\": \"single_selection\",\n      \"question\": \"You have an Azure subscription that contains an Azure Cognitive Service for Language resource. You need to identify the URL of the REST interface for the Language service. Which blade should you use in the Azure portal?\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Identity\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Keys and Endpoint\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Networking\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Properties\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The 'Keys and Endpoint' blade displays the subscription keys and the base Endpoint URL required to interact with the service's REST API.\",\n        \"incorrect\": \"Incorrect! The Endpoint URL is found on the 'Keys and Endpoint' blade.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"191\",\n      \"type\": \"single_selection\",\n      \"question\": \"You develop a custom question answering project in Azure Cognitive Service for Language. The project will be used by a chatbot. You need to configure the project to engage in multi-turn conversations.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Add follow-up prompts.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Enable active learning.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Add alternate questions.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Enable chit-chat.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Follow-up prompts are specifically designed to enable multi-turn conversations in question answering by presenting related questions or options after an initial answer, guiding the user through a conversational flow.\",\n        \"incorrect\": \"Incorrect! Follow-up prompts enable multi-turn conversations in Custom Question Answering.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    }\n  ]\n}"
    },
    {
      "filepath": "app/data/quizzes/azure-a102/clean_multi_questions.json",
      "content": "{\n  \"questions\": [\n    {\n      \"id\": \"3\",\n      \"type\": \"multi\",\n      \"question\": \"You are developing a new sales system that will process the video and text from a public-facing website. You plan to monitor the sales system to ensure that it provides equitable results regardless of the user's location or background. Which two responsible AI principles provide guidance to meet the monitoring requirements? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\",\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. transparency\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. fairness\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. inclusiveness\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. reliability and safety\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. privacy and security\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Fairness ensures equitable treatment, and inclusiveness ensures that the system serves all groups. Together they provide guidance for monitoring equitable outcomes.\",\n        \"incorrect\": \"Incorrect! Review the principles that directly impact equitable treatment and inclusion.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"163\",\n      \"type\": \"multi\",\n      \"question\": \"You just received the results of the customer experience tests campaign for a recently released Conversational Language Understanding (CLU) app. You notice that the majority of the feedback is about inaccurate responses given to the customers. What modifications could you implement to enhance the prediction accuracy of the CLU app? (Choose 2 answers)\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Enable active learning for the current application.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Build a new version of the application with a collection of 'good' utterances.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Add entity roles to your CLU application.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Duplicate the utterances for your CLU application.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Active learning suggests utterances from endpoint traffic that the model is unsure about. Reviewing and correctly labeling these helps improve the model's accuracy over time. Additionally, adding more diverse and representative ('good') utterances directly to the training data for relevant intents and entities will also enhance prediction accuracy.\",\n        \"incorrect\": \"Incorrect! Both enabling active learning (to improve from real-world data) and adding more high-quality training utterances directly improve model accuracy.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"5\",\n      \"type\": \"multi\",\n      \"question\": \"You build a custom Form Recognizer model. You receive sample files to use for training the model as shown in the following table.\\nName | Type | Size\\nFile1 | PDF | 20 MB\\nFile2 | MP4 | 100 MB\\nFile3 | JPG | 20 MB\\nFile4 | PDF | 100 MB\\nFile5 | GIF | 1 MB\\nFile6 | JPG | 40 MB\\nWhich three files can you use to train the model? Each correct answer presents a complete solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"c\",\n        \"f\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. File1\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. File2\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. File3\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. File4\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. File5\"\n        },\n        {\n          \"id\": \"f\",\n          \"text\": \"F. File6\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Form Recognizer accepts PDFs (with embedded text) and image formats like JPG that are less than 50 MB. Files File1, File3, and File6 meet these criteria.\",\n        \"incorrect\": \"Incorrect! Check the file formats and sizes that are supported by Form Recognizer.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"6\",\n      \"type\": \"multi\",\n      \"question\": \"A customer uses Azure Cognitive Search. The customer plans to enable server-side encryption and use customer-managed keys (CMK) stored in Azure. What are three implications of the planned change? Each correct answer presents a complete solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"b\",\n        \"f\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. The index size will increase.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Query times will increase.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. A self-signed X.509 certificate is required.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. The index size will decrease.\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. Query times will decrease.\"\n        },\n        {\n          \"id\": \"f\",\n          \"text\": \"F. Azure Key Vault is required.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Enabling CMK encryption can slightly increase index size and query times due to encryption overhead and requires Azure Key Vault to manage the keys.\",\n        \"incorrect\": \"Incorrect! Revisit the implications of using customer-managed keys with Cognitive Search.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"11\",\n      \"type\": \"multi\",\n      \"question\": \"You plan to provision a QnA Maker service in a new resource group named RG1. In RG1, you create an App Service plan named AP1. Which two Azure resources are automatically created in RG1 when you provision the QnA Maker service? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"d\",\n        \"e\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Language Understanding\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Azure SQL Database\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Azure Storage\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Azure Cognitive Search\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. Azure App Service\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Provisioning QnA Maker automatically creates an Azure Cognitive Search service (for indexing) and an Azure App Service (to host the endpoint).\",\n        \"incorrect\": \"Incorrect! Review which dependent resources are created when provisioning QnA Maker.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"27\",\n      \"type\": \"multi\",\n      \"question\": \"You use the Custom Vision service to build a classifier. After training is complete, you need to evaluate the classifier. Which two metrics are available for review? Each correct answer presents a complete solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. recall\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. F-score\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. weighted accuracy\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. precision\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. area under the curve (AUC)\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Custom Vision evaluation shows recall and precision metrics as key performance indicators.\",\n        \"incorrect\": \"Incorrect! The available metrics are recall and precision.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"31\",\n      \"type\": \"multi\",\n      \"question\": \"You are developing a method that uses the Computer Vision client library. The method will perform optical character recognition (OCR) in images. The method has the following code:\\n```python\\ndef read_file_url(computervision_client, url_file):\\n  read_response = computervision_client.read(url_file, raw=True)\\n  read_operation_location = read_response.headers[\\\"Operation-Location\\\"]\\n  operation_id = read_operation_location.split(\\\"/\\\")[-1]\\n\\n  # Wait for the operation to complete\\n  while True:\\n    read_result = computervision_client.get_read_result(operation_id)\\n    # Insert checks here\\n    break # Simplified loop for example\\n\\n  for page in read_result.analyze_result.read_results:\\n    for line in page.lines:\\n      print(line.text)\\n```\\nDuring testing, you discover that the call to the get_read_result method occurs before the read operation is complete. You need to prevent get_read_result from proceeding until the operation is complete. Which two actions should you perform? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Remove the operation_id parameter.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Add code to verify the read_result.status value.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Add code to verify the status of the read_operation_location value.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Wrap the call to get_read_result within a loop that contains a delay.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Checking the status property and adding a delay loop ensures that the OCR operation is complete before processing results.\",\n        \"incorrect\": \"Incorrect! You must verify the operation status and wait appropriately.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"76\",\n      \"type\": \"multi\",\n      \"question\": \"You are building an app that will use the Speech service. You need to ensure that the app can authenticate to the service by using a Microsoft Azure Active Directory (Azure AD), part of Microsoft Entra, token. Which two actions should you perform? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Enable a virtual network service endpoint.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Configure a custom subdomain.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Request an X.509 certificate.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Create a private endpoint.\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. Create a Conditional Access policy.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"For AAD token authentication, configuring a custom subdomain and creating a private endpoint are necessary to support secure connectivity.\",\n        \"incorrect\": \"Incorrect! Focus on the actions that directly enable Azure AD\\u2013based authentication.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"78\",\n      \"type\": \"multi\",\n      \"question\": \"You are developing a method that uses the Computer Vision client library. The method will perform optical character recognition (OCR) in images using ReadAsync. During testing, you discover that the call to the GetReadResultAsync method occurs before the read operation is complete. You need to prevent GetReadResultAsync from proceeding until the read operation is complete. Which two actions should you perform? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Remove the Guid.Parse(operationId) parameter.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Add code to verify the results.Status value.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Add code to verify the status of the txtHeaders.Status value.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Wrap the call to GetReadResultAsync within a loop that contains a delay.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Checking the Status property and implementing a delay loop ensures that the OCR operation has finished before retrieving results.\",\n        \"incorrect\": \"Incorrect! Ensure you verify the operation status and delay subsequent calls.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"87\",\n      \"type\": \"multi\",\n      \"question\": \"You use the Custom Vision service to build a classifier. After training is complete, you need to evaluate the classifier. Which two metrics are available for review? Each correct answer presents a complete solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. recall\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. F-score\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. weighted accuracy\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. precision\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. area under the curve (AUC)\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Recall and precision are the standard evaluation metrics provided by Custom Vision.\",\n        \"incorrect\": \"Incorrect! The available metrics are recall and precision.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"94\",\n      \"type\": \"multi\",\n      \"question\": \"You are developing a method that uses the Computer Vision client library (Python). The method will perform optical character recognition (OCR) in images using `computervision_client.read`. During testing, you discover that the call to the `get_read_result` method occurs before the read operation is complete. You need to prevent `get_read_result` from proceeding until the read operation is complete. Which two actions should you perform? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Remove the operation_id parameter.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Add code to verify the read_result.status value.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Add code to verify the status of the read_operation_location value.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Wrap the call to get_read_result within a loop that contains a delay.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Verifying the status and looping with a delay will prevent premature retrieval of the OCR results.\",\n        \"incorrect\": \"Incorrect! You must ensure the operation has finished before retrieving results.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"116\",\n      \"type\": \"multi\",\n      \"question\": \"You are building an Azure WebJob that will create knowledge bases from an array of URLs. You instantiate a QnAMakerClient object that has the relevant API keys and assign the object to a variable named client. You need to develop a method to create the knowledge bases. Which two actions should you include in the method? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Create a list of FileDTO objects that represents data from the WebJob.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Call the client.Knowledgebase.CreateAsync method.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Create a list of QnADTO objects that represents data from the WebJob.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Create a CreateKbDTO object.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Calling CreateAsync with a properly formed CreateKbDTO object initiates the knowledge base creation process.\",\n        \"incorrect\": \"Incorrect! The solution requires invoking the SDK method with the proper DTO.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"122\",\n      \"type\": \"multi\",\n      \"question\": \"You are developing a method for an application that uses the Translator API. The method will receive the content of a webpage, and then translate the content into Greek (el). The result will also contain a transliteration that uses the Roman alphabet. You need to create the URI for the call to the Translator API. You have the following URI: https://api.cognitive.microsofttranslator.com/translate?api-version=3.0 Which three additional query parameters should you include in the URI? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\",\n        \"d\",\n        \"f\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. toScript=Cyrl\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. from=el\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. textType=html\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. to=el\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. textType=plain\"\n        },\n        {\n          \"id\": \"f\",\n          \"text\": \"F. toScript=Latn\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Using textType=html ensures proper handling of webpage content; specifying to=el sets the target language; and toScript=Latn requests a transliteration to the Roman alphabet.\",\n        \"incorrect\": \"Incorrect! Ensure you include parameters that support both translation and transliteration for HTML content.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"123\",\n      \"type\": \"multi\",\n      \"question\": \"You have a chatbot that was built by using the Microsoft Bot Framework. You need to debug the chatbot endpoint remotely. Which two tools should you install on a local computer? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\",\n        \"e\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Fiddler\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Bot Framework Composer\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Bot Framework Emulator\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Bot Framework CLI\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. ngrok\"\n        },\n        {\n          \"id\": \"f\",\n          \"text\": \"F. nginx\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"The Bot Framework Emulator is used to test and debug bot endpoints, while ngrok helps expose a local endpoint for remote access.\",\n        \"incorrect\": \"Incorrect! Focus on the tools specifically designed for remote bot debugging.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"146\",\n      \"type\": \"multi\",\n      \"question\": \"You have been asked to build an application that recognizes intents in audio captured from a microphone using exclusively Azure AI Services. Which combination of the following services can you use to fulfill the requirements? (Choose 2 answers)\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Azure AI Translator\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Conversational Language Understanding (CLU)\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Azure AI Immersive Reader\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Azure AI Speech Service\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Azure AI Speech Service converts speech to text, and CLU analyzes the text to recognize intents and entities.\",\n        \"incorrect\": \"Incorrect! Translator and Immersive Reader do not directly support intent recognition from audio.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"147\",\n      \"type\": \"multi\",\n      \"question\": \"You are working with Azure AI Language Preconfigured Name Entity Recognition (NER) features. Which choices belong to general entity categories offered by the service? (Choose 3 answers)\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"b\",\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Person\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Event\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Location\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Social\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"The general NER categories include Person, Event, and Location. 'Social' is not a standard top-level category.\",\n        \"incorrect\": \"Incorrect! Only Person, Event, and Location are general categories.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"150\",\n      \"type\": \"multi\",\n      \"question\": \"After your company's call center support staff receive a call, you need to implement an AI solution to identify additional metrics. The solution requires:\\n- Processing speech in English, French, and Spanish.\\n- Identifying the main topics of customer calls, and\\n- Implementing sentiment analysis\\nWhich of the following Azure AI services does this solution require? (Choose 2 answers)\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. Azure AI Speech service's Speech-to-Text\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Azure AI Speech service's Text-to-Speech\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Azure AI Translator\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Azure AI Language\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Speech-to-Text converts audio to text while Azure AI Language processes the text for topics and sentiment.\",\n        \"incorrect\": \"Incorrect! Text-to-Speech and Translator do not fulfill these requirements.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"154\",\n      \"type\": \"multi\",\n      \"question\": \"You are using the Speech SDK to access the speech service for an application in development. During the tests, you noticed that attempts to connect frequently result in HTTP 403 Forbidden and HTTP 401 Unauthorized errors. What could be the root cause of the 403 errors? (Choose 3 answers)\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"b\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. The subscription key is missing.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. The subscription usage quota exceeded.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. The endpoint is invalid.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. The subscription key is invalid.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Missing or invalid subscription keys and exceeded quotas typically cause HTTP 403/401 errors.\",\n        \"incorrect\": \"Incorrect! The endpoint being invalid would generally cause connection errors, not 403/401.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"162\",\n      \"type\": \"multi\",\n      \"question\": \"You received a business requirement from the marketing department for building a Chatbot as a new customer communication channel via social media. The Chatbot needs to be able to respond to customer questions in natural language using the existing knowledge base published on the company's FAQ webpage. Which Azure service would you use to accomplish this task? (Choose 2 answers)\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. QnA Maker\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. Azure Bot Service\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. Bing Search Service\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. Text Analytics\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"QnA Maker creates a knowledge base from FAQs, and Azure Bot Service hosts the chatbot.\",\n        \"incorrect\": \"Incorrect! Bing Search and Text Analytics do not directly support a FAQ-based Chatbot.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"165\",\n      \"type\": \"multi\",\n      \"question\": \"Consider the following schema of an Azure Search index:\\n```json\\n{\\n  \\\"name\\\": \\\"musicstoreindex\\\",\\n  \\\"fields\\\": [ ... ],\\n  \\\"scoringProfiles\\\": [\\n    {\\n      \\\"name\\\": \\\"boostGenre\\\",\\n      \\\"text\\\": { ... }\\n    },\\n    {\\n      \\\"name\\\": \\\"newAndHighlyRated\\\",\\n      \\\"functions\\\": [ ... ]\\n    }\\n  ],\\n  \\\"suggesters\\\": [ ... ]\\n}\\n```\\nWhat are scoring profile names used in this index? (Choose 2 answers)\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\",\n        \"d\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. freshness\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. boostGenre\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. magnitude\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. newAndHighlyRated\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"The index schema shows scoring profiles named 'boostGenre' and 'newAndHighlyRated'.\",\n        \"incorrect\": \"Incorrect! The scoring profiles in the schema are boostGenre and newAndHighlyRated.\"\n      },\n      \"quiz_tag\": \"Implement knowledge mining and document intelligence solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"176\",\n      \"type\": \"multi\",\n      \"question\": \"You are developing a method for an application that uses the Translator API. The method will receive the content of a webpage, and then translate the content into Greek (el). The result will also contain a transliteration that uses the Roman alphabet. You need to create the URI for the call to the Translator API. You have the following URI: https://api.cognitive.microsofttranslator.com/translate?api-version=3.0 Which three additional query parameters should you include in the URI? Each correct answer presents part of the solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"c\",\n        \"d\",\n        \"f\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. toScript=Cyrl\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. from=el\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. textType=html\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. to=el\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. textType=plain\"\n        },\n        {\n          \"id\": \"f\",\n          \"text\": \"F. toScript=Latn\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Using textType=html, to=el, and toScript=Latn ensures that the HTML content is properly translated into Greek with a Roman-script transliteration.\",\n        \"incorrect\": \"Incorrect! Make sure to include parameters that preserve HTML formatting and provide transliteration.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"177\",\n      \"type\": \"multi\",\n      \"question\": \"You are developing a method that uses the Text Analytics client library to extract key entities from text. You call the function with the string: \\\"Our tour of Paris included a visit to the Eiffel Tower\\\". For each of the following statements, select Yes if the statement is true. Otherwise, select No.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"b\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"Statements: The output will include the words 'our' and 'included'.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"Statements: The output will include the words 'Paris', 'Eiffel', and 'Tower'.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"Statements: The function will output all key phrases from the input string.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"RecognizeEntities identifies named entities such as 'Paris' and 'Eiffel Tower' (or its parts), not common words like 'our' or 'included'.\",\n        \"incorrect\": \"Incorrect! Only significant named entities are expected.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"183\",\n      \"type\": \"multi\",\n      \"question\": \"You have a text-based chatbot. You need to enable content moderation by using the Text Moderation API of Content Moderator. Which two service responses should you use? Each correct answer presents part of the solution. (Duplicate of Q175)\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. personal data\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. the adult classification score\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. text classification\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. optical character recognition (OCR)\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"E. the racy classification score\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"The Text Moderation API returns information on detected personally identifiable information and text classification details.\",\n        \"incorrect\": \"Incorrect! The adult and racy scores are part of image moderation.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"188\",\n      \"type\": \"multi\",\n      \"question\": \"You train a Conversational Language Understanding model to understand the natural language input of users. You need to evaluate the accuracy of the model before deploying it. What are two methods you can use? Each correct answer presents a complete solution.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"a\",\n        \"c\"\n      ],\n      \"options\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"A. From the language authoring REST endpoint, retrieve the model evaluation summary.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"B. From Language Studio, enable Active Learning, and then validate the utterances logged for review.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"C. From Language Studio, select Model performance.\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"D. From the Azure portal, enable log collection in Log Analytics, and then analyze the logs.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"You can evaluate model accuracy by retrieving the evaluation summary via the REST endpoint or by checking Model performance in Language Studio.\",\n        \"incorrect\": \"Incorrect! Active Learning helps improve models post-deployment rather than for initial evaluation.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    }\n  ]\n}"
    },
    {
      "filepath": "app/data/quizzes/azure-a102/clean_drag_and_drop_questions.json",
      "content": "{\n  \"questions\": [\n    {\n      \"id\": \"14\",\n      \"type\": \"drag_and_drop\",\n      \"question\": \"You need to develop an automated call handling system that can respond to callers in their own language. The system will support only French and English. Which Azure Cognitive Services service should you use to meet each requirement? To answer, drag the appropriate services to the correct requirements. Each service may be used once, more than once, or not at all.\\nRequirements:\\n1. Detect the incoming language:\\n2. Respond in the callers\\u2019 own language:\",\n      \"points\": 1,\n      \"targets\": [\n        {\n          \"id\": \"target-1\",\n          \"text\": \"Detect the incoming language\"\n        },\n        {\n          \"id\": \"target-2\",\n          \"text\": \"Respond in the callers\\u2019 own language\"\n        }\n      ],\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"Service Option: Speaker Recognition\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"Service Option: Speech to Text\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"Service Option: Text Analytics\",\n          \"target_id\": \"target-1\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"Service Option: Text to Speech\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-5\",\n          \"text\": \"Service Option: Translator\",\n          \"target_id\": \"target-2\",\n          \"is_correct\": true\n        }\n      ],\n      \"correct_pairs\": [\n        {\n          \"option_id\": \"option-3\",\n          \"target_id\": \"target-1\"\n        },\n        {\n          \"option_id\": \"option-5\",\n          \"target_id\": \"target-2\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Text Analytics detects the language, and Translator translates the response.\",\n        \"incorrect\": \"Incorrect. Text Analytics (Language Detection) identifies the language, and Translator is used to provide the response in that language.\"\n      },\n      \"explanation\": \"Text Analytics (specifically its Language Detection feature) is used to detect the incoming language. Translator service is used to translate responses into the caller's detected language (French or English).\",\n      \"quiz_tag\": \"Implement natural language processing solutions\"\n    },\n    {\n      \"id\": \"21\",\n      \"type\": \"drag_and_drop\",\n      \"question\": \"You are developing a webpage that will use the Azure Video Analyzer for Media (previously Video Indexer) service to display videos of internal company meetings. You embed the Player widget and the Cognitive Insights widget into the page. You need to configure the widgets to meet the following requirements:\\n- Ensure that users can search for keywords.\\n- Display the names and faces of people in the video.\\n- Show captions in the video in English (United States).\\nHow should you complete the URL for each widget? To answer, drag the appropriate values to the correct targets. Each value may be used once, more than once, or not at all.\\nCognitive Insights Widget URL:\\n`https://www.videoindexer.ai/embed/insights/<accountId>/<videoId>/?widgets=` [Target1] `&controls=` [Target2]\\nPlayer Widget URL:\\n`https://www.videoindexer.ai/embed/player/<accountId>/<videoId>/?showCaptions=true&captions=` [Target3]\",\n      \"points\": 1,\n      \"targets\": [\n        {\n          \"id\": \"target-1\",\n          \"text\": \"Cognitive Insights Widget 'widgets' parameter\"\n        },\n        {\n          \"id\": \"target-2\",\n          \"text\": \"Cognitive Insights Widget 'controls' parameter\"\n        },\n        {\n          \"id\": \"target-3\",\n          \"text\": \"Player Widget 'captions' parameter\"\n        }\n      ],\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"false\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"people,keywords\",\n          \"target_id\": \"target-1\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"search\",\n          \"target_id\": \"target-2\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"en-US\",\n          \"target_id\": \"target-3\",\n          \"is_correct\": true\n        }\n      ],\n      \"correct_pairs\": [\n        {\n          \"option_id\": \"option-2\",\n          \"target_id\": \"target-1\"\n        },\n        {\n          \"option_id\": \"option-3\",\n          \"target_id\": \"target-2\"\n        },\n        {\n          \"option_id\": \"option-4\",\n          \"target_id\": \"target-3\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! 'people,keywords' enables those insights, 'search' adds the search control, and 'en-US' sets caption language.\",\n        \"incorrect\": \"Incorrect. Review the widget parameters for displaying insights, enabling controls, and setting caption language.\"\n      },\n      \"explanation\": \"For Target1 (Cognitive Insights widgets): 'people,keywords' shows people and keywords insights. For Target2 (Cognitive Insights controls): 'search' enables the search control within the insights widget. For Target3 (Player captions): 'en-US' specifies the language code for English (United States) captions.\",\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"80\",\n      \"type\": \"drag_and_drop\",\n      \"question\": \"You are developing a webpage that will use the Azure Video Analyzer for Media (previously Video Indexer) service to display videos of internal company meetings. You embed the Player widget and the Cognitive Insights widget into the page. You need to configure the widgets to meet the following requirements:\\n- Ensure that users can search for keywords.\\n- Display the names and faces of people in the video.\\n- Show captions in the video in English (United States).\\nHow should you complete the URL for each widget? To answer, drag the appropriate values to the correct targets. Each value may be used once, more than once, or not at all.\",\n      \"points\": 1,\n      \"targets\": [\n        {\n          \"id\": \"target-1\",\n          \"text\": \"Cognitive Insights Widget 'widgets' parameter\"\n        },\n        {\n          \"id\": \"target-2\",\n          \"text\": \"Cognitive Insights Widget 'controls' parameter\"\n        },\n        {\n          \"id\": \"target-3\",\n          \"text\": \"Player Widget 'captions' parameter\"\n        }\n      ],\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"people, keywords\",\n          \"target_id\": \"target-1\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"search\",\n          \"target_id\": \"target-2\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"en-US\",\n          \"target_id\": \"target-3\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"labels\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-5\",\n          \"text\": \"true\",\n          \"target_id\": null\n        }\n      ],\n      \"correct_pairs\": [\n        {\n          \"option_id\": \"option-1\",\n          \"target_id\": \"target-1\"\n        },\n        {\n          \"option_id\": \"option-2\",\n          \"target_id\": \"target-2\"\n        },\n        {\n          \"option_id\": \"option-3\",\n          \"target_id\": \"target-3\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! 'people,keywords' enables those insights, 'search' adds the search control, and 'en-US' sets caption language.\",\n        \"incorrect\": \"Incorrect. Review the widget parameters for displaying insights, enabling controls, and setting caption language.\"\n      },\n      \"explanation\": \"Setting `widgets=people,keywords` adds the 'people' and 'keywords' insight panes. Setting `controls=search` adds the search control to the insights widget. Setting `captions=en-US` specifies the language code for captions to be displayed.\",\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"88\",\n      \"type\": \"drag_and_drop\",\n      \"question\": \"You are developing a call to the Face API. The call must find similar faces from an existing list named employeefaces. The employeefaces list contains 60,000 images. How should you complete the body of the HTTP request? To answer, drag the appropriate values to the correct targets. Each value may be used once, more than once, or not at all.\",\n      \"points\": 1,\n      \"targets\": [\n        {\n          \"id\": \"target-1\",\n          \"text\": \"List ID field name\"\n        },\n        {\n          \"id\": \"target-2\",\n          \"text\": \"Mode field value\"\n        }\n      ],\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"\\\"LargeFaceListId\\\"\",\n          \"target_id\": \"target-1\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"\\\"matchFace\\\"\",\n          \"target_id\": \"target-2\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"\\\"faceListId\\\"\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"\\\"matchPerson\\\"\",\n          \"target_id\": null\n        }\n      ],\n      \"correct_pairs\": [\n        {\n          \"option_id\": \"option-1\",\n          \"target_id\": \"target-1\"\n        },\n        {\n          \"option_id\": \"option-2\",\n          \"target_id\": \"target-2\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Use 'LargeFaceListId' for lists over 1,000 faces and 'matchFace' to find visually similar faces.\",\n        \"incorrect\": \"Incorrect. Remember to use 'LargeFaceListId' for large lists and 'matchFace' for visual similarity.\"\n      },\n      \"explanation\": \"For lists potentially exceeding 1,000 faces (like 60,000), 'LargeFaceListId' must be used instead of 'faceListId'. The 'matchFace' mode finds visually similar faces regardless of whether they belong to the same person. 'matchPerson' finds faces belonging to the same person.\",\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"89\",\n      \"type\": \"drag_and_drop\",\n      \"question\": \"You are developing a photo application that will find photos of a person based on a sample image by using the Face API. You need to create a POST request to find the photos. How should you complete the request? To answer, drag the appropriate values to the correct targets. Each value may be used once, more than once, or not at all.\",\n      \"points\": 1,\n      \"targets\": [\n        {\n          \"id\": \"target-1\",\n          \"text\": \"URL Path Segment\"\n        },\n        {\n          \"id\": \"target-2\",\n          \"text\": \"Request Body 'mode' value\"\n        }\n      ],\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"findsimilars\",\n          \"target_id\": \"target-1\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"matchPerson\",\n          \"target_id\": \"target-2\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"detect\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"matchFace\",\n          \"target_id\": null\n        }\n      ],\n      \"correct_pairs\": [\n        {\n          \"option_id\": \"option-1\",\n          \"target_id\": \"target-1\"\n        },\n        {\n          \"option_id\": \"option-2\",\n          \"target_id\": \"target-2\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Use the 'findsimilars' operation and 'matchPerson' mode to find photos of the same person.\",\n        \"incorrect\": \"Incorrect. The 'findsimilars' operation with 'matchPerson' mode is needed to find photos belonging to the same person.\"\n      },\n      \"explanation\": \"The 'findsimilars' operation is used to search for similar faces based on a query face ID against a face list or large face list. The 'matchPerson' mode filters the similar faces found to only include those that likely belong to the same person as the query face.\",\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"128\",\n      \"type\": \"drag_and_drop\",\n      \"question\": \"You are building a Language Understanding model for purchasing tickets. You have the following utterance for an intent named PurchaseAndSendTickets: Purchase [2 adult business] tickets to [Paris] [next Monday] and send tickets to [email@domain.com]. You need to select the entity types. The solution must use built-in entity types to minimize training data whenever possible. Which entity type should you use for each label? To answer, drag the appropriate entity types to the correct labels. Each entity type may be used once, more than once, or not at all.\",\n      \"points\": 1,\n      \"targets\": [\n        {\n          \"id\": \"target-1\",\n          \"text\": \"Paris\"\n        },\n        {\n          \"id\": \"target-2\",\n          \"text\": \"email@domain.com\"\n        },\n        {\n          \"id\": \"target-3\",\n          \"text\": \"2 adult business\"\n        }\n      ],\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"GeographyV2\",\n          \"target_id\": \"target-1\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"Email\",\n          \"target_id\": \"target-2\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"Machine learned\",\n          \"target_id\": \"target-3\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"List\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-5\",\n          \"text\": \"DatetimeV2\",\n          \"target_id\": null\n        }\n      ],\n      \"correct_pairs\": [\n        {\n          \"option_id\": \"option-1\",\n          \"target_id\": \"target-1\"\n        },\n        {\n          \"option_id\": \"option-2\",\n          \"target_id\": \"target-2\"\n        },\n        {\n          \"option_id\": \"option-3\",\n          \"target_id\": \"target-3\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Use built-in entities GeographyV2 and Email where possible, and Machine learned for custom concepts.\",\n        \"incorrect\": \"Incorrect. Leverage built-in entities like GeographyV2 and Email first. Use Machine learned entities for concepts not covered by built-ins.\"\n      },\n      \"explanation\": \"GeographyV2 is a built-in entity for recognizing geographical locations like cities and countries. Email is a built-in entity specifically for recognizing email addresses. '2 adult business' represents ticket details (number, type, class). There's no single built-in entity for this complex combination. A machine learned entity, trained with examples, is appropriate. While 'next Monday' would use DatetimeV2, that wasn't one of the target labels.\",\n      \"quiz_tag\": \"Implement natural language processing solutions\"\n    },\n    {\n      \"id\": \"173\",\n      \"type\": \"drag_and_drop\",\n      \"question\": \"You are building a customer support chatbot. You need to configure the bot to identify the following:\\n- Code names for internal product development\\n- Messages that include credit card numbers\\nThe solution must minimize development effort. Which Azure Cognitive Service for Language feature should you use for each requirement? To answer, drag the appropriate features to the correct requirements. Each feature may be used once, more than once, or not at all.\",\n      \"points\": 1,\n      \"targets\": [\n        {\n          \"id\": \"target-1\",\n          \"text\": \"Code names for internal product development\"\n        },\n        {\n          \"id\": \"target-2\",\n          \"text\": \"Messages that include credit card numbers\"\n        }\n      ],\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"Custom named entity recognition (NER)\",\n          \"target_id\": \"target-1\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"Personally identifiable Information (PII) detection\",\n          \"target_id\": \"target-2\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"Key phrase extraction\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"Sentiment analysis\",\n          \"target_id\": null\n        }\n      ],\n      \"correct_pairs\": [\n        {\n          \"option_id\": \"option-1\",\n          \"target_id\": \"target-1\"\n        },\n        {\n          \"option_id\": \"option-2\",\n          \"target_id\": \"target-2\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Custom NER is needed for internal code names, while PII detection handles standard sensitive data like credit card numbers.\",\n        \"incorrect\": \"Incorrect. Use Custom NER for unique identifiers like internal code names and the built-in PII detection feature for common sensitive data.\"\n      },\n      \"explanation\": \"Internal code names are specific to the business and won't be recognized by pre-built NER. Custom NER allows you to train a model to identify these specific entities. The PII detection feature within the Language service is specifically designed to identify sensitive information like credit card numbers, minimizing development effort compared to building custom logic.\",\n      \"quiz_tag\": \"Implement natural language processing solutions\"\n    },\n    {\n      \"id\": \"184\",\n      \"type\": \"drag_and_drop\",\n      \"question\": \"You develop a Python app named App1 that performs speech-to-speech translation. You need to configure App1 to translate English to German. How should you complete the SpeechTranslationConfig object? To answer, drag the appropriate values to the correct targets. Each value may be used once, more than once or not at all.\\n```python\\ntranslation_config = speechsdk.translation.SpeechTranslationConfig(subscription=speech_key, region=service_region)\\ntranslation_config.[Target1] = \\\"en-US\\\"\\ntranslation_config.[Target2](\\\"de\\\")\\n```\",\n      \"points\": 1,\n      \"targets\": [\n        {\n          \"id\": \"target-1\",\n          \"text\": \"Set Input Language Property\"\n        },\n        {\n          \"id\": \"target-2\",\n          \"text\": \"Add Target Language Method\"\n        }\n      ],\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"speech_recognition_language\",\n          \"target_id\": \"target-1\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"add_target_language\",\n          \"target_id\": \"target-2\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"target_languages\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"set_profanity\",\n          \"target_id\": null\n        }\n      ],\n      \"correct_pairs\": [\n        {\n          \"option_id\": \"option-1\",\n          \"target_id\": \"target-1\"\n        },\n        {\n          \"option_id\": \"option-2\",\n          \"target_id\": \"target-2\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! `speech_recognition_language` sets the input language and `add_target_language` adds a translation target.\",\n        \"incorrect\": \"Incorrect. Use `speech_recognition_language` to set the source language and `add_target_language` to specify the translation output language.\"\n      },\n      \"explanation\": \"The `speech_recognition_language` attribute sets the language of the input speech to be recognized (source language, e.g., 'en-US'). The `add_target_language` method adds a language code (e.g., 'de') to the list of target languages for translation.\",\n      \"quiz_tag\": \"Implement natural language processing solutions\"\n    },\n    {\n      \"id\": \"189\",\n      \"type\": \"drag_and_drop\",\n      \"question\": \"You develop an app in C# named App1 that performs speech-to-speech translation. You need to configure App1 to translate English to German. How should you complete the SpeechTranslationConfig object? To answer, drag the appropriate values to the correct targets. Each value may be used once, more than once, or not at all.\\n```csharp\\nvar translationConfig = SpeechTranslationConfig.FromSubscription(SPEECH_SUBSCRIPTION_KEY, SPEECH_SERVICE_REGION);\\ntranslationConfig.[Target1] = \\\"en-US\\\";\\ntranslationConfig.[Target2](\\\"de\\\");\\n```\",\n      \"points\": 1,\n      \"targets\": [\n        {\n          \"id\": \"target-1\",\n          \"text\": \"Set Input Language Property\"\n        },\n        {\n          \"id\": \"target-2\",\n          \"text\": \"Add Target Language Method\"\n        }\n      ],\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"SpeechRecognitionLanguage\",\n          \"target_id\": \"target-1\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"AddTargetLanguage\",\n          \"target_id\": \"target-2\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"TargetLanguages\",\n          \"target_id\": null\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"SetProfanity\",\n          \"target_id\": null\n        }\n      ],\n      \"correct_pairs\": [\n        {\n          \"option_id\": \"option-1\",\n          \"target_id\": \"target-1\"\n        },\n        {\n          \"option_id\": \"option-2\",\n          \"target_id\": \"target-2\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! `SpeechRecognitionLanguage` sets the input language and `AddTargetLanguage` adds a translation target.\",\n        \"incorrect\": \"Incorrect. Use `SpeechRecognitionLanguage` to set the source language and `AddTargetLanguage` to specify the translation output language.\"\n      },\n      \"explanation\": \"The `SpeechRecognitionLanguage` property sets the language of the input speech to be recognized (source language, e.g., 'en-US'). The `AddTargetLanguage` method adds a language code (e.g., 'de') to the list of target languages for translation.\",\n      \"quiz_tag\": \"Implement natural language processing solutions\"\n    }\n  ]\n}"
    },
    {
      "filepath": "app/data/quizzes/azure-a102/clean_order_questions.json",
      "content": "{\n  \"questions\": [\n    {\n      \"id\": \"180\",\n      \"type\": \"order\",\n      \"question\": \"You have a Language Understanding solution that runs in a Docker container. You download the Language Understanding container image from the Microsoft Container Registry (MCR). You need to deploy the container image to a host computer. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"From the Language Understanding portal, export the solution as a package file.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"From the host computer, move the package file to the Docker input directory.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"From the host computer, build the container and specify the output directory.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"From the host computer, run the container and specify the input directory.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"From the Language Understanding portal, retrain the model.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item1\",\n        \"item3\",\n        \"item4\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! To deploy the container image, first export the container package from the Language Understanding portal (item1). Next, build the container on the host computer using the exported package (item3). Finally, run the container with the specified input configuration (item4). This sequence leverages the exported package to create and execute the container properly.\",\n        \"incorrect\": \"Incorrect. Review the process: export the container package, build the container image, then run it. Moving the package file separately or retraining the model are not required for deployment.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\"\n    },\n    {\n      \"id\": \"178\",\n      \"type\": \"order\",\n      \"question\": \"You are building a transcription service for technical podcasts. Testing reveals that the service fails to transcribe technical terms accurately. You need to improve the accuracy of the service. Which five actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Create a Custom Speech project.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Create a speech-to-text model.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Upload training datasets.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Create a Speaker Recognition model.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Deploy the model.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Train the model.\"\n        },\n        {\n          \"id\": \"item7\",\n          \"text\": \"Create a Conversational Language Understanding model.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item1\",\n        \"item2\",\n        \"item3\",\n        \"item6\",\n        \"item5\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The proper sequence is to first create a Custom Speech project (item1), then define a speech-to-text model within that project (item2). Next, upload the training datasets (item3), train the model using these datasets (item6), and finally deploy the trained model (item5). This process directly addresses the transcription accuracy issues without involving extraneous models.\",\n        \"incorrect\": \"Incorrect. Ensure you start by creating the project and model, then upload the necessary datasets, train the model, and finally deploy it. Options like Speaker Recognition or Conversational Language Understanding are not needed here.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\"\n    },\n    {\n      \"id\": \"4\",\n      \"type\": \"order\",\n      \"question\": \"You plan to use containerized versions of the Anomaly Detector API on local devices for testing and in on-premises datacenters. You need to ensure that the containerized deployments meet the following requirements:\\n- Prevent billing and API information from being stored in the command-line histories of the devices that run the container.\\n- Control access to the container images by using Azure role-based access control (Azure RBAC).\\nWhich four actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Create a custom Dockerfile.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Pull the Anomaly Detector container image.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Distribute a docker run script.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Push the image to an Azure container registry.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Build the image.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Push the image to Docker Hub.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item4\",\n        \"item2\",\n        \"item5\",\n        \"item3\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The sequence is: first, push the image to an Azure container registry (item4) to ensure centralized management and security via Azure RBAC; then pull the container image (item2), build the image locally if modifications are needed (item5), and finally distribute a docker run script (item3) to facilitate deployment.\",\n        \"incorrect\": \"Incorrect. Review the necessary steps: secure the image in an Azure container registry, then pull, build, and distribute the deployment script. Other sequences do not meet the security and operational requirements.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\"\n    },\n    {\n      \"id\": \"22\",\n      \"type\": \"order\",\n      \"question\": \"You train a Custom Vision model to identify a company's products by using the Retail domain. You plan to deploy the model as part of an app for Android phones. You need to prepare the model for deployment. Which three actions should you perform in sequence?\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Change the model domain.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Retrain the model.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Test the model.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Export the model.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item1\",\n        \"item2\",\n        \"item4\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The required steps are to change the model domain to a compact version for mobile export (item1), retrain the model to incorporate the domain change (item2), and then export the model for deployment (item4). Testing, while important, is not part of the deployment sequence.\",\n        \"incorrect\": \"Incorrect. The proper sequence is to change the domain, retrain the model, and export it. Testing the model is not a required step in the deployment process.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"81\",\n      \"type\": \"order\",\n      \"question\": \"You train a Custom Vision model to identify a company's products by using the Retail domain. You plan to deploy the model as part of an app for Android phones. You need to prepare the model for deployment. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Change the model domain.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Retrain the model.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Test the model.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Export the model.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item1\",\n        \"item2\",\n        \"item4\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Begin by changing the model domain to a compact version (item1), then retrain the model (item2) so the new settings take effect, and finally export the model (item4) for deployment. Testing is not required as part of this sequence.\",\n        \"incorrect\": \"Incorrect. The correct sequence is to change the domain, retrain, and export the model. Testing is not part of the deployment process.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"23\",\n      \"type\": \"order\",\n      \"question\": \"You have a Custom Vision resource named acvdev in a development environment. You have a Custom Vision resource named acvprod in a production environment. In acvdev, you build an object detection model named obj1 in a project named proj1. You need to move obj1 to acvprod. Which three actions should you perform in sequence?\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Use the Get Projects endpoint on acvdev.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Use the ExportProject endpoint on acvdev.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Use the Import Project endpoint on acvprod.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Use the ExportIteration endpoint on acvdev.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Use the Get Iterations endpoint on acvdev.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Use the UpdateProject endpoint on acvprod.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item1\",\n        \"item2\",\n        \"item3\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! First, retrieve the project details from acvdev using the Get Projects endpoint (item1). Then, export the project using the ExportProject endpoint (item2), and finally import the project into acvprod using the Import Project endpoint (item3). This sequence ensures a smooth migration of the object detection model.\",\n        \"incorrect\": \"Incorrect. The correct process is to identify the project, export it from the development resource, and then import it into the production resource.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\"\n    },\n    {\n      \"id\": \"24\",\n      \"type\": \"order\",\n      \"question\": \"You are developing an application that will recognize faults in components produced on a factory production line. The components are specific to your business. You need to use the Custom Vision API to help detect common faults. Which three actions should you perform in sequence?\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Create a project.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Upload and tag images.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Train the classifier model.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Initialize the training dataset.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Train the object detection model.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item1\",\n        \"item2\",\n        \"item3\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Start by creating a new Custom Vision project (item1), then upload and tag your images to form a robust training dataset (item2), and finally train the classifier model (item3) to recognize faults. This sequence efficiently uses the labeled data to build the model.\",\n        \"incorrect\": \"Incorrect. The proper sequence is to create the project, prepare the training dataset by uploading and tagging images, and then train the classifier model. Other options are not directly required.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"36\",\n      \"type\": \"order\",\n      \"question\": \"You train a Custom Vision model used in a mobile app. You receive 1,000 new images that do not have any associated data. You need to use the images to retrain the model. The solution must minimize how long it takes to retrain the model. Which three actions should you perform in the Custom Vision portal? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Get suggested tags.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Upload all the images.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Group the images locally into category folders.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Upload the images by category.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Tag the images manually.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Review the suggestions and confirm the tags.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item2\",\n        \"item1\",\n        \"item6\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! To minimize retraining time, first upload all the images (item2). Then, use Smart Labeler to generate suggested tags automatically (item1), and finally review and confirm the suggestions (item6) to ensure accuracy.\",\n        \"incorrect\": \"Incorrect. The optimal process is to upload all images, obtain automatic tag suggestions, and then verify them. Manual grouping or tagging is less efficient.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"38\",\n      \"type\": \"order\",\n      \"question\": \"You plan to use a Language Understanding application named app1 that is deployed to a container. App1 was developed by using a Language Understanding authoring resource named lu1. App1 has the versions shown in the following table.\\nVersion | Trained date | Published date\\n------- | ------------ | --------------\\nV1.2    | None         | None\\nV1.1    | 2020-10-01   | None\\nV1.0    | 2020-09-01   | 2020-09-15\\nYou need to create a container that uses the latest deployable version of app1. Which three actions should you perform in sequence?\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Run a container that has version set as an environment variable.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Export the model by using the Export as JSON option.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Export the model by using the Export for containers (GZIP) option.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Select v1.1 of app1.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Run a container and mount the model file.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Select v1.0 of app1.\"\n        },\n        {\n          \"id\": \"item7\",\n          \"text\": \"Select v1.2 of app1.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item6\",\n        \"item3\",\n        \"item5\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Since V1.0 is the only version that has been fully published, first select v1.0 (item6). Then, export the model for container use with the GZIP option (item3), and finally run a container and mount the model file (item5) to deploy the correct version.\",\n        \"incorrect\": \"Incorrect. Only the published version (V1.0) is deployable. The steps must select V1.0, export the model appropriately for container use, and then run the container with the model mounted.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\"\n    },\n    {\n      \"id\": \"66\",\n      \"type\": \"order\",\n      \"question\": \"DRAG DROP - You have a Custom Vision service project that performs object detection. The project uses the General domain for classification and contains a trained model. You need to export the model for use on a network that is disconnected from the internet. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Change the classification type.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Change Domains to General (compact).\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Export the model.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Retrain the model.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Create a new classification model.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item2\",\n        \"item4\",\n        \"item3\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! First, change the domain to its compact version (item2) to meet offline export requirements. Next, retrain the model (item4) so it is optimized for the new domain, and finally export the model (item3) for use on a disconnected network.\",\n        \"incorrect\": \"Incorrect. The model must be converted to a compact version, retrained, and then exported. Changing the classification type or creating a new model is not necessary.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"73\",\n      \"type\": \"order\",\n      \"question\": \"You are building an app that will scan confidential documents and use the Language service to analyze the contents. You provision an Azure Cognitive Services resource. You need to ensure that the app can make requests to the Language service endpoint. The solution must ensure that confidential documents remain on-premises. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Run the container and specify an App ID and Client Secret\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Pull an image from the Microsoft Container Registry (MCR).\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Provision an on-premises Kubernetes cluster that is isolated from the internet.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Run the container and specify an API key and the Endpoint URL of the Cognitive Services resource.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Provision an on-premises Kubernetes cluster that has internet connectivity.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Pull an image from Docker Hub.\"\n        },\n        {\n          \"id\": \"item7\",\n          \"text\": \"Provision an Azure Kubernetes Service (AKS) resource.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item3\",\n        \"item2\",\n        \"item4\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! First, provision an on-premises Kubernetes cluster that is isolated from the internet (item3) to maintain data confidentiality. Next, pull the container image from MCR (item2) into your secure environment, and finally run the container using the API key and endpoint URL (item4) to connect to the Language service.\",\n        \"incorrect\": \"Incorrect. The solution requires an isolated on-premises cluster, using the image from MCR, and running the container with proper authentication\\u2014not using public cloud connectivity.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\"\n    },\n    {\n      \"id\": \"83\",\n      \"type\": \"order\",\n      \"question\": \"You have a Custom Vision resource named acvdev in a development environment. You have a Custom Vision resource named acvprod in a production environment. In acvdev, you build an object detection model named obj1 in a project named proj1. You need to move obj1 to acvprod. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Use the Get Projects endpoint on acvdev.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Use the ExportProject endpoint on acvdev.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Use the Import Project endpoint on acvprod.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Use the ExportIteration endpoint on acvdev.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Use the Get Iterations endpoint on acvdev.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Use the UpdateProject endpoint on acvprod.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item1\",\n        \"item2\",\n        \"item3\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Retrieve the project details from acvdev using the Get Projects endpoint (item1), export the project with the ExportProject endpoint (item2), and then import it into acvprod using the Import Project endpoint (item3). This ensures a smooth migration of the model.\",\n        \"incorrect\": \"Incorrect. The process requires identifying the project, exporting it from the development environment, and importing it into production.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\"\n    },\n    {\n      \"id\": \"84\",\n      \"type\": \"order\",\n      \"question\": \"You are developing an application that will recognize faults in components produced on a factory production line. The components are specific to your business. You need to use the Custom Vision API to help detect common faults. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Create a project.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Upload and tag images.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Train the classifier model.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Initialize the training dataset.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Train the object detection model.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item1\",\n        \"item2\",\n        \"item3\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! The proper sequence is to create a new Custom Vision project (item1), upload and tag images to build a robust training dataset (item2), and then train the classifier model (item3) to detect faults effectively.\",\n        \"incorrect\": \"Incorrect. Ensure you create the project, prepare the dataset through uploading and tagging, and then train the classifier model. Other options do not directly contribute to fault detection.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"101\",\n      \"type\": \"order\",\n      \"question\": \"You need to analyze video content to identify any mentions of specific company names. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Sign in to the Azure Video Analyzer for Media website.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Add the specific company names to the exclude list.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Add the specific company names to the include list.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"From Content model customization, select Brands.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"From Content model customization, select Language.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Sign in to the Custom Vision website.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item1\",\n        \"item4\",\n        \"item3\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! Begin by signing in to the Azure Video Analyzer for Media website (item1) to access the video content. Next, select the Brands option in the content model customization (item4) to enable brand detection, and finally add the specific company names to the include list (item3) so they are recognized during analysis.\",\n        \"incorrect\": \"Incorrect. The proper steps are to sign in, select the Brands option, and add the company names to the include list\\u2014not to use the exclude list or unrelated sites.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"114\",\n      \"type\": \"order\",\n      \"question\": \"DRAG DROP - You train a Custom Vision model used in a mobile app. You receive 1,000 new images that do not have any associated data. You need to use the images to retrain the model. The solution must minimize how long it takes to retrain the model. Which three actions should you perform in the Custom Vision portal? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Group the images locally into category folders.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Get suggested tags.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Upload the images by category.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Upload all the images.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Tag the images manually.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Review the suggestions and confirm the tags.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item4\",\n        \"item2\",\n        \"item6\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! To expedite retraining, first upload all the images (item4), then use Smart Labeler to obtain suggested tags (item2), and finally review and confirm the suggested tags (item6) to ensure accuracy.\",\n        \"incorrect\": \"Incorrect. The optimal sequence is to upload all images, generate automatic tag suggestions, and then verify them, rather than manually grouping or tagging the images.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\"\n    },\n    {\n      \"id\": \"124\",\n      \"type\": \"order\",\n      \"question\": \"DRAG DROP - You are building a retail chatbot that will use a QnA Maker service. You upload an internal support document to train the model. The document contains the following question: 'What is your warranty period?' Users report that the chatbot returns the default QnA Maker answer when they ask the following question: 'How long is the warranty coverage?' The chatbot returns the correct answer when the users ask the following question: \\u2018What is your warranty period?' Both questions should return the same answer. You need to increase the accuracy of the chatbot responses. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Add a new question and answer (QnA) pair.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Add alternative phrasing to the question and answer (QnA) pair.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Retrain the model.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Add additional questions to the document.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Republish the model.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item2\",\n        \"item3\",\n        \"item5\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! First, add alternative phrasing to the existing QnA pair (item2) so that variations of the question are recognized. Then, retrain the model (item3) to update its understanding, and finally republish the model (item5) so that the changes take effect.\",\n        \"incorrect\": \"Incorrect. The proper process is to add alternative phrasing, retrain the model, and republish it. Other steps do not address the inconsistency in responses.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\"\n    },\n    {\n      \"id\": \"168\",\n      \"type\": \"order\",\n      \"question\": \"You have a collection of Microsoft Word documents and PowerPoint presentations in German. You need to create a solution to translate the files to French. The solution must meet the following requirements:\\n- Preserve the original formatting of the files.\\n- Support the use of a custom glossary.\\nYou create a blob container for German files and a blob container for French files. You upload the original files to the container for German files. Which three actions should you perform in sequence to complete the solution? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Perform an asynchronous translation by using the list of files to be translated.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Upload a glossary file to the container for French files.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Define a document translation specification that has a French target.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Generate a list of files to be translated.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Perform an asynchronous translation by using the document translation specification.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"Upload a glossary file to the container for German files.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item2\",\n        \"item3\",\n        \"item5\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! First, upload the custom glossary file to the French container (item2). Then, define a document translation specification targeting French (item3) that incorporates the glossary, and finally perform an asynchronous translation using this specification (item5). This process preserves formatting and applies the glossary as required.\",\n        \"incorrect\": \"Incorrect. The solution requires uploading the glossary, defining a translation specification with the French target, and then initiating the translation. Other options do not satisfy the requirements.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\"\n    },\n    {\n      \"id\": \"170\",\n      \"type\": \"order\",\n      \"question\": \"You have a Docker host named Host1 that contains a container base image. You have an Azure subscription that contains a custom speech-to-text model named model1. You need to run model1 on Host1. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"Retrain the model.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"Request approval to run the container.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"Export model1 to Host1.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"Run the container.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"Configure disk logging.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item2\",\n        \"item3\",\n        \"item4\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! First, request approval to run the container on Host1 (item2) to ensure compliance. Then, export the custom speech-to-text model (model1) to Host1 (item3), and finally run the container (item4) to deploy the model.\",\n        \"incorrect\": \"Incorrect. The proper process is to obtain approval, export the model to the host, and then run the container, rather than retraining the model or configuring disk logging.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\"\n    },\n    {\n      \"id\": \"172\",\n      \"type\": \"order\",\n      \"question\": \"You have a question answering project in Azure Cognitive Service for Language. You need to move the project to a Language service instance in a different Azure region. Which three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\",\n      \"points\": 1,\n      \"items\": [\n        {\n          \"id\": \"item1\",\n          \"text\": \"From the new Language service instance, train and publish the project.\"\n        },\n        {\n          \"id\": \"item2\",\n          \"text\": \"From the new Language service instance, import the project file.\"\n        },\n        {\n          \"id\": \"item3\",\n          \"text\": \"From the new Language service instance, enable custom text classification.\"\n        },\n        {\n          \"id\": \"item4\",\n          \"text\": \"From the original Language service instance, export the existing project.\"\n        },\n        {\n          \"id\": \"item5\",\n          \"text\": \"From the new Language service instance, regenerate the keys.\"\n        },\n        {\n          \"id\": \"item6\",\n          \"text\": \"From the original Language service instance, train and publish the model.\"\n        }\n      ],\n      \"correctOrder\": [\n        \"item4\",\n        \"item2\",\n        \"item1\"\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct! First, export the existing project from the original Language service instance (item4). Then, import the project file into the new instance (item2), and finally, train and publish the project in the new region (item1) to complete the migration.\",\n        \"incorrect\": \"Incorrect. The proper steps are to export the project, import it into the new instance, and then train and publish it. Other actions are not necessary for a successful migration.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\"\n    }\n  ]\n}"
    },
    {
      "filepath": "app/data/quizzes/azure-a102/clean_yesno_multi_questions.json",
      "content": "{\n  \"questions\": [\n    {\n      \"id\": \"77\",\n      \"type\": \"yesno_multi\",\n      \"question\": \"HOTSPOT - You are developing an application that will use the Computer Vision client library. The application has code using AnalyzeImageInStreamAsync with VisualFeatureTypes.Description and VisualFeatureTypes.Tags. For each of the following statements, select Yes if the statement is true. Otherwise, select No.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"no\",\n        \"yes\",\n        \"yes\"\n      ],\n      \"statements\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"The code will perform face recognition.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"The code will list tags and their associated confidence.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"The code will read a file from the local file system.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct. AnalyzeImageInStreamAsync reads from a stream (like a file), Description/Tags features don't do face recognition, but Tags feature lists tags and confidence.\",\n        \"incorrect\": \"Incorrect. AnalyzeImageInStreamAsync reads from a stream (like a file), Description/Tags features don't do face recognition, but Tags feature lists tags and confidence.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"hard\"\n    },\n    {\n      \"id\": \"82\",\n      \"type\": \"yesno_multi\",\n      \"question\": \"You are developing an application to recognize employees' faces by using the Face Recognition API. Images of the faces will be accessible from a URI endpoint. The application has Python code calling `conn.request('POST', f'/face/v1.0/persongroups/{person_group_id}/persons/{person_id}/persistedFaces', f'{body}', headers)`. For each of the following statements, select Yes if the statement is true. Otherwise, select No.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"yes\",\n        \"yes\",\n        \"yes\"\n      ],\n      \"statements\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"The code will add a face image to a person object in a person group.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"The code will work for up to 10,000 people.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"add_face can be called multiple times to add multiple face images to a person object.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct. The API adds a face to a person in a group, PersonGroups support up to 10,000 Persons, and multiple faces can be added per person.\",\n        \"incorrect\": \"Incorrect. Review the Face API documentation regarding adding faces and PersonGroup limits.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"90\",\n      \"type\": \"yesno_multi\",\n      \"question\": \"HOTSPOT - You develop a test method to verify the results retrieved from a call to the Computer Vision API for brand detection. The call returns a collection named image_analysis.brands. You have code iterating through brands. For each of the following statements, select Yes if the statement is true. Otherwise, select No.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"yes\",\n        \"yes\",\n        \"no\"\n      ],\n      \"statements\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"The code will return the name of each detected brand with a confidence equal to or higher than 75 percent.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"The code will return coordinates for the top-left corner of the rectangle that contains the brand logo of the displayed brands.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"The code will return coordinates for the bottom-right corner of the rectangle that contains the brand logo of the displayed brands.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct. The code checks confidence >= 0.75, prints the name, and prints rectangle.x, rectangle.y (top-left corner). It does not print bottom-right coordinates.\",\n        \"incorrect\": \"Incorrect. The code checks confidence >= 0.75, prints the name, and prints rectangle.x, rectangle.y (top-left corner). It does not print bottom-right coordinates.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"104\",\n      \"type\": \"yesno_multi\",\n      \"question\": \"You develop a test method to verify the results retrieved from a call to the Computer Vision API. The call is used to analyze the existence of company logos in images. The call returns a collection of brands named brands. You have the following code segment.\\n```csharp\\nforeach (var brand in brands)\\n{\\n  if (brand.Confidence >= 0.75)\\n  {\\n    Console.WriteLine($\\\"Logo of {brand.Name} between {brand.Rectangle.X}, {brand.Rectangle.Y} and {brand.Rectangle.W}, {brand.Rectangle.H}\\\");\\n  }\\n}\\n```For each of the following statements, select Yes if the statement is true. Otherwise, select No.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"yes\",\n        \"yes\",\n        \"no\"\n      ],\n      \"statements\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"The code will display the name of each detected brand with a confidence equal to or higher than 75 percent.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"The code will display coordinates for the top-left corner of the rectangle that contains the brand logo of the displayed brands.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"The code will display coordinates for the bottom-right corner of the rectangle that contains the brand logo of the displayed brands.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct. The code checks `brand.Confidence >= 0.75`, prints `brand.Name`, and prints `brand.Rectangle.X`, `brand.Rectangle.Y` (top-left corner). It prints width (W) and height (H), not the bottom-right corner coordinates.\",\n        \"incorrect\": \"Incorrect. The code checks `brand.Confidence >= 0.75`, prints `brand.Name`, and prints `brand.Rectangle.X`, `brand.Rectangle.Y` (top-left corner). It prints width (W) and height (H), not the bottom-right corner coordinates.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"hard\"\n    },\n    {\n      \"id\": \"119\",\n      \"type\": \"yesno_multi\",\n      \"question\": \"HOTSPOT - You run the following command.\\n```bash\\ndocker run --rm -it -p 5000:5000 --memory 10g --cpus 2 \\\\\\nmcr.microsoft.com/azure-cognitive-services/textanalytics/sentiment \\\\\\nEula=accept \\\\\\nBilling={ENDPOINT_URI} \\\\\\nApikey={API_KEY}\\n```\\nFor each of the following statements, select Yes if the statement is true. Otherwise, select No.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"no\",\n        \"yes\",\n        \"yes\"\n      ],\n      \"statements\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"Going to http://localhost:5000/status will query the Azure endpoint to verify whether the API key used to start the container is valid.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"The container logging provider will write log data.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"Going to http://localhost:5000/swagger will provide the details to access the documentation for the available endpoints.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct. `/status` checks local container status, not Azure key validity. Docker containers log output (`-it` flag shows it). Cognitive Services containers often expose a Swagger UI at `/swagger`.\",\n        \"incorrect\": \"Incorrect. `/status` checks local container status, not Azure key validity. Docker containers log output (`-it` flag shows it). Cognitive Services containers often expose a Swagger UI at `/swagger`.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"175\",\n      \"type\": \"yesno_multi\",\n      \"question\": \"You have a text-based chatbot. You need to enable content moderation by using the Text Moderation API of Content Moderator. Which two service responses should you use? Select Yes for the two responses you should use, and No for the others.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"yes\",\n        \"no\",\n        \"yes\",\n        \"no\",\n        \"no\"\n      ],\n      \"statements\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"Personal data detection\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"The adult classification score\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"Text classification (profanity, etc.)\"\n        },\n        {\n          \"id\": \"d\",\n          \"text\": \"Optical character recognition (OCR)\"\n        },\n        {\n          \"id\": \"e\",\n          \"text\": \"The racy classification score\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct. The Text Moderation API specifically provides PII (Personal Identifiable Information/personal data) detection and text classification for categories like profanity.\",\n        \"incorrect\": \"Incorrect. Adult/Racy scores are for image moderation. OCR is for extracting text from images. Text Moderation focuses on analyzing text content for PII and classification.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"187\",\n      \"type\": \"yesno_multi\",\n      \"question\": \"You are building a solution that students will use to find references for essays. You use the following code to start building the solution.\\n```csharp\\nusing Azure;\\nusing System;\\nusing Azure.AI.TextAnalytics;\\nprivate static readonly AzureKeyCredential credentials = new AzureKeyCredential(\\\"<key>\\\");\\nprivate static readonly Uri endpoint = new Uri(\\\"<endpoint>\\\");\\nstatic void EntityLinker(TextAnalyticsClient client)\\n{\\n    var response = client.RecognizeLinkedEntities(\\n        \\\"Our tour guide took us up the Space Needle during our trip to Seattle last week.\\\");\\n    // ... process response ...\\n}\\n```\\nFor each of the following statements, select Yes if the statement is true. Otherwise, select No.\",\n      \"points\": 1,\n      \"correctAnswers\": [\n        \"no\",\n        \"no\",\n        \"yes\"\n      ],\n      \"statements\": [\n        {\n          \"id\": \"a\",\n          \"text\": \"The code will detect the language of documents.\"\n        },\n        {\n          \"id\": \"b\",\n          \"text\": \"The url attribute returned for each linked entity will be a Bing search link.\"\n        },\n        {\n          \"id\": \"c\",\n          \"text\": \"The matches attribute returned for each linked entity will provide the location in a document where the entity is referenced.\"\n        }\n      ],\n      \"feedback\": {\n        \"correct\": \"Correct. `RecognizeLinkedEntities` focuses on identifying known entities and linking them to a knowledge base (like Wikipedia, providing a URL), not language detection. The `Matches` property indicates where in the text the entity was found.\",\n        \"incorrect\": \"Incorrect. `RecognizeLinkedEntities` does not perform language detection (that's `DetectLanguage`). The URL links to a knowledge base (like Wikipedia), not Bing search. The `Matches` property does provide the location (offset and length) of the entity in the text.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    }\n  ]\n}"
    },
    {
      "filepath": "app/data/quizzes/azure-a102/clean_dropdown_selection_questions.json",
      "content": "{\n  \"questions\": [\n    {\n      \"id\": \"9\",\n      \"type\": \"dropdown_selection\",\n      \"question\": \"Complete the Speech SDK code snippet for streaming MP3 data.\",\n      \"questionText\": \"You are developing a streaming Speech to Text solution that will use the Speech SDK and MP3 encoding. You need to develop a method to convert speech to text for streaming MP3 data. How should you complete the code? To answer, select the appropriate options in the answer area.\\n```csharp\\nvar pushStream = // (Assume PushAudioInputStream is created here)\\nvar audioFormat = [option_set1](AudioStreamContainerFormat.MP3);\\nvar speechConfig = SpeechConfig.FromSubscription(\\\"18c51a87-3a69-47a8-aedc-a54745f708a1\\\", \\\"westus\\\");\\nvar audioConfig = AudioConfig.FromStreamInput(pushStream, audioFormat);\\nusing (var recognizer = new [option_set2](speechConfig, audioConfig))\\n{\\n var result = await recognizer.RecognizeOnceAsync();\\n var text = result.Text;\\n}\\n```\",\n      \"points\": 1,\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"AudioConfig.SetProperty\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"AudioStreamFormat.GetCompressedFormat\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"AudioStreamFormat.GetWaveFormatPCM\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"PullAudioInputStream\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-5\",\n          \"text\": \"KeywordRecognizer\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-6\",\n          \"text\": \"SpeechRecognizer\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-7\",\n          \"text\": \"SpeechSynthesizer\",\n          \"is_correct\": false\n        }\n      ],\n      \"target\": {\n        \"option_set1\": \"AudioStreamFormat.GetCompressedFormat\",\n        \"option_set2\": \"SpeechRecognizer\"\n      },\n      \"feedback\": {\n        \"correct\": \"Correct! AudioStreamFormat.GetCompressedFormat specifies the format, and SpeechRecognizer performs the recognition.\",\n        \"incorrect\": \"Incorrect. Use AudioStreamFormat.GetCompressedFormat for MP3 and SpeechRecognizer for the recognition task.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"10\",\n      \"type\": \"dropdown_selection\",\n      \"question\": \"Select Azure Cognitive Services for learner monitoring.\",\n      \"questionText\": \"You are developing an internet-based training solution for remote learners. Your company identifies that during the training, some learners leave their desk for long periods or become distracted. You need to use a video and audio feed from each learner's computer to detect whether the learner is present and paying attention. The solution must minimize development effort and identify each learner. Which Azure Cognitive Services service should you use for each requirement? To answer, select the appropriate options in the answer area.\\nRequirements:\\n1. From a learner\\u2019s video feed, verify whether the learner is present: [requirement-1]\\n2. From a learner\\u2019s facial expression in the video feed, verify whether the learner is paying attention: [requirement-2]\\n3. From a learner\\u2019s audio feed, detect whether the learner is talking: [requirement-3]\",\n      \"points\": 1,\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"Face\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"Speech\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"Text Analytics\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"Face\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-5\",\n          \"text\": \"Speech\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-6\",\n          \"text\": \"Text Analytics\",\n          \"is_correct\": false\n        }\n      ],\n      \"target\": {\n        \"requirement-1\": \"Face\",\n        \"requirement-2\": \"Face\",\n        \"requirement-3\": \"Speech\"\n      },\n      \"feedback\": {\n        \"correct\": \"Correct! Face API detects presence and analyzes expressions. Speech service detects talking.\",\n        \"incorrect\": \"Incorrect. Face API is used for presence and facial expression analysis. Speech service detects speech.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"17\",\n      \"type\": \"dropdown_selection\",\n      \"question\": \"Identify the Cognitive Services API endpoint for text translation.\",\n      \"questionText\": \"You are building an app that will process incoming email and direct messages to either French or English language support teams. Which Azure Cognitive Services API should you use? To answer, select the appropriate options in the answer area.\\nAPI Endpoint Structure:\\nhttps:// [Region_Service_Name] / [API_Path] ? [Parameters]\",\n      \"points\": 1,\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"https://api.cognitive.microsofttranslator.com\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"https://eastus.api.cognitive.microsoft.com\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"https://portal.azure.com\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"/text/analytics/v3.1/entities/recognition/general\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-5\",\n          \"text\": \"/text/analytics/v3.1/languages\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-6\",\n          \"text\": \"/translator/text/v3.0/translate?to=en\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-7\",\n          \"text\": \"/translator/text/v3.0/translate?to=fr\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-8\",\n          \"text\": \"/translator/text/v3.0/translate\",\n          \"is_correct\": true\n        }\n      ],\n      \"target\": {\n        \"Region_Service_Name\": \"https://api.cognitive.microsofttranslator.com\",\n        \"API_Path\": \"/translator/text/v3.0/translate\"\n      },\n      \"feedback\": {\n        \"correct\": \"Correct! The Translator service uses a global endpoint and the specified path for translation.\",\n        \"incorrect\": \"Incorrect. The correct global endpoint for Translator is 'api.cognitive.microsofttranslator.com' and the base path is '/translator/text/v3.0/translate'.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"20\",\n      \"type\": \"dropdown_selection\",\n      \"question\": \"Complete the API URL for Computer Vision smart cropping.\",\n      \"questionText\": \"You have a Computer Vision resource named contoso1 that is hosted in the West US Azure region. You need to use contoso1 to make a different size of a product photo by using the smart cropping feature. How should you complete the API URL? To answer, select the appropriate options in the answer area.\\n```bash\\ncurl -H \\\"Ocp-Apim-Subscription-Key: xxx\\\" \\\\\\n-o \\\"sample.png\\\" -H \\\"Content-Type: application/json\\\" \\\\\\n'[option_set1]'/'[option_set2]'?width=100&height=100&smartCropping=true\\\" \\\\\\n-d '{\\\"url\\\":\\\"https://upload.litwareinc.org/litware/bicycle.jpg\\\"}'\\n```\",\n      \"points\": 1,\n      \"options\": [\n        {\n          \"id\": \"option-1\",\n          \"text\": \"https://api.projectoxford.ai\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-2\",\n          \"text\": \"https://contoso1.cognitiveservices.azure.com\",\n          \"is_correct\": true\n        },\n        {\n          \"id\": \"option-3\",\n          \"text\": \"https://westus.api.cognitive.microsoft.com\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-4\",\n          \"text\": \"vision/v3.1/\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-5\",\n          \"text\": \"areaOfinterest\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-6\",\n          \"text\": \"detect\",\n          \"is_correct\": false\n        },\n        {\n          \"id\": \"option-7\",\n          \"text\": \"vision/v3.1/generateThumbnail\",\n          \"is_correct\": true\n        }\n      ],\n      \"target\": {\n        \"option_set1\": \"https://contoso1.cognitiveservices.azure.com\",\n        \"option_set2\": \"vision/v3.1/generateThumbnail\"\n      },\n      \"feedback\": {\n        \"correct\": \"Correct! Use the resource-specific endpoint and the 'generateThumbnail' path for smart cropping.\",\n        \"incorrect\": \"Incorrect. The endpoint should be specific to your resource (contoso1.cognitiveservices.azure.com), and the correct operation for smart cropping is 'generateThumbnail'.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    }\n  ]\n}"
    },
    {
      "filepath": "app/data/quizzes/azure-a102/clean_yes_no_questions.json",
      "content": "{\n  \"questions\": [\n    {\n      \"id\": \"7\",\n      \"type\": \"yes_no\",\n      \"question\": \"You create a web app named app1 that runs on an Azure virtual machine named vm1. Vm1 is on an Azure virtual network named vnet1. You plan to create a new Azure Cognitive Search service named service1. You need to ensure that app1 can connect directly to service1 without routing traffic over the public internet. Solution: You deploy service1 and a public endpoint, and you configure an IP firewall rule. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"no\",\n      \"feedback\": {\n        \"correct\": \"Correct! Instead deploy service1 and a private (not public) endpoint to a new virtual network, and you configure Azure Private Link.\",\n        \"incorrect\": \"Incorrect! Deploying a public endpoint means traffic potentially traverses the public internet. An IP firewall restricts access *to* the public endpoint but doesn't create a private connection path. A private endpoint is needed.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"13\",\n      \"type\": \"yes_no\",\n      \"question\": \"You have an Azure Cognitive Search service. During the past 12 months, query volume steadily increased. You discover that some search query requests to the Cognitive Search service are being throttled. You need to reduce the likelihood that search query requests are throttled. Solution: You migrate to a Cognitive Search service that uses a higher tier. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"yes\",\n      \"feedback\": {\n        \"correct\": \"Correct! Migrating to a higher tier typically provides more resources (Query Processing Units, storage, potentially higher limits on replicas/partitions), which can alleviate throttling caused by insufficient capacity.\",\n        \"incorrect\": \"Incorrect. Migrating to a higher tier is a valid way to increase capacity and reduce throttling.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"15\",\n      \"type\": \"yes_no\",\n      \"question\": \"You create a web app named app1 that runs on an Azure virtual machine named vm1. Vm1 is on an Azure virtual network named vnet1. You plan to create a new Azure Cognitive Search service named service1. You need to ensure that app1 can connect directly to service1 without routing traffic over the public internet. Solution: You deploy service1 and a private endpoint to vnet1. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"yes\",\n      \"feedback\": {\n        \"correct\": \"Correct! A private endpoint creates a network interface within your virtual network (vnet1) that connects privately to the Azure service (service1) via Azure Private Link, keeping traffic off the public internet.\",\n        \"incorrect\": \"Incorrect. Deploying a private endpoint within the VNet is the standard solution for this requirement.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"18\",\n      \"type\": \"yes_no\",\n      \"question\": \"You have an Azure Cognitive Search service. During the past 12 months, query volume steadily increased. You discover that some search query requests to the Cognitive Search service are being throttled. You need to reduce the likelihood that search query requests are throttled. Solution: You add replicas. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"yes\",\n      \"feedback\": {\n        \"correct\": \"Correct! A simple fix to most throttling issues is to throw more resources at the search service. Adding replicas increases query processing capacity (Query Processing Units - QPUs), specifically addressing query-based throttling.\",\n        \"incorrect\": \"Incorrect. Adding replicas directly increases query throughput capacity.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"34\",\n      \"type\": \"yes_no\",\n      \"question\": \"You develop an application to identify species of flowers by training a Custom Vision model. You receive images of new flower species. You need to add the new images to the classifier. Solution: You add the new images, and then use the Smart Labeler tool. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"no\",\n      \"feedback\": {\n        \"correct\": \"Correct! The Smart Labeler suggests tags for *existing* untagged images based on the *current* model. To incorporate *new species*, you must add the images, manually label them with the new species names (create new tags), and then *retrain* the model to learn these new classes. Smart Labeler alone doesn't add new classes or retrain.\",\n        \"incorrect\": \"Incorrect! Smart Labeler works on existing, untagged images based on what the model already knows. It cannot identify or label entirely new species.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"35\",\n      \"type\": \"yes_no\",\n      \"question\": \"You develop an application to identify species of flowers by training a Custom Vision model. You receive images of new flower species. You need to add the new images to the classifier. Solution: You add the new images and labels to the existing model. You retrain the model, and then publish the model. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"yes\",\n      \"feedback\": {\n        \"correct\": \"Correct! This is the standard process: add new images, provide the correct labels (tags for the new species), retrain the model so it learns to recognize them, and then publish the updated iteration to make it available.\",\n        \"incorrect\": \"Incorrect. This describes the correct workflow for updating a Custom Vision model with new data/classes.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"44\",\n      \"type\": \"yes_no\",\n      \"question\": \"You create a web app named app1 that runs on an Azure virtual machine named vm1. Vm1 is on an Azure virtual network named vnet1. You plan to create a new Azure Cognitive Search service named service1. You need to ensure that app1 can connect directly to service1 without routing traffic over the public internet. Solution: You deploy service1 and a public endpoint, and you configure a network security group (NSG) for vnet1. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"no\",\n      \"feedback\": {\n        \"correct\": \"Correct! NSGs control traffic flow *to/from* resources within a VNet or subnet, but they don't prevent traffic destined for a public endpoint from leaving the VNet to reach the public internet. A public endpoint is, by definition, accessible over the public internet. To keep traffic private, a private endpoint is required.\",\n        \"incorrect\": \"Incorrect! NSGs filter traffic but don't create a private connection. A public endpoint necessitates traffic leaving the VNet.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"48\",\n      \"type\": \"yes_no\",\n      \"question\": \"You have an Azure Cognitive Search service. During the past 12 months, query volume steadily increased. You discover that some search query requests to the Cognitive Search service are being throttled. You need to reduce the likelihood that search query requests are throttled. Solution: You add indexes. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"no\",\n      \"feedback\": {\n        \"correct\": \"Correct! Adding indexes increases the number of searchable datasets or defines different search structures, but does not increase query processing capacity. Throttling due to high query volume is addressed by adding replicas or scaling up the service tier.\",\n        \"incorrect\": \"Incorrect. Indexes define data structure and content, not query processing power.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"49\",\n      \"type\": \"yes_no\",\n      \"question\": \"You have an Azure Cognitive Search service. During the past 12 months, query volume steadily increased. You discover that some search query requests to the Cognitive Search service are being throttled. You need to reduce the likelihood that search query requests are throttled. Solution: You enable customer-managed key (CMK) encryption. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"no\",\n      \"feedback\": {\n        \"correct\": \"Correct! CMK encryption enhances security by giving you control over the encryption keys for data at rest, but it does not increase the query processing capacity of the search service. It might even introduce a slight performance overhead. Throttling is addressed by scaling resources (replicas, partitions, tier).\",\n        \"incorrect\": \"Incorrect. CMK is a security feature, not a performance scaling feature.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"50\",\n      \"type\": \"yes_no\",\n      \"question\": \"You create a web app named app1 that runs on an Azure virtual machine named vm1. Vm1 is on an Azure virtual network named vnet1. You plan to create a new Azure Cognitive Search service named service1. You need to ensure that app1 can connect directly to service1 without routing traffic over the public internet. Solution: You deploy service1 and a private endpoint to vnet1. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"yes\",\n      \"feedback\": {\n        \"correct\": \"Correct! A private endpoint creates a network interface within your virtual network (vnet1) that connects privately to the Azure service (service1) via Azure Private Link, keeping traffic off the public internet. This allows app1 on vm1 in vnet1 to connect directly and securely.\",\n        \"incorrect\": \"Incorrect. This is the standard and correct method to achieve private connectivity.\"\n      },\n      \"quiz_tag\": \"Plan and manage an Azure AI solution\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"109\",\n      \"type\": \"yes_no\",\n      \"question\": \"You build a language model by using a Language Understanding service. The language model is used to search for information on a contact list by using an intent named FindContact. A conversational expert provides you with the following list of phrases to use for training:\\n- Find contacts in London.\\n- Who do I know in Seattle?\\n- Search for contacts in Ukraine.\\nYou need to implement the phrase list in Language Understanding. Solution: You create a new pattern in the FindContact intent. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"no\",\n      \"feedback\": {\n        \"correct\": \"Correct! Patterns are for matching specific text structures, often with optional elements or entity placeholders. While a pattern *might* work for one of these, the standard and more robust way to train an intent with varied phrasing like this is to add them as *example utterances* to the intent. This allows the machine learning model to generalize.\",\n        \"incorrect\": \"Incorrect! These should be added as example utterances to train the intent's ML model, not defined as rigid patterns.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"110\",\n      \"type\": \"yes_no\",\n      \"question\": \"You develop an application to identify species of flowers by training a Custom Vision model. You receive images of new flower species. You need to add the new images to the classifier. Solution: You add the new images, and then use the Smart Labeler tool. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"no\",\n      \"feedback\": {\n        \"correct\": \"Correct! The Smart Labeler suggests tags based on the *existing* trained model for untagged images already in the project. It cannot automatically identify or label *new, unknown* species. You must manually add the new images, *manually create new tags* for the new species, label the images with these new tags, and then *retrain* the model.\",\n        \"incorrect\": \"Incorrect! Smart Labeler cannot identify new species; manual labeling and retraining are required.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"111\",\n      \"type\": \"yes_no\",\n      \"question\": \"You develop an application to identify species of flowers by training a Custom Vision model. You receive images of new flower species. You need to add the new images to the classifier. Solution: You add the new images and labels to the existing model. You retrain the model, and then publish the model. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"yes\",\n      \"feedback\": {\n        \"correct\": \"Correct! This describes the correct process: add the new images, assign the appropriate labels (tags for the new species, likely creating new tags), retrain the model so it learns the new species alongside the old ones, and publish the updated iteration.\",\n        \"incorrect\": \"Incorrect. This is the standard workflow.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"112\",\n      \"type\": \"yes_no\",\n      \"question\": \"You develop an application to identify species of flowers by training a Custom Vision model. You receive images of new flower species. You need to add the new images to the classifier. Solution: You create a new model, and then upload the new images and labels. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"no\",\n      \"feedback\": {\n        \"correct\": \"Correct! Creating a completely new model (or project) means starting from scratch and losing the knowledge gained from training on the original flower species. The goal is typically to *extend* the existing classifier by adding the new species images and labels to the current project and retraining.\",\n        \"incorrect\": \"Incorrect. This would discard the existing model's training. You should add to the existing project and retrain.\"\n      },\n      \"quiz_tag\": \"Implement computer vision solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"125\",\n      \"type\": \"yes_no\",\n      \"question\": \"You build a language model by using a Language Understanding service. The language model is used to search for information on a contact list by using an intent named FindContact. A conversational expert provides you with the following list of phrases to use for training:\\n- Find contacts in London.\\n- Who do I know in Seattle?\\n- Search for contacts in Ukraine.\\nYou need to implement the phrase list in Language Understanding. Solution: You create a new intent for location. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"no\",\n      \"feedback\": {\n        \"correct\": \"Correct! Creating a new intent specifically for 'location' doesn't address the primary goal, which is to trigger the 'FindContact' intent based on these phrases. The core action is finding contacts. The location is a parameter. These phrases should be added as example utterances to the 'FindContact' intent, and 'location' should be identified as an entity.\",\n        \"incorrect\": \"Incorrect. The intent is 'FindContact'; 'location' is an entity within that intent. These phrases should train the 'FindContact' intent.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"medium\"\n    },\n    {\n      \"id\": \"126\",\n      \"type\": \"yes_no\",\n      \"question\": \"You build a language model by using a Language Understanding service. The language model is used to search for information on a contact list by using an intent named FindContact. A conversational expert provides you with the following list of phrases to use for training:\\n- Find contacts in London.\\n- Who do I know in Seattle?\\n- Search for contacts in Ukraine.\\nYou need to implement the phrase list in Language Understanding. Solution: You create a new entity for the domain. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"yes\",\n      \"feedback\": {\n        \"correct\": \"Correct! While phrased slightly ambiguously ('entity for the domain'), the most sensible interpretation is creating an entity (e.g., named 'Location' or using a prebuilt like geographyV2) to capture 'London', 'Seattle', and 'Ukraine'. You would then add the provided phrases as example utterances to the 'FindContact' intent and label these location words with the new entity. This allows the model to learn the 'FindContact' intent while recognizing the location parameter.\",\n        \"incorrect\": \"Incorrect. Creating a location entity and adding the phrases as examples to the intent is the standard approach.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    },\n    {\n      \"id\": \"171\",\n      \"type\": \"yes_no\",\n      \"question\": \"You build a language model by using a Conversational Language Understanding. The language model is used to search for information on a contact list by using an intent named FindContact. A conversational expert provides you with the following list of phrases to use for training.\\n- Find contacts in London.\\n- Who do I know in Seattle?\\n- Search for contacts in Ukraine.\\nYou need to implement the phrase list in Conversational Language Understanding. Solution: You create a new utterance for each phrase in the FindContact intent. Does this meet the goal?\",\n      \"points\": 1,\n      \"correctAnswer\": \"yes\",\n      \"feedback\": {\n        \"correct\": \"Correct! Adding example utterances directly to the intent they represent is the primary way to train a CLU (or LUIS) model to recognize that intent. This directly implements the requirement of using the provided phrases for training.\",\n        \"incorrect\": \"Incorrect. Adding these as example utterances to the target intent is the fundamental training method.\"\n      },\n      \"quiz_tag\": \"Implement natural language processing solutions\",\n      \"difficulty\": \"easy\"\n    }\n  ]\n}"
    },
    {
      "filepath": "app/data/quizzes/azure-a102/quiz_metadata.json",
      "content": "{\n  \"metadata\": {\n    \"id\": \"azure-a102\",\n    \"title\": \"Azure AI Engineer A102 Practice Quiz\",\n    \"description\": \"Covers implementation and management of Azure AI services: language, vision, document intelligence, and solution planning.\",\n    \"quizType\": \"mixed\",\n    \"settings\": {\n      \"randomizeQuestions\": false,\n      \"randomizeOptions\":   false,\n      \"passingScore\":       70,\n      \"showFeedback\":       true,\n      \"timeLimit\":          null,\n      \"attemptsAllowed\":    null\n    },\n    \"author\":    \"amankumarshrestha\",\n    \"difficulty\":\"medium\",\n    \"tags\": [\n      \"Implement natural language processing solutions\",\n      \"Implement computer vision solutions\",\n      \"Plan and manage an Azure AI solution\",\n      \"Implement knowledge mining and document intelligence solutions\"\n    ]\n  },\n  \"quiz_topic\": \"Azure AI\"\n}\n"
    },
    {
      "filepath": "app/debug-components/page.tsx",
      "content": "'use client';\n\nimport React, { useState } from 'react';\nimport SingleSelectionComponent from '../features/quiz/components/question-types/SingleSelectionComponent';\nimport MultiChoiceComponent from '../features/quiz/components/question-types/MultiChoiceComponent';\nimport { SingleSelectionQuestion, MultiChoiceQuestion } from '../types/quiz';\n\n// Sample questions for debugging\nconst singleSelectionQuestion: SingleSelectionQuestion = {\n  id: 'debug-single',\n  type: 'single_selection',\n  question: 'Which of the following is a JavaScript framework?',\n  points: 1,\n  quiz_tag: 'debug',\n  difficulty: 'easy',\n  explanation: 'React is a JavaScript library/framework for building user interfaces.',\n  feedback_correct: 'Correct! React is a JavaScript framework.',\n  feedback_incorrect: 'Incorrect. React is the JavaScript framework in this list.',\n  created_at: new Date().toISOString(),\n  updated_at: new Date().toISOString(),\n  options: [\n    { option_id: 'A', text: 'Python' },\n    { option_id: 'B', text: 'React' },\n    { option_id: 'C', text: 'Java' },\n    { option_id: 'D', text: 'C#' }\n  ],\n  correctAnswerOptionId: 'B'\n};\n\nconst multiChoiceQuestion: MultiChoiceQuestion = {\n  id: 'debug-multi',\n  type: 'multi',\n  question: 'Which of the following are JavaScript frameworks/libraries? (Select all that apply)',\n  points: 2,\n  quiz_tag: 'debug',\n  difficulty: 'medium',\n  explanation: 'React, Angular, and Vue.js are all JavaScript frameworks/libraries.',\n  feedback_correct: 'Correct! You identified all the JavaScript frameworks correctly.',\n  feedback_incorrect: 'Incorrect. React, Angular, and Vue.js are the JavaScript frameworks in this list.',\n  created_at: new Date().toISOString(),\n  updated_at: new Date().toISOString(),\n  options: [\n    { option_id: 'A', text: 'React' },\n    { option_id: 'B', text: 'Python' },\n    { option_id: 'C', text: 'Angular' },\n    { option_id: 'D', text: 'Vue.js' }\n  ],\n  correctAnswerOptionIds: ['A', 'C', 'D']\n};\n\nconst DebugComponentsPage: React.FC = () => {\n  const [singleSelectionAnswer, setSingleSelectionAnswer] = useState<string | undefined>();\n  const [multiChoiceAnswers, setMultiChoiceAnswers] = useState<string[]>([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  \n  const resetAnswers = () => {\n    setSingleSelectionAnswer(undefined);\n    setMultiChoiceAnswers([]);\n    setIsSubmitted(false);\n    setShowCorrectAnswer(false);\n  };\n  \n  return (\n    <div className=\"min-h-screen bg-custom-light-bg py-12 px-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-center mb-8 text-custom-dark-blue\">\n          Question Components Debug Page\n        </h1>\n        \n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4 text-custom-primary\">Control Panel</h2>\n          <div className=\"flex flex-wrap gap-4 justify-center\">\n            <button\n              className=\"bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded\"\n              onClick={resetAnswers}\n            >\n              Reset Answers\n            </button>\n            <button\n              className=\"bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded\"\n              onClick={() => setIsSubmitted(!isSubmitted)}\n            >\n              {isSubmitted ? 'Unsubmit Answers' : 'Submit Answers'}\n            </button>\n            <button\n              className=\"bg-yellow-600 hover:bg-yellow-700 text-white py-2 px-4 rounded\"\n              onClick={() => setShowCorrectAnswer(!showCorrectAnswer)}\n            >\n              {showCorrectAnswer ? 'Hide Correct Answers' : 'Show Correct Answers'}\n            </button>\n          </div>\n          \n          <div className=\"mt-4 p-4 bg-gray-50 rounded\">\n            <h3 className=\"font-medium mb-2\">Current State:</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <p><strong>Single Selection Answer:</strong> {singleSelectionAnswer || 'None'}</p>\n                <p><strong>Is Submitted:</strong> {isSubmitted ? 'Yes' : 'No'}</p>\n              </div>\n              <div>\n                <p><strong>Multi Choice Answers:</strong> {multiChoiceAnswers.length ? multiChoiceAnswers.join(', ') : 'None'}</p>\n                <p><strong>Show Correct Answer:</strong> {showCorrectAnswer ? 'Yes' : 'No'}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"space-y-12\">\n          {/* Single Selection Component */}\n          <div className=\"bg-white rounded-lg shadow-lg p-6\">\n            <h2 className=\"text-2xl font-bold mb-4 text-custom-dark-blue border-b pb-2\">\n              Single Selection Component\n            </h2>\n            <div className=\"mb-4\">\n              <p className=\"font-medium text-lg\">{singleSelectionQuestion.question}</p>\n            </div>\n            <SingleSelectionComponent \n              question={singleSelectionQuestion}\n              onAnswerSelect={setSingleSelectionAnswer}\n              selectedOptionId={singleSelectionAnswer}\n              isSubmitted={isSubmitted}\n              showCorrectAnswer={showCorrectAnswer}\n            />\n          </div>\n          \n          {/* Multi Choice Component */}\n          <div className=\"bg-white rounded-lg shadow-lg p-6\">\n            <h2 className=\"text-2xl font-bold mb-4 text-custom-dark-blue border-b pb-2\">\n              Multi Choice Component\n            </h2>\n            <div className=\"mb-4\">\n              <p className=\"font-medium text-lg\">{multiChoiceQuestion.question}</p>\n            </div>\n            <MultiChoiceComponent \n              question={multiChoiceQuestion}\n              onAnswerSelect={setMultiChoiceAnswers}\n              selectedOptionIds={multiChoiceAnswers}\n              isSubmitted={isSubmitted}\n              showCorrectAnswer={showCorrectAnswer}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DebugComponentsPage;\n"
    },
    {
      "filepath": "libs/gpt.ts",
      "content": "import axios from 'axios';\n\n// Use this if you want to make a call to OpenAI GPT-4 for instance. userId is used to identify the user on openAI side.\nexport const sendOpenAi = async (\n  messages: any[], // TODO: type this\n  userId: number,\n  max = 100,\n  temp = 1\n) => {\n  const url = 'https://api.openai.com/v1/chat/completions';\n\n  console.log('Ask GPT >>>');\n  messages.map((m) =>\n    console.log(' - ' + m.role.toUpperCase() + ': ' + m.content)\n  );\n\n  const body = JSON.stringify({\n    model: 'gpt-4',\n    messages,\n    max_tokens: max,\n    temperature: temp,\n    user: userId,\n  });\n\n  const options = {\n    headers: {\n      Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(url, body, options);\n\n    const answer = res.data.choices[0].message.content;\n    const usage = res?.data?.usage;\n\n    console.log('>>> ' + answer);\n    console.log(\n      'TOKENS USED: ' +\n        usage?.total_tokens +\n        ' (prompt: ' +\n        usage?.prompt_tokens +\n        ' / response: ' +\n        usage?.completion_tokens +\n        ')'\n    );\n    console.log('\\n');\n\n    return answer;\n  } catch (e) {\n    console.error('GPT Error: ' + e?.response?.status, e?.response?.data);\n    return null;\n  }\n};\n"
    },
    {
      "filepath": "libs/stripe.ts",
      "content": "import Stripe from \"stripe\";\n\ninterface CreateCheckoutParams {\n  priceId: string;\n  mode: \"payment\" | \"subscription\";\n  successUrl: string;\n  cancelUrl: string;\n  couponId?: string | null;\n  clientReferenceId?: string;\n  user?: {\n    customerId?: string;\n    email?: string;\n  };\n}\n\ninterface CreateCustomerPortalParams {\n  customerId: string;\n  returnUrl: string;\n}\n\n// This is used to create a Stripe Checkout for one-time payments. It's usually triggered with the <ButtonCheckout /> component. Webhooks are used to update the user's state in the database.\nexport const createCheckout = async ({\n  user,\n  mode,\n  clientReferenceId,\n  successUrl,\n  cancelUrl,\n  priceId,\n  couponId,\n}: CreateCheckoutParams): Promise<string> => {\n  try {\n    const stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n      apiVersion: \"2023-08-16\", // TODO: update this when Stripe updates their API\n      typescript: true,\n    });\n\n    const extraParams: {\n      customer?: string;\n      customer_creation?: \"always\";\n      customer_email?: string;\n      invoice_creation?: { enabled: boolean };\n      payment_intent_data?: { setup_future_usage: \"on_session\" };\n      tax_id_collection?: { enabled: boolean };\n    } = {};\n\n    if (user?.customerId) {\n      extraParams.customer = user.customerId;\n    } else {\n      if (mode === \"payment\") {\n        extraParams.customer_creation = \"always\";\n        // The option below costs 0.4% (up to $2) per invoice. Alternatively, you can use https://zenvoice.io/ to create unlimited invoices automatically.\n        // extraParams.invoice_creation = { enabled: true };\n        extraParams.payment_intent_data = { setup_future_usage: \"on_session\" };\n      }\n      if (user?.email) {\n        extraParams.customer_email = user.email;\n      }\n      extraParams.tax_id_collection = { enabled: true };\n    }\n\n    const stripeSession = await stripe.checkout.sessions.create({\n      mode,\n      allow_promotion_codes: true,\n      client_reference_id: clientReferenceId,\n      line_items: [\n        {\n          price: priceId,\n          quantity: 1,\n        },\n      ],\n      discounts: couponId\n        ? [\n            {\n              coupon: couponId,\n            },\n          ]\n        : [],\n      success_url: successUrl,\n      cancel_url: cancelUrl,\n      ...extraParams,\n    });\n\n    return stripeSession.url;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n};\n\n// This is used to create Customer Portal sessions, so users can manage their subscriptions (payment methods, cancel, etc..)\nexport const createCustomerPortal = async ({\n  customerId,\n  returnUrl,\n}: CreateCustomerPortalParams): Promise<string> => {\n  const stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n    apiVersion: \"2023-08-16\", // TODO: update this when Stripe updates their API\n    typescript: true,\n  });\n\n  const portalSession = await stripe.billingPortal.sessions.create({\n    customer: customerId,\n    return_url: returnUrl,\n  });\n\n  return portalSession.url;\n};\n\n// This is used to get the uesr checkout session and populate the data so we get the planId the user subscribed to\nexport const findCheckoutSession = async (sessionId: string) => {\n  try {\n    const stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n      apiVersion: \"2023-08-16\", // TODO: update this when Stripe updates their API\n      typescript: true,\n    });\n\n    const session = await stripe.checkout.sessions.retrieve(sessionId, {\n      expand: [\"line_items\"],\n    });\n\n    return session;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n};\n"
    },
    {
      "filepath": "libs/mailgun.ts",
      "content": "import config from \"@/config\";\nconst formData = require(\"form-data\");\nconst Mailgun = require(\"mailgun.js\");\nconst mailgun = new Mailgun(formData);\n\nconst mg = mailgun.client({\n  username: \"api\",\n  key: process.env.MAILGUN_API_KEY || \"dummy\",\n});\n\nif (!process.env.MAILGUN_API_KEY && process.env.NODE_ENV === \"development\") {\n  console.group(\"\u26a0\ufe0f MAILGUN_API_KEY missing from .env\");\n  console.error(\"It's not mandatory but it's required to send emails.\");\n  console.error(\"If you don't need it, remove the code from /libs/mailgun.js\");\n  console.groupEnd();\n}\n\n/**\n * Sends an email using the provided parameters.\n *\n * @async\n * @param {string} to - The recipient's email address.\n * @param {string} subject - The subject of the email.\n * @param {string} text - The plain text content of the email.\n * @param {string} html - The HTML content of the email.\n * @param {string} replyTo - The email address to set as the \"Reply-To\" address.\n * @returns {Promise} A Promise that resolves when the email is sent.\n */\nexport const sendEmail = async ({\n  to,\n  subject,\n  text,\n  html,\n  replyTo,\n}: {\n  to: string;\n  subject: string;\n  text?: string;\n  html?: string;\n  replyTo?: string;\n}): Promise<any> => {\n  const data = {\n    from: config.mailgun.fromAdmin,\n    to: [to],\n    subject,\n    text,\n    html,\n    ...(replyTo && { \"h:Reply-To\": replyTo }),\n  };\n\n  await mg.messages.create(\n    (config.mailgun.subdomain ? `${config.mailgun.subdomain}.` : \"\") +\n      config.domainName,\n    data\n  );\n};\n"
    },
    {
      "filepath": "libs/seo.tsx",
      "content": "import type { Metadata } from \"next\";\nimport config from \"@/config\";\n\n// These are all the SEO tags you can add to your pages.\n// It prefills data with default title/description/OG, etc.. and you can cusotmize it for each page.\n// It's already added in the root layout.js so you don't have to add it to every pages\n// But I recommend to set the canonical URL for each page (export const metadata = getSEOTags({canonicalUrlRelative: \"/\"});)\n// See https://shipfa.st/docs/features/seo\nexport const getSEOTags = ({\n  title,\n  description,\n  keywords,\n  openGraph,\n  canonicalUrlRelative,\n  extraTags,\n}: Metadata & {\n  canonicalUrlRelative?: string;\n  extraTags?: Record<string, any>;\n} = {}) => {\n  return {\n    // up to 50 characters (what does your app do for the user?) > your main should be here\n    title: title || config.appName,\n    // up to 160 characters (how does your app help the user?)\n    description: description || config.appDescription,\n    // some keywords separated by commas. by default it will be your app name\n    keywords: keywords || [config.appName],\n    applicationName: config.appName,\n    // set a base URL prefix for other fields that require a fully qualified URL (.e.g og:image: og:image: 'https://yourdomain.com/share.png' => '/share.png')\n    metadataBase: new URL(\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:3000/\"\n        : `https://${config.domainName}/`\n    ),\n\n    openGraph: {\n      title: openGraph?.title || config.appName,\n      description: openGraph?.description || config.appDescription,\n      url: openGraph?.url || `https://${config.domainName}/`,\n      siteName: openGraph?.title || config.appName,\n      // If you add an opengraph-image.(jpg|jpeg|png|gif) image to the /app folder, you don't need the code below\n      // images: [\n      //   {\n      //     url: `https://${config.domainName}/share.png`,\n      //     width: 1200,\n      //     height: 660,\n      //   },\n      // ],\n      locale: \"en_US\",\n      type: \"website\",\n    },\n\n    twitter: {\n      title: openGraph?.title || config.appName,\n      description: openGraph?.description || config.appDescription,\n      // If you add an twitter-image.(jpg|jpeg|png|gif) image to the /app folder, you don't need the code below\n      // images: [openGraph?.image || defaults.og.image],\n      card: \"summary_large_image\",\n      creator: \"@marc_louvion\",\n    },\n\n    // If a canonical URL is given, we add it. The metadataBase will turn the relative URL into a fully qualified URL\n    ...(canonicalUrlRelative && {\n      alternates: { canonical: canonicalUrlRelative },\n    }),\n\n    // If you want to add extra tags, you can pass them here\n    ...extraTags,\n  };\n};\n\n// Strctured Data for Rich Results on Google. Learn more: https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data\n// Find your type here (SoftwareApp, Book...): https://developers.google.com/search/docs/appearance/structured-data/search-gallery\n// Use this tool to check data is well structure: https://search.google.com/test/rich-results\n// You don't have to use this component, but it increase your chances of having a rich snippet on Google.\n// I recommend this one below to your /page.js for software apps: It tells Google your AppName is a Software, and it has a rating of 4.8/5 from 12 reviews.\n// Fill the fields with your own data\n// See https://shipfa.st/docs/features/seo\nexport const renderSchemaTags = () => {\n  return (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{\n        __html: JSON.stringify({\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"SoftwareApplication\",\n          name: config.appName,\n          description: config.appDescription,\n          image: `https://${config.domainName}/icon.png`,\n          url: `https://${config.domainName}/`,\n          author: {\n            \"@type\": \"Person\",\n            name: \"Marc Lou\",\n          },\n          datePublished: \"2023-08-01\",\n          applicationCategory: \"EducationalApplication\",\n          aggregateRating: {\n            \"@type\": \"AggregateRating\",\n            ratingValue: \"4.8\",\n            ratingCount: \"12\",\n          },\n          offers: [\n            {\n              \"@type\": \"Offer\",\n              price: \"9.00\",\n              priceCurrency: \"USD\",\n            },\n          ],\n        }),\n      }}\n    ></script>\n  );\n};\n"
    },
    {
      "filepath": "libs/api.ts",
      "content": "import axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { redirect } from \"next/navigation\";\nimport config from \"@/config\";\n\n// use this to interact with our own API (/app/api folder) from the front-end side\n// See https://shipfa.st/docs/tutorials/api-call\nconst apiClient = axios.create({\n  baseURL: \"/api\",\n});\n\napiClient.interceptors.response.use(\n  function (response) {\n    return response.data;\n  },\n  function (error) {\n    let message = \"\";\n\n    if (error.response?.status === 401) {\n      // User not auth, ask to re login\n      toast.error(\"Please login\");\n      // Sends the user to the login page\n      redirect(config.auth.loginUrl);\n    } else if (error.response?.status === 403) {\n      // User not authorized, must subscribe/purchase/pick a plan\n      message = \"Pick a plan to use this feature\";\n    } else {\n      message =\n        error?.response?.data?.error || error.message || error.toString();\n    }\n\n    error.message =\n      typeof message === \"string\" ? message : JSON.stringify(message);\n\n    console.error(error.message);\n\n    // Automatically display errors to the user\n    if (error.message) {\n      toast.error(error.message);\n    } else {\n      toast.error(\"something went wrong...\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default apiClient;\n"
    },
    {
      "filepath": "components/LayoutClient.tsx",
      "content": "\"use client\";\n\nimport { createClientComponentClient } from \"@supabase/auth-helpers-nextjs\";\nimport { useEffect, useState, ReactNode } from \"react\";\nimport { usePathname } from \"next/navigation\";\nimport { Crisp } from \"crisp-sdk-web\";\nimport NextTopLoader from \"nextjs-toploader\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Tooltip } from \"react-tooltip\";\nimport config from \"@/config\";\n\n// Crisp customer chat support:\n// This component is separated from ClientLayout because it needs to be wrapped with <SessionProvider> to use useSession() hook\nconst CrispChat = (): null => {\n  const pathname = usePathname();\n\n  const supabase = createClientComponentClient();\n  const [data, setData] = useState(null);\n\n  // This is used to get the user data from Supabase Auth (if logged in) => user ID is used to identify users in Crisp\n  useEffect(() => {\n    const getUser = async () => {\n      const {\n        data: { session },\n      } = await supabase.auth.getSession();\n\n      if (session) {\n        setData(session.user);\n      }\n    };\n    getUser();\n  }, []);\n\n  useEffect(() => {\n    if (config?.crisp?.id) {\n      // Set up Crisp\n      Crisp.configure(config.crisp.id);\n\n      // (Optional) If onlyShowOnRoutes array is not empty in config.js file, Crisp will be hidden on the routes in the array.\n      // Use <AppButtonSupport> instead to show it (user clicks on the button to show Crisp\u2014it cleans the UI)\n      if (\n        config.crisp.onlyShowOnRoutes &&\n        !config.crisp.onlyShowOnRoutes?.includes(pathname)\n      ) {\n        Crisp.chat.hide();\n        Crisp.chat.onChatClosed(() => {\n          Crisp.chat.hide();\n        });\n      }\n    }\n  }, [pathname]);\n\n  // Add User Unique ID to Crisp to easily identify users when reaching support (optional)\n  useEffect(() => {\n    if (data?.user && config?.crisp?.id) {\n      Crisp.session.setData({ userId: data.user?.id });\n    }\n  }, [data]);\n\n  return null;\n};\n\n// All the client wrappers are here (they can't be in server components)\n// 1. NextTopLoader: Show a progress bar at the top when navigating between pages\n// 2. Toaster: Show Success/Error messages anywhere from the app with toast()\n// 3. Tooltip: Show tooltips if any JSX elements has these 2 attributes: data-tooltip-id=\"tooltip\" data-tooltip-content=\"\"\n// 4. CrispChat: Set Crisp customer chat support (see above)\nconst ClientLayout = ({ children }: { children: ReactNode }) => {\n  return (\n    <>\n      {/* Show a progress bar at the top when navigating between pages */}\n      <NextTopLoader color={config.colors.main} showSpinner={false} />\n\n      {/* Content inside app/page.js files  */}\n      {children}\n\n      {/* Show Success/Error messages anywhere from the app with toast() */}\n      <Toaster\n        toastOptions={{\n          duration: 3000,\n        }}\n      />\n\n      {/* Show tooltips if any JSX elements has these 2 attributes: data-tooltip-id=\"tooltip\" data-tooltip-content=\"\" */}\n      <Tooltip\n        id=\"tooltip\"\n        className=\"z-[60] !opacity-100 max-w-sm shadow-lg\"\n      />\n\n      {/* Set Crisp customer chat support */}\n      <CrispChat />\n    </>\n  );\n};\n\nexport default ClientLayout;\n"
    },
    {
      "filepath": "components/ButtonLead.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useRef } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport apiClient from \"@/libs/api\";\n\n// This component is used to collect the emails from the landing page\n// You'd use this if your product isn't ready yet or you want to collect leads\n// For instance: A popup to send a freebie, joining a waitlist, etc.\n// It calls the /api/lead/route.js route and store a Lead document in the database\nconst ButtonLead = ({ extraStyle }: { extraStyle?: string }) => {\n  const inputRef = useRef(null);\n  const [email, setEmail] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isDisabled, setIsDisabled] = useState<boolean>(false);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e?.preventDefault();\n\n    setIsLoading(true);\n    try {\n      await apiClient.post(\"/lead\", { email });\n\n      toast.success(\"Thanks for joining the waitlist!\");\n\n      // just remove the focus on the input\n      inputRef.current.blur();\n      setEmail(\"\");\n      setIsDisabled(true);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return (\n    <form\n      className={`w-full max-w-xs space-y-3 ${extraStyle ? extraStyle : \"\"}`}\n      onSubmit={handleSubmit}\n    >\n      <input\n        required\n        type=\"email\"\n        value={email}\n        ref={inputRef}\n        autoComplete=\"email\"\n        placeholder=\"tom@cruise.com\"\n        className=\"input input-bordered w-full placeholder:opacity-60\"\n        onChange={(e) => setEmail(e.target.value)}\n      />\n\n      <button\n        className=\"btn btn-primary btn-block\"\n        type=\"submit\"\n        disabled={isDisabled}\n      >\n        Join waitlist\n        {isLoading ? (\n          <span className=\"loading loading-spinner loading-xs\"></span>\n        ) : (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"w-5 h-5\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        )}\n      </button>\n    </form>\n  );\n};\n\nexport default ButtonLead;\n"
    },
    {
      "filepath": "components/ButtonAccount.tsx",
      "content": "/* eslint-disable @next/next/no-img-element */\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Popover, Transition } from \"@headlessui/react\";\nimport { createClientComponentClient } from \"@supabase/auth-helpers-nextjs\";\nimport apiClient from \"@/libs/api\";\n\n// A button to show user some account actions\n//  1. Billing: open a Stripe Customer Portal to manage their billing (cancel subscription, update payment method, etc.).\n//     You have to manually activate the Customer Portal in your Stripe Dashboard (https://dashboard.stripe.com/test/settings/billing/portal)\n//     This is only available if the customer has a customerId (they made a purchase previously)\n//  2. Logout: sign out and go back to homepage\n// See more at https://shipfa.st/docs/components/buttonAccount\nconst ButtonAccount = () => {\n  const supabase = createClientComponentClient();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [user, setUser] = useState<any>(null);\n\n  useEffect(() => {\n    const getUser = async () => {\n      const { data } = await supabase.auth.getUser();\n\n      setUser(data.user);\n    };\n\n    getUser();\n  }, [supabase]);\n\n  const handleSignOut = async () => {\n    await supabase.auth.signOut();\n    window.location.href = \"/\";\n  };\n\n  const handleBilling = async () => {\n    setIsLoading(true);\n\n    try {\n      const { url }: { url: string } = await apiClient.post(\n        \"/stripe/create-portal\",\n        {\n          returnUrl: window.location.href,\n        }\n      );\n\n      window.location.href = url;\n    } catch (e) {\n      console.error(e);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <Popover className=\"relative z-10\">\n      {({ open }) => (\n        <>\n          <Popover.Button className=\"btn\">\n            {user?.user_metadata?.avatar_url ? (\n              <img\n                src={user?.user_metadata?.avatar_url}\n                alt={\"Profile picture\"}\n                className=\"w-6 h-6 rounded-full shrink-0\"\n                referrerPolicy=\"no-referrer\"\n                width={24}\n                height={24}\n              />\n            ) : (\n              <span className=\"w-8 h-8 bg-base-100 flex justify-center items-center rounded-full shrink-0 capitalize\">\n                {user?.email?.charAt(0)}\n              </span>\n            )}\n\n            {user?.user_metadata?.name ||\n              user?.email?.split(\"@\")[0] ||\n              \"Account\"}\n\n            {isLoading ? (\n              <span className=\"loading loading-spinner loading-xs\"></span>\n            ) : (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className={`w-5 h-5 duration-200 opacity-50 ${\n                  open ? \"transform rotate-180 \" : \"\"\n                }`}\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            )}\n          </Popover.Button>\n          <Transition\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n          >\n            <Popover.Panel className=\"absolute left-0 z-10 mt-3 w-screen max-w-[16rem] transform\">\n              <div className=\"overflow-hidden rounded-xl shadow-xl ring-1 ring-base-content ring-opacity-5 bg-base-100 p-1\">\n                <div className=\"space-y-0.5 text-sm\">\n                  <button\n                    className=\"flex items-center gap-2 hover:bg-base-300 duration-200 py-1.5 px-4 w-full rounded-lg font-medium\"\n                    onClick={handleBilling}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"w-5 h-5\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M2.5 4A1.5 1.5 0 001 5.5V6h18v-.5A1.5 1.5 0 0017.5 4h-15zM19 8.5H1v6A1.5 1.5 0 002.5 16h15a1.5 1.5 0 001.5-1.5v-6zM3 13.25a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5h-1.5a.75.75 0 01-.75-.75zm4.75-.75a.75.75 0 000 1.5h3.5a.75.75 0 000-1.5h-3.5z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                    Billing\n                  </button>\n                  <button\n                    className=\"flex items-center gap-2 hover:bg-error/20 hover:text-error duration-200 py-1.5 px-4 w-full rounded-lg font-medium\"\n                    onClick={handleSignOut}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"w-5 h-5\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 4.25A2.25 2.25 0 015.25 2h5.5A2.25 2.25 0 0113 4.25v2a.75.75 0 01-1.5 0v-2a.75.75 0 00-.75-.75h-5.5a.75.75 0 00-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 00.75-.75v-2a.75.75 0 011.5 0v2A2.25 2.25 0 0110.75 18h-5.5A2.25 2.25 0 013 15.75V4.25z\"\n                        clipRule=\"evenodd\"\n                      />\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 10a.75.75 0 01.75-.75h9.546l-1.048-.943a.75.75 0 111.004-1.114l2.5 2.25a.75.75 0 010 1.114l-2.5 2.25a.75.75 0 11-1.004-1.114l1.048-.943H6.75A.75.75 0 016 10z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                    Logout\n                  </button>\n                </div>\n              </div>\n            </Popover.Panel>\n          </Transition>\n        </>\n      )}\n    </Popover>\n  );\n};\n\nexport default ButtonAccount;\n"
    },
    {
      "filepath": "components/Hero.tsx",
      "content": "import Image from \"next/image\";\nimport TestimonialsAvatars from \"./TestimonialsAvatars\";\nimport config from \"@/config\";\n\nconst Hero = () => {\n  return (\n    <section className=\"max-w-7xl mx-auto bg-base-100 flex flex-col lg:flex-row items-center justify-center gap-16 lg:gap-20 px-8 py-8 lg:py-20\">\n      <div className=\"flex flex-col gap-10 lg:gap-14 items-center justify-center text-center lg:text-left lg:items-start\">\n        <a\n          href=\"https://www.producthunt.com/posts/shipfast-2?utm_source=badge-top-post-badge&utm_medium=badge&utm_souce=badge-shipfast&#0045;2\"\n          target=\"_blank\"\n          className=\" -mb-4 md:-mb-6 group\"\n          title=\"Product Hunt link\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 122 37\"\n            className=\"w-32 md:w-36 fill-base-content/80 group-hover:fill-base-content\"\n          >\n            <path d=\"M104.953 36.286c-4.22 1.634-5.936.086-5.936-.891 1.495-.126 5.067-.331 5.936.891Zm5.356-1.336a5.486 5.486 0 0 1-7.083-.497c1.44-.4 5.372-.874 7.083.497Zm-7.139-3.176c.16 2.033-1.922 3.176-4.17 3.341.41-2.045 2.509-2.958 4.17-3.341Zm4.032-1.874c.238.869-.089 3.228-3.323 4.164.139-1.593.986-3.667 3.323-4.164Zm6.413 2.365a5.005 5.005 0 0 1-6.385.571c1.296-.668 4.408-1.57 6.385-.571Zm-3.417-4.706c.443.856.537 3.295-2.326 4.763-.166-1.57.465-4.255 2.326-4.763Zm7.083.948a4.389 4.389 0 0 1-2.657 2.217 4.243 4.243 0 0 1-3.39-.44c1.805-1.697 4.685-2.348 6.047-1.777Zm-4.28-4.547c1.284 2.24-.073 4.798-1.485 5.849-.628-2.082-.052-4.351 1.484-5.849Zm6.662-.097c.155 3.479-3.478 3.29-5.184 3.313.537-.731 3.522-3.381 5.184-3.313Zm-4.48-3.25c.675.743 1.688 3.599-.555 5.929-.703-1.685-.858-4.272.554-5.929Zm6.385-1.542c.116 2.81-2.249 4.232-4.53 4.21.686-1.354 2.52-3.964 4.53-4.21Zm-4.785-1.936c1.512.89 1.34 3.764.448 5.26-1.002-1.393-1.75-3.124-.448-5.26Zm4.884-2.633c.748 2.559-1.45 4.29-2.769 4.438.338-1.222.781-3.387 2.77-4.438Zm-4.607-.851c1.667.835 2.457 2.832 1.833 4.632-1.163-.937-2.564-2.919-1.833-4.632Zm4.685-3.096c1.03 3.113-1.335 4.13-2.215 4.38.105-1.324.947-3.963 2.215-4.38Zm-4.619-.817c.676.195 2.603 1.777 2.254 4.61-1.268-.714-2.808-2.074-2.254-4.61Zm3.921-3.9c1.152 3.826-.77 5.397-1.401 5.71-.1-1.21-.222-4.037 1.401-5.71Zm-4.264.096c1.207.337 2.73 2.553 2.658 4.684-1.196-.548-2.985-2.827-2.658-4.684Zm.36-5.934c2.802 2.896 3.195 5.18 2.376 7.996-1.269-1.142-2.282-4.569-2.376-7.996ZM17.047 36.286c4.22 1.634 5.936.086 5.936-.891-1.495-.126-5.067-.331-5.936.891ZM11.69 34.95a5.486 5.486 0 0 0 7.083-.497c-1.44-.4-5.372-.874-7.083.497Zm7.139-3.176c-.16 2.033 1.922 3.176 4.17 3.341-.41-2.045-2.509-2.958-4.17-3.341ZM14.798 29.9c-.238.869.089 3.228 3.323 4.164-.139-1.593-.986-3.667-3.323-4.164Zm-6.413 2.365a5.005 5.005 0 0 0 6.385.571c-1.296-.668-4.408-1.57-6.385-.571Zm3.417-4.706c-.443.856-.537 3.295 2.326 4.763.166-1.57-.465-4.255-2.326-4.763Zm-7.083.948a4.389 4.389 0 0 0 2.657 2.217 4.243 4.243 0 0 0 3.39-.44c-1.805-1.697-4.685-2.348-6.047-1.777Zm4.28-4.547c-1.284 2.24.073 4.798 1.485 5.849.628-2.082.052-4.351-1.484-5.849Zm-6.662-.097c-.155 3.479 3.478 3.29 5.184 3.313-.537-.731-3.522-3.381-5.184-3.313Zm4.48-3.25c-.675.743-1.688 3.599.555 5.929.703-1.685.858-4.272-.554-5.929ZM.433 19.071c-.116 2.81 2.249 4.232 4.53 4.21-.686-1.354-2.52-3.964-4.53-4.21Zm4.785-1.936c-1.512.89-1.34 3.764-.448 5.26 1.002-1.393 1.75-3.124.448-5.26ZM.333 14.502c-.748 2.559 1.45 4.29 2.769 4.438-.338-1.222-.781-3.387-2.77-4.438Zm4.607-.851c-1.667.835-2.457 2.832-1.833 4.632 1.163-.937 2.564-2.919 1.833-4.632ZM.255 10.555c-1.03 3.113 1.335 4.13 2.215 4.38-.105-1.324-.947-3.963-2.215-4.38Zm4.619-.817c-.676.195-2.603 1.777-2.254 4.61 1.268-.714 2.808-2.074 2.254-4.61Zm-3.921-3.9c-1.152 3.826.77 5.397 1.401 5.71.1-1.21.222-4.037-1.401-5.71Zm4.264.096c-1.207.337-2.73 2.553-2.658 4.684 1.196-.548 2.985-2.827 2.658-4.684ZM4.857 0C2.055 2.896 1.662 5.18 2.481 7.996 3.75 6.854 4.763 3.427 4.857 0Zm47.017 35.234c2.394 0 4.302-1.476 4.302-3.762 0-1.71-1.062-2.7-2.16-3.15.864-.378 1.728-1.26 1.728-2.7 0-2.142-1.818-3.366-3.834-3.366-1.656 0-2.952.81-3.636 1.89a.285.285 0 0 0 .072.396l1.26 1.224c.144.144.306.162.414-.036.324-.576.9-.954 1.602-.954.81 0 1.44.54 1.44 1.332 0 .612-.36 1.296-1.386 1.296h-.486c-.18 0-.306.09-.306.288v1.638c0 .18.126.288.306.288h.504c1.26 0 1.692.846 1.692 1.53 0 .81-.576 1.566-1.692 1.566-.828 0-1.404-.45-1.89-1.026-.144-.144-.288-.144-.396-.036l-1.35 1.242a.258.258 0 0 0-.054.378c.684 1.08 1.998 1.962 3.87 1.962ZM60.208 35c.162 0 .288-.108.288-.27v-4.248c0-1.314.684-2.034 1.818-2.034.27 0 .468.036.648.09.252.054.378 0 .378-.234v-1.746c0-.162-.036-.27-.162-.36-.144-.108-.378-.234-.81-.234-1.026 0-1.584.72-1.872 1.674l-.09-1.17c0-.216-.108-.288-.27-.288h-2.124c-.162 0-.27.108-.27.27v8.28c0 .162.108.27.27.27h2.196Zm8.1.216c1.26 0 2.16-.504 2.754-1.35l.036.864c0 .162.126.27.288.27h1.98c.162 0 .306-.108.306-.27V22.4c0-.162-.126-.27-.288-.27H71.17c-.162 0-.27.108-.27.27v4.662c-.594-.702-1.44-1.098-2.592-1.098-2.448 0-4.14 2.016-4.14 4.626 0 2.628 1.692 4.626 4.14 4.626Zm.594-2.502c-1.17 0-2.052-.828-2.052-2.124 0-1.278.882-2.124 2.052-2.124 1.206 0 2.034.846 2.034 2.106 0 1.296-.828 2.142-2.034 2.142ZM20.72 15c.09 0 .15-.06.15-.15v-2.26h.72c1.69 0 2.49-.93 2.49-2.29 0-1.36-.8-2.3-2.49-2.3h-2.15c-.09 0-.15.06-.15.15v6.7c0 .09.06.15.15.15h1.28Zm.15-5.6h.68c.53 0 1.02.17 1.02.9 0 .72-.49.89-1.02.89h-.68V9.4Zm5.5 5.6c.09 0 .16-.06.16-.15v-2.36c0-.73.38-1.13 1.01-1.13.15 0 .26.02.36.05.14.03.21 0 .21-.13v-.97c0-.09-.02-.15-.09-.2-.08-.06-.21-.13-.45-.13-.57 0-.88.4-1.04.93l-.05-.65c0-.12-.06-.16-.15-.16h-1.18c-.09 0-.15.06-.15.15v4.6c0 .09.06.15.15.15h1.22Zm4.77.12c1.48 0 2.58-1.12 2.58-2.57 0-1.45-1.1-2.57-2.58-2.57s-2.57 1.12-2.57 2.57c0 1.45 1.09 2.57 2.57 2.57Zm0-1.4c-.62 0-1.1-.45-1.1-1.17s.48-1.17 1.1-1.17c.62 0 1.1.45 1.1 1.17s-.48 1.17-1.1 1.17Zm5.49 1.4c.7 0 1.2-.28 1.53-.75l.02.48c0 .09.07.15.16.15h1.1c.09 0 .17-.06.17-.15V8c0-.09-.07-.15-.16-.15h-1.23c-.09 0-.15.06-.15.15v2.59c-.33-.39-.8-.61-1.44-.61-1.36 0-2.3 1.12-2.3 2.57 0 1.46.94 2.57 2.3 2.57Zm.33-1.39c-.65 0-1.14-.46-1.14-1.18 0-.71.49-1.18 1.14-1.18.67 0 1.13.47 1.13 1.17 0 .72-.46 1.19-1.13 1.19Zm5.52 1.39c.71 0 1.16-.35 1.44-.85l.04.57c0 .12.07.16.16.16h1.17c.09 0 .16-.06.16-.15v-4.6c0-.09-.07-.15-.16-.15h-1.21c-.09 0-.16.06-.16.15v2.48c0 .65-.33.99-.85.99-.54 0-.82-.34-.82-.99v-2.48c0-.09-.07-.15-.16-.15h-1.22c-.09 0-.15.06-.15.15v2.84c0 1.28.74 2.03 1.76 2.03Zm6.44 0c.79 0 1.45-.35 1.87-.9.06-.07.05-.15-.01-.21l-.69-.66c-.08-.08-.19-.08-.26-.01-.27.25-.53.38-.86.38-.74 0-1.18-.56-1.18-1.2 0-.63.44-1.14 1.16-1.14.34 0 .6.12.86.38.08.07.19.07.27-.01l.69-.66c.06-.06.07-.15.01-.21-.42-.55-1.08-.9-1.9-.9-1.48 0-2.56 1.1-2.56 2.54 0 1.47 1.1 2.6 2.6 2.6Zm4.77 0c.34 0 .88-.06.88-.31v-.83c0-.1-.08-.15-.18-.14-.13.01-.22.01-.31.01-.25 0-.42-.14-.42-.41v-2.16h.75c.09 0 .15-.06.15-.15v-.88c0-.09-.06-.15-.15-.15h-.75V8.95c0-.09-.07-.15-.16-.15h-1.23c-.09 0-.16.06-.16.15v1.15h-.61c-.09 0-.15.06-.15.15v.88c0 .09.06.15.15.15h.61v2.33c0 1.14.77 1.51 1.58 1.51Zm5.95 0c1.48 0 2.58-1.12 2.58-2.57 0-1.45-1.1-2.57-2.58-2.57s-2.57 1.12-2.57 2.57c0 1.45 1.09 2.57 2.57 2.57Zm0-1.4c-.62 0-1.1-.45-1.1-1.17s.48-1.17 1.1-1.17c.62 0 1.1.45 1.1 1.17s-.48 1.17-1.1 1.17ZM64.79 15c.09 0 .16-.06.16-.15v-3.57h.98c.09 0 .15-.06.15-.15v-.88c0-.09-.06-.15-.15-.15h-.98v-.49c0-.33.11-.57.58-.57.11 0 .25.03.42.06.07.01.13 0 .13-.07V8.02c0-.06-.03-.13-.09-.16-.3-.15-.52-.17-.82-.17-1.09 0-1.76.52-1.76 1.72v.69h-.58c-.09 0-.15.06-.15.15v.88c0 .09.06.15.15.15h.58v3.57c0 .09.06.15.15.15h1.23Zm6.08.12c.34 0 .88-.06.88-.31v-.83c0-.1-.08-.15-.18-.14-.13.01-.22.01-.31.01-.25 0-.42-.14-.42-.41v-2.16h.75c.09 0 .15-.06.15-.15v-.88c0-.09-.06-.15-.15-.15h-.75V8.95c0-.09-.07-.15-.16-.15h-1.23c-.09 0-.16.06-.16.15v1.15h-.61c-.09 0-.15.06-.15.15v.88c0 .09.06.15.15.15h.61v2.33c0 1.14.77 1.51 1.58 1.51Zm4.65-5.14c-.7 0-1.15.35-1.43.85V8c0-.09-.07-.15-.16-.15h-1.22c-.09 0-.15.06-.15.15v6.85c0 .09.06.15.15.15h1.22c.09 0 .16-.06.16-.15v-2.48c0-.65.32-.99.85-.99.54 0 .82.34.82.99v2.48c0 .09.07.15.16.15h1.21c.09 0 .16-.06.16-.15v-2.84c0-1.28-.75-2.03-1.77-2.03Zm5.34 5.14c.69 0 1.32-.2 1.74-.62.09-.08.09-.16.05-.22l-.41-.58c-.06-.07-.1-.09-.18-.05-.41.23-.75.27-1.08.27-.7 0-1.16-.26-1.33-.79h2.82c.45 0 .58-.3.58-.8 0-1.26-.87-2.35-2.37-2.35-1.51 0-2.52 1.11-2.52 2.55 0 1.49 1.09 2.59 2.7 2.59Zm-1.23-3.05c.12-.58.55-.83 1.06-.83s.9.24 1 .83h-2.06Zm8.27 3.05c.7 0 1.2-.28 1.53-.75l.02.48c0 .09.07.15.16.15h1.1c.09 0 .17-.06.17-.15V8c0-.09-.07-.15-.16-.15h-1.23c-.09 0-.15.06-.15.15v2.59c-.33-.39-.8-.61-1.44-.61-1.36 0-2.3 1.12-2.3 2.57 0 1.46.94 2.57 2.3 2.57Zm.33-1.39c-.65 0-1.14-.46-1.14-1.18 0-.71.49-1.18 1.14-1.18.67 0 1.13.47 1.13 1.17 0 .72-.46 1.19-1.13 1.19Zm5.81 1.39c.7 0 1.2-.28 1.53-.75l.02.48c0 .09.07.15.16.15h1.1c.09 0 .17-.06.17-.15v-4.6c0-.09-.07-.15-.16-.15h-1.11c-.09 0-.16.06-.16.15l-.02.47c-.32-.46-.81-.74-1.53-.74-1.36 0-2.3 1.12-2.3 2.57 0 1.46.94 2.57 2.3 2.57Zm.33-1.39c-.65 0-1.14-.46-1.14-1.18 0-.71.49-1.18 1.14-1.18.67 0 1.13.47 1.13 1.17 0 .72-.46 1.19-1.13 1.19Zm5.96 3.17c.08 0 .15-.04.18-.12l2.6-6.51c.04-.11-.02-.17-.13-.17h-1.24c-.08 0-.16.04-.19.12l-1.08 3-1.08-3c-.03-.08-.11-.12-.19-.12h-1.24c-.11 0-.17.06-.13.17l1.9 4.74-.72 1.71c-.05.12.01.18.13.18h1.19Z\"></path>\n          </svg>\n        </a>\n\n        <h1 className=\"font-extrabold text-4xl lg:text-6xl tracking-tight md:-mb-4\">\n          Ship your startup in days, not weeks\n        </h1>\n        <p className=\"text-lg opacity-80 leading-relaxed\">\n          The NextJS boilerplate with all you need to build your SaaS, AI tool,\n          or any other web app. From idea to production in 5 minutes.\n        </p>\n        <button className=\"btn btn-primary btn-wide\">\n          Get {config.appName}\n        </button>\n\n        <TestimonialsAvatars priority={true} />\n      </div>\n      <div className=\"lg:w-full\">\n        <Image\n          src=\"https://images.unsplash.com/photo-1571171637578-41bc2dd41cd2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3540&q=80\"\n          alt=\"Product Demo\"\n          className=\"w-full\"\n          priority={true}\n          width={500}\n          height={500}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;\n"
    },
    {
      "filepath": "components/ButtonSignin.tsx",
      "content": "/* eslint-disable @next/next/no-img-element */\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { createClientComponentClient } from \"@supabase/auth-helpers-nextjs\";\nimport config from \"@/config\";\n\n// A simple button to sign in with our providers (Google & Magic Links).\n// It automatically redirects user to callbackUrl (config.auth.callbackUrl) after login, which is normally a private page for users to manage their accounts.\n// If the user is already logged in, it will show their profile picture & redirect them to callbackUrl immediately.\nconst ButtonSignin = ({\n  text = \"Get started\",\n  extraStyle,\n}: {\n  text?: string;\n  extraStyle?: string;\n}) => {\n  const supabase = createClientComponentClient();\n  const [user, setUser] = useState<any>(null);\n\n  useEffect(() => {\n    const getUser = async () => {\n      const { data } = await supabase.auth.getUser();\n\n      setUser(data.user);\n    };\n\n    getUser();\n  }, [supabase]);\n\n  if (user) {\n    return (\n      <Link\n        href={config.auth.callbackUrl}\n        className={`btn ${extraStyle ? extraStyle : \"\"}`}\n      >\n        {user?.user_metadata?.avatar_url ? (\n          <img\n            src={user?.user_metadata?.avatar_url}\n            alt={user?.user_metadata?.name || \"Account\"}\n            className=\"w-6 h-6 rounded-full shrink-0\"\n            referrerPolicy=\"no-referrer\"\n            width={24}\n            height={24}\n          />\n        ) : (\n          <span className=\"w-6 h-6 bg-base-300 flex justify-center items-center rounded-full shrink-0\">\n            {user?.user_metadata?.name?.charAt(0) || user?.email?.charAt(0)}\n          </span>\n        )}\n        {user?.user_metadata?.name || user?.email || \"Account\"}\n      </Link>\n    );\n  }\n\n  return (\n    <Link\n      className={`btn ${extraStyle ? extraStyle : \"\"}`}\n      href={config.auth.loginUrl}\n    >\n      {text}\n    </Link>\n  );\n};\n\nexport default ButtonSignin;\n"
    },
    {
      "filepath": "components/Pricing.tsx",
      "content": "import config from \"@/config\";\nimport ButtonCheckout from \"./ButtonCheckout\";\n\n// <Pricing/> displays the pricing plans for your app\n// It's your Stripe config in config.js.stripe.plans[] that will be used to display the plans\n// <ButtonCheckout /> renders a button that will redirect the user to Stripe checkout called the /api/stripe/create-checkout API endpoint with the correct priceId\n\nconst Pricing = () => {\n  return (\n    <section className=\"bg-base-200 overflow-hidden\" id=\"pricing\">\n      <div className=\"py-24 px-8 max-w-5xl mx-auto\">\n        <div className=\"flex flex-col text-center w-full mb-20\">\n          <p className=\"font-medium text-primary mb-8\">Pricing</p>\n          <h2 className=\"font-bold text-3xl lg:text-5xl tracking-tight\">\n            Save hours of repetitive code and ship faster!\n          </h2>\n        </div>\n\n        <div className=\"relative flex justify-center flex-col lg:flex-row items-center lg:items-stretch gap-8\">\n          {config.stripe.plans.map((plan) => (\n            <div key={plan.priceId} className=\"relative w-full max-w-lg\">\n              {plan.isFeatured && (\n                <div className=\"absolute top-0 left-1/2 -translate-x-1/2 -translate-y-1/2 z-20\">\n                  <span\n                    className={`badge text-xs text-primary-content font-semibold border-0 bg-primary`}\n                  >\n                    POPULAR\n                  </span>\n                </div>\n              )}\n\n              {plan.isFeatured && (\n                <div\n                  className={`absolute -inset-[1px] rounded-[9px] bg-primary z-10`}\n                ></div>\n              )}\n\n              <div className=\"relative flex flex-col h-full gap-5 lg:gap-8 z-10 bg-base-100 p-8 rounded-lg\">\n                <div className=\"flex justify-between items-center gap-4\">\n                  <div>\n                    <p className=\"text-lg lg:text-xl font-bold\">{plan.name}</p>\n                    {plan.description && (\n                      <p className=\"text-base-content/80 mt-2\">\n                        {plan.description}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex gap-2\">\n                  {plan.priceAnchor && (\n                    <div className=\"flex flex-col justify-end mb-[4px] text-lg \">\n                      <p className=\"relative\">\n                        <span className=\"absolute bg-base-content h-[1.5px] inset-x-0 top-[53%]\"></span>\n                        <span className=\"text-base-content/80\">\n                          ${plan.priceAnchor}\n                        </span>\n                      </p>\n                    </div>\n                  )}\n                  <p className={`text-5xl tracking-tight font-extrabold`}>\n                    ${plan.price}\n                  </p>\n                  <div className=\"flex flex-col justify-end mb-[4px]\">\n                    <p className=\"text-xs text-base-content/60 uppercase font-semibold\">\n                      USD\n                    </p>\n                  </div>\n                </div>\n                {plan.features && (\n                  <ul className=\"space-y-2.5 leading-relaxed text-base flex-1\">\n                    {plan.features.map((feature, i) => (\n                      <li key={i} className=\"flex items-center gap-2\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          viewBox=\"0 0 20 20\"\n                          fill=\"currentColor\"\n                          className=\"w-[18px] h-[18px] opacity-80 shrink-0\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n\n                        <span>{feature.name} </span>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n                <div className=\"space-y-2\">\n                  <ButtonCheckout priceId={plan.priceId} />\n\n                  <p className=\"flex items-center justify-center gap-2 text-sm text-center text-base-content/80 font-medium relative\">\n                    Pay once. Access forever.\n                  </p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Pricing;\n"
    },
    {
      "filepath": "components/FeaturesListicle.tsx",
      "content": "\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport type { JSX } from \"react\";\n\n// List of features to display:\n// - name: name of the feature\n// - description: description of the feature (can be any JSX)\n// - svg: icon of the feature\nconst features: {\n  name: string;\n  description: JSX.Element;\n  svg: JSX.Element;\n}[] = [\n  {\n    name: \"Emails\",\n    description: (\n      <>\n        <ul className=\"space-y-1\">\n          {[\n            \"Send transactional emails\",\n            \"DNS setup to avoid spam folder (DKIM, DMARC, SPF in subdomain)\",\n            \"Webhook to receive & forward emails\",\n          ].map((item) => (\n            <li key={item} className=\"flex items-center gap-3\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className=\"w-[18px] h-[18px] inline shrink-0 opacity-80\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n\n              {item}\n            </li>\n          ))}\n          <li className=\"flex items-center gap-3 text-accent font-medium\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-[18px] h-[18px] inline shrink-0\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Time saved: 2 hours\n          </li>\n        </ul>\n      </>\n    ),\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-8 h-8\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          d=\"M16.5 12a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 10-2.636 6.364M16.5 12V8.25\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: \"Payments\",\n    description: (\n      <>\n        <ul className=\"space-y-2\">\n          {[\n            \"Create checkout sessions\",\n            \"Handle webhooks to update user's account\",\n            \"Tips to setup your account & reduce chargebacks\",\n          ].map((item) => (\n            <li key={item} className=\"flex items-center gap-3\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className=\"w-[18px] h-[18px] inline shrink-0 opacity-80\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n\n              {item}\n            </li>\n          ))}\n          <li className=\"flex items-center gap-3 text-accent font-medium\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-[18px] h-[18px] inline shrink-0\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Time saved: 2 hours\n          </li>\n        </ul>\n      </>\n    ),\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-8 h-8\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: \"Login\",\n    description: (\n      <>\n        <ul className=\"space-y-2\">\n          {[\n            \"Magic links setup\",\n            \"Login with Google walkthrough\",\n            \"Save user data in MongoDB\",\n            \"Private/protected pages & API calls\",\n          ].map((item) => (\n            <li key={item} className=\"flex items-center gap-3\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className=\"w-[18px] h-[18px] inline shrink-0 opacity-80\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n\n              {item}\n            </li>\n          ))}\n          <li className=\"flex items-center gap-3 text-accent font-medium\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-[18px] h-[18px] inline shrink-0\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Time saved: 3 hours\n          </li>\n        </ul>\n      </>\n    ),\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-8 h-8\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: \"Database\",\n    description: (\n      <>\n        <ul className=\"space-y-2\">\n          {[\"Mongoose schema\", \"Mongoose plugins to make your life easier\"].map(\n            (item) => (\n              <li key={item} className=\"flex items-center gap-3\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  className=\"w-[18px] h-[18px] inline shrink-0 opacity-80\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n\n                {item}\n              </li>\n            )\n          )}\n          <li className=\"flex items-center gap-3 text-accent font-medium\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-[18px] h-[18px] inline shrink-0\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Time saved: 2 hours\n          </li>\n        </ul>\n      </>\n    ),\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-8 h-8\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: \"SEO\",\n    description: (\n      <>\n        <ul className=\"space-y-2\">\n          {[\n            \"All meta tags to rank on Google\",\n            \"OpenGraph tags to share on social media\",\n            \"Automated sitemap generation to fasten Google indexing\",\n            \"Structured data markup for Rich Snippets\",\n            \"SEO-optimized UI components\",\n          ].map((item) => (\n            <li key={item} className=\"flex items-center gap-3\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className=\"w-[18px] h-[18px] inline shrink-0 opacity-80\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n\n              {item}\n            </li>\n          ))}\n          <li className=\"flex items-center gap-3 text-accent font-medium\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-[18px] h-[18px] inline shrink-0\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Time saved: 6 hours\n          </li>\n        </ul>\n      </>\n    ),\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-8 h-8\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9zm3.75 11.625a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: \"Style\",\n    description: (\n      <>\n        <ul className=\"space-y-2\">\n          {[\n            \"Components, animations & sections (like the pricing page below)\",\n            \"20+ themes with daisyUI\",\n            \"Automatic dark mode\",\n          ].map((item) => (\n            <li key={item} className=\"flex items-center gap-3\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className=\"w-[18px] h-[18px] inline shrink-0 opacity-80\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n\n              {item}\n            </li>\n          ))}\n          <li className=\"flex items-center gap-3 text-accent font-medium\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-[18px] h-[18px] inline shrink-0\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Time saved: 5 hours\n          </li>\n        </ul>\n      </>\n    ),\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-8 h-8\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zm0 0a15.998 15.998 0 003.388-1.62m-5.043-.025a15.994 15.994 0 011.622-3.395m3.42 3.42a15.995 15.995 0 004.764-4.648l3.876-5.814a1.151 1.151 0 00-1.597-1.597L14.146 6.32a15.996 15.996 0 00-4.649 4.763m3.42 3.42a6.776 6.776 0 00-3.42-3.42\"\n        />\n      </svg>\n    ),\n  },\n];\n\n// A list of features with a listicle style.\n// - Click on a feature to display its description.\n// - Good to use when multiples features are available.\n// - Autoscroll the list of features (optional).\nconst FeaturesListicle = () => {\n  const featuresEndRef = useRef<null>(null);\n  const [featureSelected, setFeatureSelected] = useState<string>(\n    features[0].name\n  );\n  const [hasClicked, setHasClicked] = useState<boolean>(false);\n\n  // (Optional) Autoscroll the list of features so user know it's interactive.\n  // Stop scrolling when user scroll after the featuresEndRef element (end of section)\n  // emove useEffect is not needed.\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!hasClicked) {\n        const index = features.findIndex(\n          (feature) => feature.name === featureSelected\n        );\n        const nextIndex = (index + 1) % features.length;\n        setFeatureSelected(features[nextIndex].name);\n      }\n    }, 5000);\n\n    try {\n      // stop the interval when the user scroll after the featuresRef element\n      const observer = new IntersectionObserver(\n        ([entry]) => {\n          if (entry.isIntersecting) {\n            console.log(\"STOP AUTO CHANGE\");\n            clearInterval(interval);\n          }\n        },\n        {\n          root: null,\n          rootMargin: \"0px\",\n          threshold: 0.5,\n        }\n      );\n      if (featuresEndRef.current) {\n        observer.observe(featuresEndRef.current);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    return () => clearInterval(interval);\n  }, [featureSelected, hasClicked]);\n\n  return (\n    <section className=\"py-24\" id=\"features\">\n      <div className=\"max-w-3xl mx-auto\">\n        <div className=\"bg-base-100 max-md:px-8 max-w-3xl\">\n          <p className=\"text-accent font-medium text-sm font-mono mb-3\">\n            {/* Pure decoration, you can remove it */}\n            const launch_time = &quot;Today&quot;;\n          </p>\n          <h2 className=\"font-extrabold text-3xl lg:text-5xl tracking-tight mb-8\">\n            {/* \ud83d\udca1 COPY TIP: Remind visitors about the value of your product. Why do they need it? */}\n            Supercharge your app instantly, launch faster, make $\n          </h2>\n          <div className=\"text-base-content/80 leading-relaxed mb-8 lg:text-lg\">\n            {/* \ud83d\udca1 COPY TIP: Explain how your product delivers what you promise in the headline. */}\n            Login users, process payments and send emails at lightspeed. Spend\n            your time building your startup, not integrating APIs. ShipFast\n            provides you with the boilerplate code you need to launch, FAST.\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div className=\"grid grid-cols-4 md:flex justify-start gap-4 md:gap-12 max-md:px-8 max-w-3xl mx-auto mb-8\">\n          {features.map((feature) => (\n            <span\n              key={feature.name}\n              onClick={() => {\n                if (!hasClicked) setHasClicked(true);\n                setFeatureSelected(feature.name);\n              }}\n              className={`flex flex-col items-center justify-center gap-3 select-none cursor-pointer p-2 duration-200 group`}\n            >\n              <span\n                className={`duration-100 ${\n                  featureSelected === feature.name\n                    ? \"text-primary\"\n                    : \"text-base-content/30 group-hover:text-base-content/50\"\n                }`}\n              >\n                {feature.svg}\n              </span>\n              <span\n                className={`font-semibold text-sm ${\n                  featureSelected === feature.name\n                    ? \"text-primary\"\n                    : \"text-base-content/50\"\n                }`}\n              >\n                {feature.name}\n              </span>\n            </span>\n          ))}\n        </div>\n        <div className=\"bg-base-200\">\n          <div className=\"max-w-3xl mx-auto flex flex-col md:flex-row justify-center md:justify-start md:items-center gap-12\">\n            <div\n              className=\"text-base-content/80 leading-relaxed space-y-4 px-12 md:px-0 py-12 max-w-xl animate-opacity\"\n              key={featureSelected}\n            >\n              <h3 className=\"font-semibold text-base-content text-lg\">\n                {features.find((f) => f.name === featureSelected)[\"name\"]}\n              </h3>\n\n              {features.find((f) => f.name === featureSelected)[\"description\"]}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Just used to know it's the end of the autoscroll feature (optional, see useEffect) */}\n      <p className=\"opacity-0\" ref={featuresEndRef}></p>\n    </section>\n  );\n};\n\nexport default FeaturesListicle;\n"
    },
    {
      "filepath": "components/TestimonialRating.tsx",
      "content": "const TestimonialRating = () => {\n  return (\n    <div className=\"flex -gap-1 items-center mt-auto\">\n      <svg\n        viewBox=\"0 0 773 1262\"\n        className=\"w-8 fill-base-content/40 rotate-12\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M390 5.7334C310.667 41.7334 272.533 76.6667 257.867 126.8C255.6 134.8 254.933 141.333 254.4 161.6C253.733 185.2 253.867 186.8 256.533 191.067C258 193.467 260.8 196.267 262.667 197.067C275.2 202.8 307.333 193.6 329.333 178C339.467 170.8 355.733 153.867 363.067 142.667C370 132.133 380.4 110.933 385.333 97.3334C391.867 78.8001 398.267 52.0001 398.667 40.8001C398.933 34.8001 400.4 23.7334 401.867 16.0001C405.067 0.133402 405.067 6.88146e-05 403.733 6.88146e-05C403.067 6.88146e-05 396.933 2.66674 390 5.7334Z\" />\n        <path d=\"M183.6 52.2666C162.267 92.1333 150.133 124.533 145.2 154.667C142.267 172.267 143.467 213.333 147.333 228.933C152.267 249.733 163.333 270.667 174.667 281.2C179.6 285.733 181.467 286.667 186.133 286.667C197.333 286.667 210.4 273.867 220.8 252.667C228 238 234.533 215.067 233.467 208.667C232.8 205.6 232.933 205.067 234.133 206.667C235.2 208.267 235.467 208 234.8 205.333C234.533 203.467 234.667 196.267 235.2 189.333C237.2 166.4 233.733 141.867 224.533 114.667C219.067 98.1333 207.067 70.9333 197.733 53.5999L190.4 39.7333L183.6 52.2666Z\" />\n        <path d=\"M353.333 177.867C324.8 187.467 313.333 192.133 296.933 200.667C251.067 224.933 223.067 255.733 212.667 293.333C209.467 305.333 206.4 333.067 208 336.8C209.333 340 209.6 340.8 209.867 343.333C210.133 347.6 217.2 353.333 223.333 354.4C230.133 355.6 251.867 354 256.4 352C258 351.333 259.333 350.933 259.333 351.2C259.333 351.467 252.533 356.8 244.4 363.067C197.733 398.4 172.667 430.8 162.533 468.667C160.667 475.867 160 482.8 160 498.667C160 510 160.533 521.067 161.067 523.333C161.733 526.267 161.733 526.8 160.667 525.333C159.733 523.867 159.6 525.6 160.133 531.333C163.067 558.667 177.6 561.6 212.667 541.733C225.733 534.4 237.067 525.2 245.067 515.333C252.267 506.4 264 484.267 269.067 470C273.733 456.933 279.733 429.6 278.667 425.6C278.133 423.333 278.4 422.667 279.467 423.467C280.667 424.133 280.8 423.467 280.267 421.067C279.733 419.333 280.267 411.2 281.333 403.2C282.4 395.2 283.6 379.067 284 367.333C284.933 343.6 285.6 337.2 287.2 337.733C289.467 338.267 306 324.933 315.733 314.667C332 297.467 344.133 277.333 356.667 246.667C366.133 223.467 371.467 203.467 367.467 206C366.133 206.667 370.933 187.867 374.667 177.333C376.933 170.8 376.933 170.667 375.733 170.667C375.067 170.667 365.067 173.867 353.333 177.867Z\" />\n        <path d=\"M93.6 223.333C85.4667 250.533 83.0667 259.2 80.1333 272.667C74.1333 300.667 72.2667 319.6 73.3333 342C73.8667 352.933 74.2667 363.467 74.2667 365.333C74.4 379.867 80.4 403.467 87.6 418C95.3333 433.333 109.333 450.667 120.533 458.8C128.667 464.667 135.067 465.6 142.133 462C146.933 459.467 153.6 449.2 158.4 437.2C166.267 417.467 168 405.067 167.867 370.667C167.867 353.867 167.333 348 164.933 339.067C156.933 309.333 140.667 279.6 112.267 243.333C93.3333 219.2 94.5333 220.4 93.6 223.333Z\" />\n        <path d=\"M24.1333 436.933C24.8 447.067 25.3333 459.333 25.3333 464.267C25.3333 469.067 25.6 472.667 26 472C26.4 471.467 26.8 474.933 26.9333 479.733C27.2 491.733 33.0667 521.2 38.8 538.533C52.9333 582 77.4667 611.867 112.933 628.667C137.6 640.4 149.067 634.133 151.067 607.6C151.6 601.6 152 586.4 151.867 574C151.867 552 151.733 550.933 147.467 538.667C135.333 503.2 110 473.867 65.7333 444.267C54.2667 436.533 24.9333 418.667 23.8667 418.667C23.3333 418.667 23.6 426.933 24.1333 436.933Z\" />\n        <path d=\"M261.867 506.267C208.8 562.133 185.067 610.8 188 658C188.4 666 189.067 677.467 189.333 683.333C190.267 701.6 197.067 721.333 204.267 726C213.467 732.133 224 728.933 241.067 715.067C257.2 701.733 268.8 686.667 276.267 668.933C281.733 655.867 286.133 639.2 286.667 628.667C286.933 624.267 287.867 613.467 288.667 604.667C290.267 588.533 289.733 566 287.2 546.667C285.2 530.8 277.6 492 276.533 492C276 492 269.467 498.4 261.867 506.267Z\" />\n        <path d=\"M0.666656 607.6C0.666656 607.867 3.06666 612.933 6.13332 618.8C12.4 631.467 14.4 636.4 12.8 635.467C10.8 634.133 10.4 640.667 12 647.067C16.1333 663.2 47.3333 709.467 66.9333 728.133C83.4667 744 104.4 757.733 118 761.6C122.8 762.933 124.533 763.733 122 763.333C119.467 762.933 111.6 761.733 104.667 760.667C89.0667 758.4 57.6 756 41.0667 756H28.6667L35.7333 766.933C45.3333 781.867 45.3333 781.867 43.6 780.8C41.2 779.333 40.1333 786.267 41.8667 792C45.2 803.2 76.6667 842.133 95.7333 858.933C108.4 870 125.333 881.333 136.267 886.267C149.333 892 162.133 896 168.533 896.133L174.667 896.267L168.667 897.333C165.333 898 152.133 900.133 139.333 902.133C126.533 904.133 115.733 906 115.333 906.267C115.067 906.533 115.333 907.2 116 907.733C119.6 910.267 134.4 926.933 132.4 926.267C130 925.467 128.667 927.6 128.667 932.533C128.667 937.6 135.733 946.933 147.467 957.467C194 999.2 231.6 1017.47 272.667 1017.87C281.067 1017.87 290.133 1017.6 292.667 1016.93C295.2 1016.4 288 1019.2 276.667 1023.07C245.2 1034 235.333 1037.73 235.333 1038.67C235.333 1039.07 239.2 1042.4 244 1045.87C251.333 1051.2 257.6 1057.07 252.933 1054.13C251.2 1053.07 248.667 1057.33 248.667 1061.33C248.667 1074.53 313.467 1109.47 354 1118.13C370.667 1121.73 397.6 1121.47 413.2 1117.6C428.267 1113.87 448 1104.53 454.4 1098.27C459.6 1092.93 461.867 1086 459.467 1081.73C458.4 1079.47 458.933 1078.53 463.333 1075.2C466.267 1073.07 468.667 1070.93 468.667 1070.4C468.667 1069.87 465.2 1065.07 460.933 1059.73C439.333 1032.67 411.867 1016 379.867 1010.53C368 1008.53 330.8 1009.73 316.667 1012.53C299.2 1016 297.067 1016 308.8 1012.93C315.6 1011.2 322.4 1008.4 325.067 1006.27C330.133 1002.4 333.2 995.067 331.867 989.867C331.2 987.467 332 986.4 335.2 984.667C337.467 983.6 339.333 982.133 339.333 981.6C339.333 981.067 337.2 976.533 334.667 971.6C312.933 929.333 278.133 904.8 230.533 898.533C215.467 896.533 213.6 896 218.4 894.533C225.2 892.667 229.6 886.8 230.267 878.8C230.4 876.133 231.467 874.4 232.933 873.867C236 872.933 236 873.067 231.333 858.667C216.933 814.8 190.667 787.467 146 770.4C140.533 768.4 138.133 767.067 140.667 767.6C143.2 768.267 151.6 768.667 159.333 768.667C170.133 768.667 174.4 768.133 178.267 766.267C183.467 763.6 188 756.133 186.933 752C186.533 750.4 187.2 749.333 188.8 748.933C191.867 748.133 191.867 746.133 189.333 732.4C181.2 689.733 156.133 656.667 116.8 636.667C95.8667 626.133 64.2667 617.067 28 611.333C16.2667 609.6 5.33332 607.867 3.73332 607.467C1.99999 607.2 0.666656 607.2 0.666656 607.6Z\" />\n        <path d=\"M294.933 673.067C254.267 727.467 235.867 774 238.667 815.333C239.067 822.667 239.733 834 240 840.667C240.667 855.733 244 867.867 251.067 879.733C256.933 889.6 262.8 895.467 268.133 896.8C281.733 900.267 313.333 867.733 324.4 839.067C328.933 827.467 333.333 807.733 332.133 804.667C331.733 803.467 332 799.467 332.8 795.6C333.467 791.867 334.133 780 334.133 769.333C334.267 748.667 332.133 731.467 326.533 708.667C322.133 690.4 310.933 654.667 309.733 654.667C309.067 654.667 302.4 662.933 294.933 673.067Z\" />\n        <path d=\"M370 776.133C344.8 827.467 336.133 860.4 336.933 901.6C337.2 913.067 337.733 921.733 338.267 920.933C338.933 920 338.933 921.2 338.533 923.467C336 936.533 348.8 970.667 362.667 988.4C372.8 1001.2 381.467 1004.4 390.667 998.667C400 992.933 416.667 966.667 422.533 948.667C425.2 940.267 428.667 922.4 427.867 921.067C427.467 920.533 427.867 913.867 428.667 906.267C432.133 872 421.867 832.533 396.667 783.333C391.067 772.267 385.067 761.333 383.6 758.8L380.8 754.133L370 776.133Z\" />\n        <path d=\"M460 850.933C459.733 851.867 458.133 861.333 456.4 872C453.867 888.4 453.467 897.067 453.333 929.333C453.067 970.533 454.267 982.8 460 1003.33C468.8 1034.27 487.2 1060.67 511.733 1076.93C527.733 1087.6 536.933 1086.27 544.4 1072.4C549.2 1063.2 554.267 1045.07 554.8 1034.67C554.933 1030.67 555.467 1020.13 556 1011.33C557.2 993.333 555.867 982.933 550.533 966.133C541.733 938.4 524.133 912 493.333 880.133C473.733 859.867 460.8 848.533 460 850.933Z\" />\n        <path d=\"M574.133 973.6C581.067 990.8 583.333 997.467 582 996.667C581.2 996.133 580.667 998.267 580.667 1002.27C580.667 1012.67 596 1044 614.267 1070.8C642.933 1113.07 684.8 1138.67 725.2 1138.67C741.733 1138.67 747.333 1135.07 749.2 1123.73C749.333 1122.27 750.267 1120.67 751.2 1120.13C752.533 1119.2 752.667 1116.53 751.467 1107.07C742.667 1034.4 698 995.6 596.267 972.133C583.333 969.067 572.4 966.667 572 966.667C571.6 966.667 572.667 969.867 574.133 973.6Z\" />\n        <path d=\"M511.6 1090.8C485.867 1094.13 453.6 1107.33 422.667 1127.33C408.267 1136.53 380.8 1156.4 380.667 1157.47C380.667 1158 384.4 1159.6 389.067 1161.33C397.867 1164.53 401.333 1166.67 397.733 1166.67C396.4 1166.67 395.2 1168.27 394.667 1170.67C392.8 1179.33 400.667 1184.67 424.8 1191.2C501.067 1211.87 555.733 1203.6 594.133 1165.33C604.133 1155.47 607.6 1147.87 604.933 1142.13C603.733 1139.33 604.133 1138 608.8 1131.87C611.6 1128 614 1124.53 614 1124.13C614 1123.73 610.667 1120.93 606.667 1118C576.133 1095.73 544.133 1086.53 511.6 1090.8Z\" />\n        <path d=\"M674.667 1147.47C637.867 1153.6 596.4 1177.73 550 1219.6L542.8 1226.27L552.667 1229.33C558.133 1231.07 561.6 1232.67 560.4 1232.93C557.333 1233.73 555.867 1239.33 557.733 1243.33C559.867 1248 567.733 1251.47 582.8 1254.53C658.533 1269.87 711.867 1259.47 749.467 1222.13C758.667 1212.93 764.133 1204.8 764.667 1199.33C765.333 1193.73 764.667 1190.53 763.067 1191.47C761.467 1192.53 761.467 1192.4 768.267 1181.73C770.667 1177.87 772.667 1174.27 772.667 1173.47C772.667 1171.47 766.133 1167.33 753.067 1160.8C725.467 1146.93 701.6 1142.8 674.667 1147.47Z\" />\n      </svg>\n      <div>\n        <p className=\"text-base-content/80 text-sm text-center\">\n          1000+ happy users\n        </p>\n        <div className=\"flex flex-row justify-center gap-0 pt-1\">\n          {[...Array(5)].map((e, i) => (\n            <span key={i}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                className=\"w-4 h-4 text-yellow-500\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </span>\n          ))}\n        </div>\n      </div>\n      <svg\n        className=\"w-8 fill-base-content/40 -rotate-12\"\n        viewBox=\"0 0 773 1262\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M369.133 2.26663C371.667 12.1333 375.667 39.7333 374.6 39.0666C371.267 37.0666 378.067 67.8666 386.467 93.2C396.067 121.733 408.867 144.267 425.667 161.867C446.067 183.333 471.4 196.533 495.267 198.267C514.467 199.733 518.467 195.333 519.8 171.867C523.933 100.4 482.2 49.4666 384.2 5.99997C376.733 2.66663 370.2 -3.47677e-05 369.667 -3.47677e-05C369 -3.47677e-05 368.867 1.06663 369.133 2.26663Z\" />\n        <path d=\"M575.933 53.4666C558.067 86.9333 545.133 121.6 540.2 148.8C536.2 171.2 537.133 206.267 542.2 226C548.467 250.4 563.667 275.733 576.867 283.867C579.533 285.467 583.533 286.667 586.867 286.667C596.067 286.667 605.267 276.667 616.333 254.8C622.467 242.667 628.867 220 627.8 214.267C627.267 211.733 627.533 210.8 628.6 211.467C629.533 212.133 629.667 211.867 629.133 210.8C628.467 209.867 628.867 203.2 629.667 196C634.333 159.333 621.267 110.533 591.8 55.4666L583.4 39.7333L575.933 53.4666Z\" />\n        <path d=\"M397.667 171.333C397.667 172.133 402.2 188.133 406.6 203.2C407.133 204.933 406.867 205.333 405.667 204.667C404.333 203.867 404.067 205.2 404.6 210.8C406.2 226.133 426.067 272.133 440.2 293.467C443.933 299.067 451.267 308.267 456.6 314C466.733 324.933 487 341.2 487 338.533C487 337.6 487.267 337.2 487.667 337.6C488.467 338.267 491.533 396.133 491.4 406.667C491.267 411.733 491.667 413.2 492.333 411.333C493.133 409.6 493.267 410.933 492.733 414.667C491.933 422 497.533 450.4 503.133 467.2C508.333 482.8 520.067 505.467 527.933 515.333C535.933 525.2 547.267 534.4 560.333 541.733C581.667 553.733 594.467 557.067 602.867 552.667C608.6 549.733 612.867 540.4 611.933 532.933C611.533 529.867 611.667 528.267 612.2 529.2C612.867 530.133 613.267 528.133 613.4 524.4C613.4 520.933 613.533 509.867 613.667 500C614.067 476.8 610.067 459.2 600.067 439.6C588.6 416.933 561.267 387.2 530.733 364.133C513.933 351.467 507.667 346.267 515.4 351.2C519 353.6 541.667 355.733 549.667 354.4C555.8 353.333 562.867 347.6 563.133 343.333C563.533 339.6 563.667 338.933 564.733 337.867C566.333 336.267 565.8 318.4 563.667 306.533C558.6 277.067 546.733 255.467 523.533 233.333C499.4 210.267 457.533 188.4 411.133 174.667C405.8 173.067 400.467 171.467 399.533 171.067C398.467 170.667 397.667 170.8 397.667 171.333Z\" />\n        <path d=\"M671 230.933C651.8 255.733 647.4 261.6 639.267 274C614.333 312.133 603.533 345.067 604.6 380.8C604.733 389.733 605.533 396.8 606.067 396.4C606.6 396 606.733 397.333 606.2 399.2C604.2 407.333 612.867 437.067 621.267 451.067C626.867 460.267 632.2 464 639.933 464C647.4 464 658.733 455.333 670.333 441.067C680.333 428.4 686.733 416.8 691.667 402.267C698.333 382.4 699.667 368.933 699.533 329.333C699.4 305.867 698.867 299.467 695.933 284.133C692.467 266.267 680.333 221.333 679 221.467C678.6 221.467 675 225.733 671 230.933Z\" />\n        <path d=\"M734.467 427.333C664.334 469.6 630.334 508 622.2 554.667C620.067 567.333 620.2 597.2 622.467 603.333C623.134 604.933 623 605.467 622.067 604.933C619.934 603.6 623.8 621.867 626.6 626.667C632.334 636.533 643.4 636.8 662.334 627.467C692.467 612.533 714.467 588.133 728.6 553.6C737.267 532.4 746.334 494.267 744.867 485.467C744.467 482.8 744.6 481.333 745.267 482.267C745.934 483.067 746.334 481.2 746.334 477.6C746.467 474.133 747.134 462.933 748.067 452.667C749 442.4 749.934 430.533 750.334 426.267C750.734 422.133 750.467 418.667 749.934 418.667C749.4 418.667 742.467 422.533 734.467 427.333Z\" />\n        <path d=\"M495.267 498C486.733 535.2 484.067 559.733 484.6 594.267C484.867 609.733 485.267 622.267 485.667 622C486.067 621.733 486.467 624.933 486.467 629.067C486.733 638.4 492.067 658.933 497.533 670.933C507.667 693.467 528.6 716.133 548.333 726.133C560.333 732.133 569.667 728.933 575.533 716.933C582.733 702.133 585 685.6 584.867 648.667C584.867 631.2 584.333 627.067 581.267 615.733C571.933 581.733 549.267 545.733 513.8 509.067L496.733 491.467L495.267 498Z\" />\n        <path d=\"M765.667 608.133C734.734 612.933 721.134 615.467 706.334 619.333C641.8 635.6 604.867 665.467 589 714.267C585.534 724.8 581.4 746.533 582.6 748.267C582.867 748.933 584.467 749.333 586.067 749.467C587.667 749.467 588.2 749.867 587.4 750.267C585.134 751.067 585.267 755.333 587.667 759.867C591 766.4 597.667 768.667 614.334 768.667C622.467 768.667 630.867 768.133 633 767.6C635.267 766.933 631.267 768.8 624.2 771.733C606.067 779.067 590.867 788.533 578.734 799.867C561.667 815.867 549.8 834.933 542.467 858.4C538.2 871.867 538.2 873.067 542.067 874.667C543.667 875.333 544.334 875.867 543.534 875.867C542.467 876 542.334 877.467 542.867 880.4C544.867 889.2 548.334 893.067 555.4 894.667C559.534 895.6 559.534 895.6 556.334 896.267C554.467 896.667 546.734 898 539 899.2C496.067 906 465.267 926.667 443.8 963.067C440.467 968.667 436.867 975.333 435.8 977.867C433.934 982.267 433.934 982.267 438.867 985.067C441.534 986.667 443 988 442.334 988C440.334 988 440.067 993.2 441.8 998.4C443.667 1004 451.934 1010.13 459.134 1011.33C462.067 1011.87 464.334 1012.53 463.934 1012.8C463.667 1013.07 456.6 1012.4 448.2 1011.2C427.667 1008.27 395.534 1009.2 382.334 1012.93C353.534 1021.2 330.2 1037.47 309.667 1063.6L304.2 1070.53L309.534 1074.8C314.067 1078.4 314.734 1079.47 313.534 1081.6C311.267 1086 313.4 1092.93 318.6 1098.27C325 1104.53 344.734 1113.87 359.8 1117.6C375.4 1121.47 402.334 1121.73 419 1118.13C459 1109.6 524.334 1074.4 524.334 1061.47C524.334 1057.6 521.934 1053.07 520.2 1054C519.534 1054.53 519 1054.53 519 1054.27C519 1053.87 523.534 1050.4 529 1046.4C534.467 1042.53 539 1038.93 539 1038.53C539 1038.13 536.2 1036.8 532.734 1035.6C486.2 1019.6 476.467 1016.13 481 1016.93C488.867 1018.53 513.134 1018 522.334 1016.13C550.067 1010.4 580.6 995.067 607.134 973.2C639.267 946.667 649 934.133 642.467 927.6C640.734 926 641.667 924.4 649.267 916.133C654.067 910.8 657.8 906.4 657.534 906.133C657 905.867 643.267 903.467 609.667 898.133C600.334 896.533 599.4 896.267 604.467 896.133C610.867 896 623.667 892 636.6 886.267C655.134 878 679 859.333 696.734 839.333C710.6 823.733 726.734 802.133 729.934 794.933C732.734 788.667 732.734 781.733 729.934 782.4C727.8 782.8 728.6 781.2 737.667 766.933L744.334 756.667L734.734 756.267C722.6 755.733 686.467 758.133 669.667 760.667C645.8 764.133 645.8 764.133 654.2 761.867C666.6 758.4 686.734 745.867 702.867 731.2C728.6 708 765.134 650.533 761.934 638.4C761.667 637.067 760.867 636.4 760.2 636.8C758.6 637.733 760.6 632.8 767 620C770.067 614 772.334 608.667 772.067 608.133C771.8 607.6 769 607.6 765.667 608.133ZM641.267 766.133C640.867 766.533 639.667 766.667 638.734 766.267C637.667 765.867 638.067 765.467 639.534 765.467C641 765.333 641.8 765.733 641.267 766.133ZM469.267 1014.13C468.867 1014.53 467.667 1014.67 466.734 1014.27C465.667 1013.87 466.067 1013.47 467.534 1013.47C469 1013.33 469.8 1013.73 469.267 1014.13ZM474.6 1015.47C474.2 1015.87 473 1016 472.067 1015.6C471 1015.2 471.4 1014.8 472.867 1014.8C474.334 1014.67 475.134 1015.07 474.6 1015.47Z\" />\n        <path d=\"M457.933 670.4C451.8 689.067 445.667 712.933 442.2 731.333C439.8 743.867 438.467 800.533 440.6 799.2C441.133 798.8 441.267 800.267 440.867 802.533C439.8 807.867 443.667 826.4 448.6 839.067C458.6 865.067 488.2 897.333 501.933 897.333C509.533 897.333 518.467 888 525.533 872.667C532.6 857.733 534.467 842.8 534.2 804.667C534.067 788.667 533.533 782.533 531.133 773.6C522.333 740 503.667 704.933 474.733 667.6C469.533 660.8 464.867 654.933 464.467 654.4C463.933 653.867 461 661.067 457.933 670.4Z\" />\n        <path d=\"M387.133 764.133C370.6 793.333 356.467 826.267 350.333 849.733C345.133 869.867 344.067 880.933 344.867 906.533C345.8 938.133 350.067 954.133 363 975.467C381.133 1005.47 394.067 1008.93 410.333 988.4C422.867 972.267 433.133 946.667 434.467 928C434.733 923.2 435.533 913.2 436.2 905.733C439.667 867.333 428.733 825.733 400.733 770.133L392.733 754.133L387.133 764.133Z\" />\n        <path d=\"M291.533 868.933C253 906.8 233.533 934.533 223 966.533C218.733 979.867 215.667 1001.33 217 1010.53C217.4 1013.87 218.067 1022.67 218.333 1030C219.267 1052.4 227.133 1076.27 235.533 1081.6C245.8 1088 261.667 1080.13 281.8 1058.93C294.333 1045.87 302.6 1032.4 309.133 1014.8C314.067 1001.6 318.067 983.6 317 979.867C316.467 978.4 316.733 977.333 317.667 977.333C318.733 977.333 319 976.267 318.6 974.533C318.2 973.067 318.733 964.267 319.933 954.933C321.267 943.067 321.667 932 321.133 918C320.2 892.533 314.733 849.333 312.467 849.333C312.067 849.333 302.6 858.133 291.533 868.933Z\" />\n        <path d=\"M180.2 971.333C99 989.733 54.8667 1017.2 34.0667 1062.4C26.2 1079.33 19.4 1112.67 22.3333 1119.6C23 1120.93 23.6667 1123.47 23.9333 1125.2C25.6667 1135.2 31.8 1138.67 47.8 1138.67C89.9333 1138.67 131.133 1112.53 161.667 1066.27C176.333 1044.27 191.267 1013.6 192.067 1004.27C192.467 998.933 192.333 997.2 191.133 997.867C189.667 998.8 190.733 995.867 198.2 977.467C201.933 968.4 202.333 966.667 200.733 966.8C200.067 966.8 190.867 968.933 180.2 971.333Z\" />\n        <path d=\"M227.4 1091.2C206.733 1095.2 185.133 1104.67 167.933 1117.33L159 1124L164.333 1131.2C169.267 1137.73 169.667 1138.67 168.2 1141.87C165.4 1148 168.733 1155.33 178.867 1165.33C217.267 1203.6 271.933 1211.87 348.2 1191.2C372.2 1184.67 380.2 1179.33 378.333 1170.8C377.933 1168.67 376.467 1166.67 375.267 1166.4C374.067 1166.13 377.667 1164 383.4 1161.73L393.933 1157.73L377.133 1145.47C336.6 1115.73 303.8 1099.2 273.133 1092.8C258.067 1089.73 238.867 1089.07 227.4 1091.2Z\" />\n        <path d=\"M58.8667 1147.47C53.2667 1148.4 44.3333 1150.8 38.8667 1152.8C28.7333 1156.4 8.73332 1166.27 3.26665 1170.53L0.0666504 1172.93L5.53332 1181.73C8.46665 1186.67 10.3333 1190.67 9.66665 1190.67C7.26665 1190.67 8.19998 1201.33 11.1333 1206.8C12.6 1209.73 18.2 1216.53 23.4 1221.87C60.6 1259.47 114.333 1270 190.2 1254.53C205.267 1251.47 213.133 1248 215.267 1243.33C217.133 1239.33 215.667 1233.73 212.6 1233.07C211.4 1232.67 215 1231.07 220.733 1229.2L231.133 1226L218.733 1215.2C170.467 1173.47 135.8 1153.87 98.4667 1147.33C84.3333 1144.93 72.6 1144.93 58.8667 1147.47Z\" />\n      </svg>\n    </div>\n  );\n};\n\nexport default TestimonialRating;\n"
    },
    {
      "filepath": "components/WithWithout.tsx",
      "content": "// A useful component when your product is challenging the status quo.\n// Highlight the current pain points (left) and how your product is solving them (right)\n// Try to match the lines from left to right, so the user can easily compare the two columns\nconst WithWithout = () => {\n  return (\n    <section className=\"bg-base-100\">\n      <div className=\"max-w-5xl mx-auto px-8 py-16 md:py-32 \">\n        <h2 className=\"text-center font-extrabold text-3xl md:text-5xl tracking-tight mb-12 md:mb-20\">\n          Tired of managing Stripe invoices?\n        </h2>\n\n        <div className=\"flex flex-col md:flex-row justify-center items-center md:items-start gap-8 md:gap-12\">\n          <div className=\"bg-error/20 text-error p-8 md:p-12 rounded-lg w-full \">\n            <h3 className=\"font-bold text-lg mb-4\">\n              Stripe invoices without ZenVoice\n            </h3>\n\n            <ul className=\"list-disc list-inside space-y-1.5 \">\n              {/* Pains the user is experiencing by not using your product */}\n              {[\n                \"Manually create invoices\",\n                \"Or pay up to $2 per invoice\",\n                \"Waste hours in customer support\",\n                \"Can\u2019t update details once sent (VAT, Tax ID)\",\n                \"Can't make invoices for previous purchases\",\n              ].map((item, index) => (\n                <li key={index} className=\"flex gap-2 items-center\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    className=\"w-4 h-4 shrink-0 opacity-75\"\n                  >\n                    <path d=\"M5.28 4.22a.75.75 0 0 0-1.06 1.06L6.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L8 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L9.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L8 6.94 5.28 4.22Z\" />\n                  </svg>\n                  {item}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"bg-success/20 text-success p-8 md:p-12 rounded-lg w-full\">\n            <h3 className=\"font-bold text-lg mb-4\">\n              Stripe invoices + ZenVoice\n            </h3>\n\n            <ul className=\"list-disc list-inside space-y-1.5 \">\n              {/* Features of your product fixing the pain (try to match each with/withot lines) */}\n              {[\n                \"Self-serve invoices\",\n                `One-time payment for unlimited invoices`,\n                \"No more customer support\",\n                \"Editable invoices to stay compliant\",\n                \"Invoices for any payment, even past ones\",\n              ].map((item, index) => (\n                <li key={index} className=\"flex gap-2 items-center\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 16 16\"\n                    fill=\"currentColor\"\n                    className=\"w-4 h-4 shrink-0 opacity-75\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M12.416 3.376a.75.75 0 0 1 .208 1.04l-5 7.5a.75.75 0 0 1-1.154.114l-3-3a.75.75 0 0 1 1.06-1.06l2.353 2.353 4.493-6.74a.75.75 0 0 1 1.04-.207Z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n\n                  {item}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default WithWithout;\n"
    },
    {
      "filepath": "components/FeaturesGrid.tsx",
      "content": "/* eslint-disable @next/next/no-img-element */\nimport React from \"react\";\n\nconst features = [\n  {\n    title: \"Collect user feedback\",\n    description:\n      \"Use your Insighto's board to let users submit features they want.\",\n    styles: \"bg-primary text-primary-content\",\n    demo: (\n      <div className=\"overflow-hidden h-full flex items-stretch\">\n        <div className=\"w-full translate-x-12 bg-base-200 rounded-t-box h-full p-6\">\n          <p className=\"font-medium uppercase tracking-wide text-base-content/60 text-sm mb-3\">\n            Suggest a feature\n          </p>\n          <div className=\"relative textarea py-4 h-full mr-12 bg-base-200 group-hover:bg-base-100 group-hover:border-base-content/10 text-base-content\">\n            <div className=\"absolute left-4 top-4 group-hover:hidden flex items-center \">\n              <span>Notifica</span>\n              <span className=\"w-[2px] h-6 bg-primary animate-pulse\"></span>\n            </div>\n            <div className=\"opacity-0 group-hover:opacity-100 duration-500\">\n              Notifications should be visible only on certain pages.\n            </div>\n            <div className=\"opacity-0 group-hover:opacity-100 duration-1000 flex items-center gap-0.5\">\n              <span>Terms & privacy pages don&apos;t need them</span>\n              <span className=\"w-[2px] h-6 bg-primary animate-pulse\"></span>\n            </div>\n            <button className=\"btn shadow-lg btn-primary absolute right-4 bottom-6 opacity-0 group-hover:opacity-100 duration-1000\">\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"Prioritize features\",\n    description: \"Users upvote features they want. You know what to ship next.\",\n    styles: \"md:col-span-2 bg-base-300 text-base-content\",\n    demo: (\n      <div className=\"px-6 max-w-[600px] flex flex-col gap-4 overflow-hidden\">\n        {[\n          {\n            text: \"Add LemonSqueezy integration to the boilerplate\",\n            secondaryText: \"Yes, ship this! \u2705\",\n            votes: 48,\n            transition: \"group-hover:-mt-36 group-hover:md:-mt-28 duration-500\",\n          },\n          {\n            text: \"A new pricing table for metered billing\",\n            secondaryText: \"Maybe ship this \ud83e\udd14\",\n            votes: 12,\n          },\n          {\n            text: \"A new UI library for the dashboard\",\n            secondaryText: \"But don't ship that \u274c\",\n            votes: 1,\n          },\n        ].map((feature, i) => (\n          <div\n            className={`p-4 bg-base-100 text-base-content rounded-box flex justify-between mb-2 gap-4 ${feature?.transition}`}\n            key={i}\n          >\n            <div>\n              <p className=\"font-semibold mb-1\">{feature.text}</p>\n              <p className=\"text-base-content-secondary\">\n                {feature.secondaryText}\n              </p>\n            </div>\n            <button\n              className={`px-4 py-2 rounded-box group text-center text-lg duration-150 border border-transparent bg-primary text-primary-content`}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className={`w-5 h-5 ease-in-out duration-150 -translate-y-0.5 group-hover:translate-y-0`}\n              >\n                <path d=\"m18 15-6-6-6 6\" />\n              </svg>\n              {feature.votes}\n            </button>\n          </div>\n        ))}\n      </div>\n    ),\n  },\n  {\n    title: \"Your brand, your board\",\n    description: \"Customize your Insighto board with 7 themes.\",\n    styles: \"md:col-span-2 bg-base-100 text-base-content\",\n    demo: (\n      <div className=\"flex left-0 w-full h-full pt-0 lg:pt-8 overflow-hidden -mt-4\">\n        <div className=\"-rotate-[8deg] flex min-w-max overflow-x-visible h-full lg:pt-4\">\n          {[\n            {\n              buttonStyles: \"bg-primary text-primary-content\",\n              css: \"-ml-1 rotate-[6deg] w-72 h-72 z-30 bg-base-200 text-base-content rounded-2xl group-hover:-ml-64 group-hover:opacity-0 group-hover:scale-75 transition-all duration-500 p-4\",\n            },\n            {\n              buttonStyles: \"bg-secondary text-secondary-content\",\n              css: \"rotate-[6deg] bg-base-200 text-base-content w-72 h-72 -mr-20 -ml-20 z-20 rounded-xl p-4\",\n            },\n            {\n              buttonStyles: \"bg-accent text-accent-content\",\n              css: \"rotate-[6deg] bg-base-200 text-base-content z-10 w-72 h-72 rounded-xl p-4\",\n            },\n            {\n              buttonStyles: \"bg-neutral text-neutral-content\",\n              css: \"rotate-[6deg] bg-base-200 text-base-content w-72 h-72 -ml-20 rounded-xl p-4\",\n            },\n            {\n              buttonStyles: \"bg-base-100 text-base-content\",\n              css: \"rotate-[6deg] bg-base-200 text-base-content w-72 h-72 -ml-10 -z-10 rounded-xl p-4 opacity-0 scale-75 group-hover:opacity-100 group-hover:scale-100 transition-all duration-300\",\n            },\n          ].map((theme, i) => (\n            <div className={theme.css} key={i}>\n              <div className=\"font-medium uppercase tracking-wide text-base-content/60 text-sm mb-3\">\n                Trending feedback\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"p-4 bg-base-100 rounded-box flex justify-between\">\n                  <div>\n                    <p className=\"font-semibold mb-1\">Clickable cards</p>\n                    <p className=\"opacity-80\">Make cards more accessible</p>\n                  </div>\n                  <button\n                    className={`px-4 py-2 rounded-box group text-center text-lg duration-150 border border-transparent ${theme.buttonStyles}`}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2.5\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className={`w-5 h-5 ease-in-out duration-150 -translate-y-0.5 group-hover:translate-y-0`}\n                    >\n                      <path d=\"m18 15-6-6-6 6\" />\n                    </svg>\n                    8\n                  </button>\n                </div>\n                <div className=\"p-4 bg-base-100 rounded-box flex justify-between \">\n                  <div>\n                    <p className=\"font-semibold mb-1\">Bigger images</p>\n                    <p className=\"opacity-80\">Make cards more accessible</p>\n                  </div>\n                  <button\n                    className={`px-4 py-2 rounded-box group text-center text-lg duration-150 border border-transparent ${theme.buttonStyles}`}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2.5\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className={`w-5 h-5 ease-in-out duration-150 -translate-y-0.5 group-hover:translate-y-0`}\n                    >\n                      <path d=\"m18 15-6-6-6 6\" />\n                    </svg>\n                    5\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"Discover new ideas\",\n    description: \"Users can chat and discuss features.\",\n    styles: \"bg-neutral text-neutral-content\",\n    demo: (\n      <div className=\"text-neutral-content px-6 space-y-4\">\n        {[\n          {\n            id: 1,\n            text: \"Can we have a feature to add a custom domain to IndiePage?\",\n            userImg:\n              \"https://pbs.twimg.com/profile_images/1514863683574599681/9k7PqDTA_400x400.jpg\",\n            userName: \"Marc Lou\",\n            createdAt: \"2024-09-01T00:00:00Z\",\n          },\n          {\n            id: 2,\n            text: \"I'd definitelly pay for that \ud83e\udd29\",\n            userImg:\n              \"https://pbs.twimg.com/profile_images/1778434561556320256/knBJT1OR_400x400.jpg\",\n            userName: \"Dan K.\",\n            createdAt: \"2024-09-02T00:00:00Z\",\n            transition:\n              \"opacity-0 group-hover:opacity-100 duration-500 translate-x-1/4 group-hover:translate-x-0\",\n          },\n        ]?.map((reply) => (\n          <div\n            key={reply.id}\n            className={`px-6 py-4 bg-neutral-content text-neutral rounded-box ${reply?.transition}`}\n          >\n            <div className=\"mb-2 whitespace-pre-wrap\">{reply.text}</div>\n            <div className=\"text-neutral/80 flex items-center gap-2 text-sm\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"avatar\">\n                  <div className=\"w-7 rounded-full\">\n                    <img src={reply.userImg} alt={reply.userName} />\n                  </div>\n                </div>\n                <div className=\"\"> {reply.userName} </div>\n              </div>\n              \u2022\n              <div>\n                {new Date(reply.createdAt).toLocaleDateString(\"en-US\", {\n                  month: \"short\",\n                  day: \"numeric\",\n                  year: \"numeric\",\n                })}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    ),\n  },\n];\nconst FeaturesGrid = () => {\n  return (\n    <section className=\"flex justify-center items-center w-full bg-base-200/50 text-base-content py-20 lg:py-32\">\n      <div className=\"flex flex-col max-w-[82rem] gap-16 md:gap-20 px-4\">\n        <h2 className=\"max-w-3xl font-black text-4xl md:text-6xl tracking-[-0.01em]\">\n          Ship features <br /> users{\" \"}\n          <span className=\"underline decoration-dashed underline-offset-8 decoration-base-300\">\n            really want\n          </span>\n        </h2>\n        <div className=\"flex flex-col w-full h-fit gap-4 lg:gap-10 text-text-default max-w-[82rem]\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 lg:gap-10\">\n            {features.map((feature) => (\n              <div\n                key={feature.title}\n                className={`${feature.styles} rounded-3xl flex flex-col gap-6 w-full h-[22rem] lg:h-[25rem] pt-6 overflow-hidden group`}\n              >\n                <div className=\"px-6 space-y-2\">\n                  <h3 className=\"font-bold text-xl lg:text-3xl tracking-tight\">\n                    {feature.title}\n                  </h3>\n                  <p className=\"opacity-80\">{feature.description}</p>\n                </div>\n                {feature.demo}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FeaturesGrid;\n"
    },
    {
      "filepath": "components/ButtonPopover.tsx",
      "content": "\"use client\";\n\nimport { Popover, Transition } from \"@headlessui/react\";\n\nconst ButtonPopover = () => {\n  return (\n    <Popover className=\"relative z-10\">\n      {({ open }) => (\n        <>\n          <Popover.Button className=\"btn\">\n            Popover Button\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className={`w-5 h-5 duration-200 ${\n                open ? \"transform rotate-180 \" : \"\"\n              }`}\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </Popover.Button>\n          <Transition\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n          >\n            <Popover.Panel className=\"absolute left-0 z-10 mt-3 w-screen max-w-full sm:max-w-sm lg:max-w-2xl transform\">\n              <div className=\"overflow-hidden rounded-lg shadow-lg ring-1 ring-base-content ring-opacity-5\">\n                <div className=\"relative grid gap-4 bg-base-100 p-4 lg:grid-cols-2\">\n                  <div className=\"text-sm flex items-center gap-3 p-2 cursor-pointer hover:bg-base-200 rounded-lg duration-200\">\n                    <span className=\"flex items-center justify-center w-12 h-12 shrink-0 rounded-lg bg-orange-500/20\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        strokeWidth={1.5}\n                        stroke=\"currentColor\"\n                        className=\"w-6 h-6 stroke-orange-600\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\"\n                        />\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\"\n                        />\n                      </svg>\n                    </span>\n                    <div className=\"\">\n                      <p className=\"font-bold\">Get Started</p>\n                      <p className=\"opacity-70\">\n                        Loreum ipseum de la madre de papa\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-sm flex items-center gap-3 p-2 cursor-pointer hover:bg-base-200 rounded-lg duration-200\">\n                    <span className=\"flex items-center justify-center w-12 h-12 shrink-0 rounded-lg bg-yellow-500/20\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        strokeWidth={1.5}\n                        stroke=\"currentColor\"\n                        className=\"w-6 h-6 stroke-yellow-600\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          d=\"M21 11.25v8.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5v-8.25M12 4.875A2.625 2.625 0 109.375 7.5H12m0-2.625V7.5m0-2.625A2.625 2.625 0 1114.625 7.5H12m0 0V21m-8.625-9.75h18c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125h-18c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z\"\n                        />\n                      </svg>\n                    </span>\n                    <div className=\"\">\n                      <p className=\"font-bold\">Rewards</p>\n                      <p className=\"opacity-70\">\n                        Loreum ipseum de el papi de la mama\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-sm flex items-center gap-3 p-2 cursor-pointer hover:bg-base-200 rounded-lg duration-200\">\n                    <span className=\"flex items-center justify-center w-12 h-12 shrink-0 rounded-lg bg-green-500/20\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        strokeWidth={1.5}\n                        stroke=\"currentColor\"\n                        className=\"w-6 h-6 stroke-green-600\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          d=\"M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.697 0 0112 13.489a50.702 50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5\"\n                        />\n                      </svg>\n                    </span>\n                    <div className=\"\">\n                      <p className=\"font-bold\">Academics</p>\n                      <p className=\"opacity-70\">\n                        Loreum ipseum de la madre de papa\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Popover.Panel>\n          </Transition>\n        </>\n      )}\n    </Popover>\n  );\n};\n\nexport default ButtonPopover;\n"
    },
    {
      "filepath": "components/FeaturesAccordion.tsx",
      "content": "\"use client\";\n\nimport { useState, useRef } from \"react\";\nimport type { JSX } from \"react\";\nimport Image from \"next/image\";\n\ninterface Feature {\n  title: string;\n  description: string;\n  type?: \"video\" | \"image\";\n  path?: string;\n  format?: string;\n  alt?: string;\n  svg?: JSX.Element;\n}\n\n// The features array is a list of features that will be displayed in the accordion.\n// - title: The title of the feature\n// - description: The description of the feature (when clicked)\n// - type: The type of media (video or image)\n// - path: The path to the media (for better SEO, try to use a local path)\n// - format: The format of the media (if type is 'video')\n// - alt: The alt text of the image (if type is 'image')\nconst features = [\n  {\n    title: \"Emails\",\n    description:\n      \"Send transactional emails, setup your DNS to avoid spam folder (DKIM, DMARC, SPF in subdomain), and listen to webhook to receive & forward emails\",\n    type: \"video\",\n    path: \"https://d3m8mk7e1mf7xn.cloudfront.net/app/newsletter.webm\",\n    format: \"video/webm\",\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          d=\"M16.5 12a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 10-2.636 6.364M16.5 12V8.25\"\n        />\n      </svg>\n    ),\n  },\n  {\n    title: \"Payments\",\n    description:\n      \"Create checkout sessions, handle webhooks to update user's account (subscriptions, one-time payments...) and tips to setup your account & reduce chargebacks\",\n    type: \"image\",\n    path: \"https://images.unsplash.com/photo-1571171637578-41bc2dd41cd2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3540&q=80\",\n    alt: \"A computer\",\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z\"\n        />\n      </svg>\n    ),\n  },\n  {\n    title: \"Authentication\",\n    description:\n      \"Magic links setup, login with Google walkthrough, save user in MongoDB/Supabase, private/protected pages & API calls\",\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z\"\n        />\n      </svg>\n    ),\n  },\n  {\n    title: \"Style\",\n    description:\n      \"Components, animations & sections (like this features section), 20+ themes with daisyUI, automatic dark mode\",\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zm0 0a15.998 15.998 0 003.388-1.62m-5.043-.025a15.994 15.994 0 011.622-3.395m3.42 3.42a15.995 15.995 0 004.764-4.648l3.876-5.814a1.151 1.151 0 00-1.597-1.597L14.146 6.32a15.996 15.996 0 00-4.649 4.763m3.42 3.42a6.776 6.776 0 00-3.42-3.42\"\n        />\n      </svg>\n    ),\n  },\n] as Feature[];\n\n// An SEO-friendly accordion component including the title and a description (when clicked.)\nconst Item = ({\n  feature,\n  isOpen,\n  setFeatureSelected,\n}: {\n  index: number;\n  feature: Feature;\n  isOpen: boolean;\n  setFeatureSelected: () => void;\n}) => {\n  const accordion = useRef(null);\n  const { title, description, svg } = feature;\n\n  return (\n    <li>\n      <button\n        className=\"relative flex gap-2 items-center w-full py-5 text-base font-medium text-left md:text-lg\"\n        onClick={(e) => {\n          e.preventDefault();\n          setFeatureSelected();\n        }}\n        aria-expanded={isOpen}\n      >\n        <span className={`duration-100 ${isOpen ? \"text-primary\" : \"\"}`}>\n          {svg}\n        </span>\n        <span\n          className={`flex-1 text-base-content ${\n            isOpen ? \"text-primary font-semibold\" : \"\"\n          }`}\n        >\n          <h3 className=\"inline\">{title}</h3>\n        </span>\n      </button>\n\n      <div\n        ref={accordion}\n        className={`transition-all duration-300 ease-in-out text-base-content-secondary overflow-hidden`}\n        style={\n          isOpen\n            ? { maxHeight: accordion?.current?.scrollHeight, opacity: 1 }\n            : { maxHeight: 0, opacity: 0 }\n        }\n      >\n        <div className=\"pb-5 leading-relaxed\">{description}</div>\n      </div>\n    </li>\n  );\n};\n\n// A component to display the media (video or image) of the feature. If the type is not specified, it will display an empty div.\n// Video are set to autoplay for best UX.\nconst Media = ({ feature }: { feature: Feature }) => {\n  const { type, path, format, alt } = feature;\n  const style = \"rounded-2xl aspect-square w-full sm:w-[26rem]\";\n  const size = {\n    width: 500,\n    height: 500,\n  };\n\n  if (type === \"video\") {\n    return (\n      <video\n        className={style}\n        autoPlay\n        muted\n        loop\n        playsInline\n        controls\n        width={size.width}\n        height={size.height}\n      >\n        <source src={path} type={format} />\n      </video>\n    );\n  } else if (type === \"image\") {\n    return (\n      <Image\n        src={path}\n        alt={alt}\n        className={`${style} object-cover object-center`}\n        width={size.width}\n        height={size.height}\n      />\n    );\n  } else {\n    return <div className={`${style} !border-none`}></div>;\n  }\n};\n\n// A component to display 2 to 5 features in an accordion.\n// By default, the first feature is selected. When a feature is clicked, the others are closed.\nconst FeaturesAccordion = () => {\n  const [featureSelected, setFeatureSelected] = useState<number>(0);\n\n  return (\n    <section\n      className=\"py-24 md:py-32 space-y-24 md:space-y-32 max-w-7xl mx-auto bg-base-100 \"\n      id=\"features\"\n    >\n      <div className=\"px-8\">\n        <h2 className=\"font-extrabold text-4xl lg:text-6xl tracking-tight mb-12 md:mb-24\">\n          All you need to ship your startup fast\n          <span className=\"bg-neutral text-neutral-content px-2 md:px-4 ml-1 md:ml-1.5 leading-relaxed whitespace-nowrap\">\n            and get profitable\n          </span>\n        </h2>\n        <div className=\" flex flex-col md:flex-row gap-12 md:gap-24\">\n          <div className=\"grid grid-cols-1 items-stretch gap-8 sm:gap-12 lg:grid-cols-2 lg:gap-20\">\n            <ul className=\"w-full\">\n              {features.map((feature, i) => (\n                <Item\n                  key={feature.title}\n                  index={i}\n                  feature={feature}\n                  isOpen={featureSelected === i}\n                  setFeatureSelected={() => setFeatureSelected(i)}\n                />\n              ))}\n            </ul>\n\n            <Media feature={features[featureSelected]} key={featureSelected} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FeaturesAccordion;\n"
    },
    {
      "filepath": "components/Testimonial1Small.tsx",
      "content": "import Image from \"next/image\";\n\n// A one or two sentences testimonial from a customer.\n// Highlight the outcome for your customer (how did your product changed her/his life?) or the pain it's removing \u2014 Use <span className=\"bg-warning/25 px-1.5\"> to highlight a part of the sentence\nconst Testimonial1Small = () => {\n  return (\n    <section className=\"bg-base-100\">\n      <div className=\"space-y-6 md:space-y-8 max-w-lg mx-auto px-8 py-16 md:py-32 \">\n        <div className=\"rating !flex justify-center\">\n          {[...Array(5)].map((_, i) => (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-5 h-5 text-warning\"\n              key={i}\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          ))}\n        </div>\n        <div className=\"text-base leading-relaxed space-y-2 max-w-md mx-auto text-center\">\n          <p>\n            <span className=\"bg-warning/25 px-1.5\">\n              I don&apos;t want to pay Stripe $2 for every invoice.\n            </span>{\" \"}\n            I don&apos;t want to spend 10 minutes manually crafting every\n            invoice either.\n          </p>\n          <p>\n            Zenvoice solved this problem once and for all. The app is simple,\n            but it nails the job perfectly.\n          </p>\n        </div>\n        <div className=\"flex justify-center items-center gap-3 md:gap-4\">\n          <Image\n            className=\"w-10 h-10 md:w-12 md:h-12 rounded-full object-cover\"\n            src=\"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?q=80&w=4140&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n            alt={`XYZ feedback for ZenVoice`}\n            width={48}\n            height={48}\n          />\n          <div>\n            <p className=\"font-semibold\">Someone Nice</p>\n            <p className=\"text-base-content/80 text-sm\">23.1K followers on \ud835\udd4f</p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Testimonial1Small;\n"
    },
    {
      "filepath": "components/TestimonialsAvatars.tsx",
      "content": "import Image from \"next/image\";\n\nconst avatars: {\n  alt: string;\n  src: string;\n}[] = [\n  {\n    alt: \"User\",\n    // Ideally, load from a statically generated image for better SEO performance (import userImage from \"@/public/userImage.png\")\n    src: \"https://images.unsplash.com/photo-1534528741775-53994a69daeb?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3276&q=80\",\n  },\n  {\n    alt: \"User\",\n    src: \"https://images.unsplash.com/photo-1517841905240-472988babdf9?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=774&q=80\",\n  },\n  {\n    alt: \"User\",\n    src: \"https://images.unsplash.com/photo-1539571696357-5a69c17a67c6?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=774&q=80\",\n  },\n  {\n    alt: \"User\",\n    src: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=774&q=80\",\n  },\n  {\n    alt: \"User\",\n    src: \"https://images.unsplash.com/photo-1488161628813-04466f872be2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3376&q=80\",\n  },\n];\n\nconst TestimonialsAvatars = ({ priority }: { priority?: boolean }) => {\n  return (\n    <div className=\"flex flex-col md:flex-row justify-center items-center md:items-start gap-3\">\n      {/* AVATARS */}\n      <div className={`-space-x-5 avatar-group justy-start`}>\n        {avatars.map((image, i) => (\n          <div className=\"avatar w-12 h-12\" key={i}>\n            <Image\n              src={image.src}\n              alt={image.alt}\n              priority={priority}\n              width={50}\n              height={50}\n            />\n          </div>\n        ))}\n      </div>\n\n      {/* RATING */}\n      <div className=\"flex flex-col justify-center items-center md:items-start gap-1\">\n        <div className=\"rating\">\n          {[...Array(5)].map((_, i) => (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              className=\"w-5 h-5 text-yellow-500\"\n              key={i}\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          ))}\n        </div>\n\n        <div className=\"text-base text-base-content/80\">\n          <span className=\"font-semibold text-base-content\">32</span> makers\n          ship faster\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TestimonialsAvatars;\n"
    },
    {
      "filepath": "components/ButtonSupport.tsx",
      "content": "\"use client\";\n\nimport { Crisp } from \"crisp-sdk-web\";\nimport config from \"@/config\";\n\n// Use this button if chat is hidden on some routes. config.js has onlyShowOnRoutes set to [\"/\"] so it will be hidden on all routes except the home page.\n// If Crisp is not enable, it will open the support email in the default email client.\nconst ButtonSupport = () => {\n  const handleClick = () => {\n    if (config.crisp?.id) {\n      Crisp.chat.show();\n      Crisp.chat.open();\n    } else if (config.mailgun?.supportEmail) {\n      // open default email client in new window with \"need help with ${config.appName}\" as subject\n      window.open(\n        `mailto:${config.mailgun.supportEmail}?subject=Need help with ${config.appName}`,\n        \"_blank\"\n      );\n    }\n  };\n\n  return (\n    <button\n      className=\"btn btn-sm\"\n      onClick={handleClick}\n      data-tooltip-id=\"tooltip\"\n      data-tooltip-content=\"Talk to support\"\n      title=\"Chat with support\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        className=\"w-5 h-5\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M10 2c-2.236 0-4.43.18-6.57.524C1.993 2.755 1 4.014 1 5.426v5.148c0 1.413.993 2.67 2.43 2.902.848.137 1.705.248 2.57.331v3.443a.75.75 0 001.28.53l3.58-3.579a.78.78 0 01.527-.224 41.202 41.202 0 005.183-.5c1.437-.232 2.43-1.49 2.43-2.903V5.426c0-1.413-.993-2.67-2.43-2.902A41.289 41.289 0 0010 2zm0 7a1 1 0 100-2 1 1 0 000 2zM8 8a1 1 0 11-2 0 1 1 0 012 0zm5 1a1 1 0 100-2 1 1 0 000 2z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n      Support\n    </button>\n  );\n};\n\nexport default ButtonSupport;\n"
    },
    {
      "filepath": "components/Footer.tsx",
      "content": "import Link from \"next/link\";\nimport Image from \"next/image\";\nimport config from \"@/config\";\nimport logo from \"@/app/icon.png\";\n\n// Add the Footer to the bottom of your landing page and more.\n// The support link is connected to the config.js file. If there's no config.mailgun.supportEmail, the link won't be displayed.\n\nconst Footer = () => {\n  return (\n    <footer className=\"bg-base-200 border-t border-base-content/10\">\n      <div className=\"max-w-7xl mx-auto px-8 py-24\">\n        <div className=\" flex lg:items-start md:flex-row md:flex-nowrap flex-wrap flex-col\">\n          <div className=\"w-64 flex-shrink-0 md:mx-0 mx-auto text-center md:text-left\">\n            <Link\n              href=\"/#\"\n              aria-current=\"page\"\n              className=\"flex gap-2 justify-center md:justify-start items-center\"\n            >\n              <Image\n                src={logo}\n                alt={`${config.appName} logo`}\n                priority={true}\n                className=\"w-6 h-6\"\n                width={24}\n                height={24}\n              />\n              <strong className=\"font-extrabold tracking-tight text-base md:text-lg\">\n                {config.appName}\n              </strong>\n            </Link>\n\n            <p className=\"mt-3 text-sm text-base-content/80\">\n              {config.appDescription}\n            </p>\n            <p className=\"mt-3 text-sm text-base-content/60\">\n              Copyright \u00a9 {new Date().getFullYear()} - All rights reserved\n            </p>\n          </div>\n          <div className=\"flex-grow flex flex-wrap justify-center -mb-10 md:mt-0 mt-10 text-center\">\n            <div className=\"lg:w-1/3 md:w-1/2 w-full px-4\">\n              <div className=\"footer-title font-semibold text-base-content tracking-widest text-sm md:text-left mb-3\">\n                LINKS\n              </div>\n\n              <div className=\"flex flex-col justify-center items-center md:items-start gap-2 mb-10 text-sm\">\n                {config.mailgun.supportEmail && (\n                  <a\n                    href={`mailto:${config.mailgun.supportEmail}`}\n                    target=\"_blank\"\n                    className=\"link link-hover\"\n                    aria-label=\"Contact Support\"\n                  >\n                    Support\n                  </a>\n                )}\n                <Link href=\"/#pricing\" className=\"link link-hover\">\n                  Pricing\n                </Link>\n                <Link href=\"/blog\" className=\"link link-hover\">\n                  Blog\n                </Link>\n                <a href=\"/#\" target=\"_blank\" className=\"link link-hover\">\n                  Affiliates\n                </a>\n              </div>\n            </div>\n\n            <div className=\"lg:w-1/3 md:w-1/2 w-full px-4\">\n              <div className=\"footer-title font-semibold text-base-content tracking-widest text-sm md:text-left mb-3\">\n                LEGAL\n              </div>\n\n              <div className=\"flex flex-col justify-center items-center md:items-start gap-2 mb-10 text-sm\">\n                <Link href=\"/tos\" className=\"link link-hover\">\n                  Terms of services\n                </Link>\n                <Link href=\"/privacy-policy\" className=\"link link-hover\">\n                  Privacy policy\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n"
    },
    {
      "filepath": "components/BetterIcon.tsx",
      "content": "import React from \"react\";\n\n// A better way to illustrate with icons\n// Pass any SVG icon as children (recommended width/height : w-6 h-6)\n// By default, it's using your primary color for styling\nconst BetterIcon = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-primary/20 text-primary\">\n      {children}\n    </div>\n  );\n};\n\nexport default BetterIcon;\n"
    },
    {
      "filepath": "components/Testimonials11.tsx",
      "content": "\"use client\";\n\nimport { JSX, useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { StaticImageData } from \"next/image\";\nimport config from \"@/config\";\n\n// Use this object to add an icon to the testimonial (optional) like the Product Hunt logo for instance.\n// Only change the values if you add more referrings sites (currently Twitter & Product Hunt)\nconst refTypes: {\n  productHunt: {\n    id: string;\n    ariaLabel: string;\n    svg: JSX.Element;\n  };\n  twitter: {\n    id: string;\n    ariaLabel: string;\n    svg: JSX.Element;\n  };\n  video: {\n    id: string;\n    ariaLabel?: null;\n    svg?: null;\n  };\n  other: { id: string; ariaLabel?: null; svg?: null };\n} = {\n  productHunt: {\n    id: \"product_hunt\",\n    ariaLabel: \"See user review on Product Hunt\",\n    svg: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 26.245 26.256\"\n        className=\"w-[18px] h-[18px]\"\n      >\n        <path\n          d=\"M26.254 13.128c0 7.253-5.875 13.128-13.128 13.128S-.003 20.382-.003 13.128 5.872 0 13.125 0s13.128 5.875 13.128 13.128\"\n          fill=\"#da552f\"\n        />\n        <path\n          d=\"M14.876 13.128h-3.72V9.2h3.72c1.083 0 1.97.886 1.97 1.97s-.886 1.97-1.97 1.97m0-6.564H8.53v13.128h2.626v-3.938h3.72c2.538 0 4.595-2.057 4.595-4.595s-2.057-4.595-4.595-4.595\"\n          fill=\"#fff\"\n        />\n      </svg>\n    ),\n  },\n  twitter: {\n    id: \"twitter\",\n    ariaLabel: \"See user post on Twitter\",\n    svg: (\n      <svg\n        className=\"w-5 h-5 fill-[#00aCee]\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path d=\"M19.633 7.997c.013.175.013.349.013.523 0 5.325-4.053 11.461-11.46 11.461-2.282 0-4.402-.661-6.186-1.809.324.037.636.05.973.05a8.07 8.07 0 0 0 5.001-1.721 4.036 4.036 0 0 1-3.767-2.793c.249.037.499.062.761.062.361 0 .724-.05 1.061-.137a4.027 4.027 0 0 1-3.23-3.953v-.05c.537.299 1.16.486 1.82.511a4.022 4.022 0 0 1-1.796-3.354c0-.748.199-1.434.548-2.032a11.457 11.457 0 0 0 8.306 4.215c-.062-.3-.1-.611-.1-.923a4.026 4.026 0 0 1 4.028-4.028c1.16 0 2.207.486 2.943 1.272a7.957 7.957 0 0 0 2.556-.973 4.02 4.02 0 0 1-1.771 2.22 8.073 8.073 0 0 0 2.319-.624 8.645 8.645 0 0 1-2.019 2.083z\"></path>\n      </svg>\n    ),\n  },\n  video: {\n    id: \"video\",\n  },\n  other: { id: \"other\" },\n};\n\n// The list of your testimonials. It needs 11 items to fill the grid. The last one (11th) is featured on large devices (span 2 columns + big font)\nconst list: {\n  username?: string;\n  name: string;\n  text: string;\n  type?: (typeof refTypes)[keyof typeof refTypes];\n  link?: string;\n  img?: string | StaticImageData;\n  videoPoster?: string;\n  videoSrc?: string;\n  videoWidth?: number;\n  videoHeight?: number;\n  videoType?: \"video/ogg\" | \"video/mp4\" | \"video/webm\";\n}[] = [\n  {\n    // Show @username for social media like Twitter. Does not link anywhere but cool to display\n    username: \"marclou\",\n    name: \"Marc Lou\",\n    text: \"Really easy to use. The tutorials are really useful and explains how everything works. Hope to ship my next project really fast!\",\n    // use refTypes.other if you don't want to display an icon\n    type: refTypes.twitter,\n    // Link to the person's testimonial. It's more trustable\n    link: \"https://twitter.com/marc_louvion\",\n    // A statically imported image (usually from your public folder\u2014recommended) or a link to the person's avatar. Shows a fallback letter if not provided\n    img: \"https://pbs.twimg.com/profile_images/1514863683574599681/9k7PqDTA_400x400.jpg\",\n    // You can display video testimonials to build more trust. Just swap the type above to \"video\" and add at least the video source below\n    // videoSrc: \"/jack.mp4\"\n  },\n  {\n    username: \"the_mcnaveen\",\n    name: \"Naveen\",\n    text: \"Setting up everything from the ground up is a really hard, and time consuming process. What you pay for will save your time for sure.\",\n    type: refTypes.twitter,\n    link: \"https://twitter.com/the_mcnaveen\",\n  },\n  {\n    username: \"wahab\",\n    name: \"Wahab Shaikh\",\n    text: \"Easily saves 15+ hrs for me setting up trivial stuff. Now, I can directly focus on shipping features rather than hours of setting up the same technologies from scratch. Feels like a super power! :D\",\n    type: refTypes.productHunt,\n    link: \"https://www.producthunt.com/products/shipfast-2/reviews?review=667971\",\n  },\n  {\n    name: \"Sean\",\n    text: \"Just purchased and cloned and *holy shit!* I realllyyy like what I'm seeing here!\",\n    type: refTypes.other,\n  },\n  {\n    username: \"krishna\",\n    name: \"Krishna Kant\",\n    text: \"Finally a good boilerplate for Nextjs, now I dont have to cry about it comparing with laravel ecosystem.\",\n    type: refTypes.productHunt,\n    link: \"https://www.producthunt.com/posts/shipfast-2?comment=2707061\",\n  },\n  {\n    username: \"imgyf\",\n    name: \"Yifan Goh\",\n    text: \"It's a game changer  \ud83d\ude80 Comes with easy to follow tutorial, and saves you a ton of time. What's not to love?\",\n    type: refTypes.twitter,\n    link: \"https://twitter.com/imgyf/status/1697549891080532236?s=20\",\n  },\n  {\n    name: \"Yazdun\",\n    text: \"Yo Marc, I got the boilerplate, it's fantastic man you just save me 10 hours on each project\",\n    type: refTypes.other,\n  },\n  {\n    name: \"Marc Lou\",\n    text: \"The tool is exactly what I didn't even know I needed.\",\n    videoPoster: \"https://d1wkquwg5s1b04.cloudfront.net/demo/marcPoster.jpg\",\n    videoSrc: \"https://d1wkquwg5s1b04.cloudfront.net/demo/marcVideo.mp4\",\n    videoHeight: 250,\n    videoWidth: 500,\n    type: refTypes.video,\n  },\n  {\n    username: \"zawwadx\",\n    name: \"Zawwad Ul Sami\",\n    text: \"It's an amazing minimalist, lightweight boilerplate with well-organized code. It has almost all the core features you would want in a SaaS boilerplate. As a new team last year it actually took us months to build a similar set of features at a stable level.\",\n    type: refTypes.twitter,\n  },\n  {\n    username: \"dan\",\n    name: \"Dan Mindru\",\n    text: \"Probably one of the most powerful things you can 'npm install' that I've seen\",\n    type: refTypes.productHunt,\n    link: \"https://www.producthunt.com/posts/shipfast-2?comment=2706763\",\n  },\n  // The last testimonial is featured on big devices (span 2 columns + big font) \ud83d\udc47\n  {\n    username: \"VicPivots\",\n    name: \"Victor Abeledo\",\n    text: \"Marc, I got your boilerplate and having the payments setup with Stripe + user auth is a blessing. This will save me like a week of work for each new side project I spin up. I appreciate that is well documented, as well. 100% worth it \ud83d\ude80\ud83d\ude80\ud83d\ude80\",\n    type: refTypes.twitter,\n    link: \"https://twitter.com/VicPivots/status/1697352442986250413?s=20\",\n  },\n];\n\n// A single testimonial, to be rendered in  a list\nconst Testimonial = ({ i }: { i: number }) => {\n  const testimonial = list[i];\n\n  if (!testimonial) return null;\n\n  if (testimonial.type === refTypes.video) {\n    return <VideoTestimonial i={i} />;\n  }\n\n  return (\n    <li key={i}>\n      <figure className=\"relative h-full p-6 bg-base-100 rounded-lg\">\n        <blockquote className=\"relative\">\n          <p className=\"text-sm text-base-content/80\">{testimonial.text}</p>\n        </blockquote>\n        <figcaption className=\"relative flex items-center justify-start gap-4 pt-4 mt-4 border-t border-base-content/5\">\n          <div className=\"overflow-hidden rounded-full bg-base-300 shrink-0\">\n            {testimonial.img ? (\n              <Image\n                className=\"w-10 h-10 rounded-full object-cover\"\n                src={list[i].img}\n                alt={`${list[i].name}'s testimonial for ${config.appName}`}\n                width={48}\n                height={48}\n              />\n            ) : (\n              <span className=\"w-10 h-10 rounded-full flex justify-center items-center text-lg font-medium bg-base-300\">\n                {testimonial.name.charAt(0)}\n              </span>\n            )}\n          </div>\n          <div className=\"w-full flex items-end justify-between gap-2\">\n            <div>\n              <div className=\"text-sm font-medium text-base-content\">\n                {testimonial.name}\n              </div>\n              {testimonial.username && (\n                <div className=\"mt-0.5 text-sm text-base-content/80\">\n                  @{testimonial.username}\n                </div>\n              )}\n            </div>\n\n            {testimonial.link && testimonial.type?.svg && (\n              <a\n                href={testimonial.link}\n                target=\"_blank\"\n                className=\"shrink-0 \"\n                aria-label={testimonial.type?.ariaLabel}\n              >\n                {testimonial.type?.svg}\n              </a>\n            )}\n          </div>\n        </figcaption>\n      </figure>\n    </li>\n  );\n};\n\n// A video tesionial to build trust. 2 or 3 on a wall of love is perfect.\nconst VideoTestimonial = ({ i }: { i: number }) => {\n  const vidRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (vidRef.current?.readyState != 0) {\n      setIsLoading(false);\n    }\n  }, [vidRef?.current?.readyState]);\n\n  const handlePlayVideo = () => {\n    if (isPlaying) {\n      vidRef.current.pause();\n      setIsPlaying(false);\n    } else {\n      vidRef.current.play();\n      setIsPlaying(true);\n\n      if (vidRef.current?.readyState === 0) setIsLoading(true);\n    }\n  };\n\n  const testimonial = list[i];\n\n  if (!testimonial) return null;\n\n  return (\n    <li\n      key={i}\n      className=\"break-inside-avoid max-md:flex justify-center bg-base-100 rounded-lg overflow-hidden flex flex-col\"\n    >\n      <div className=\"relative w-full\">\n        {isLoading && (\n          <span className=\"z-40 !h-24 !w-24 !bg-gray-50 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 loading loading-ring\"></span>\n        )}\n        <video\n          className=\"w-full\"\n          ref={vidRef}\n          poster={testimonial.videoPoster}\n          preload=\"metadata\"\n          playsInline\n          width={testimonial.videoWidth}\n          height={testimonial.videoHeight}\n          onLoadedData={() => {\n            console.log(\"Video is loaded!\");\n            setIsLoading(false);\n          }}\n        >\n          <source\n            src={testimonial.videoSrc}\n            type={testimonial.videoType || \"video/mp4\"}\n          />\n          Your browser does not support the videos\n        </video>\n\n        {!isPlaying && (\n          <div className=\"absolute bottom-0 -inset-x-4 bg-gray-900/50 blur-lg h-24 translate-y-1/4 animate-opacity\"></div>\n        )}\n\n        <div className=\"absolute w-full bottom-0 z-20\">\n          <div className=\"flex justify-between items-end p-4\">\n            <button\n              className=\"group cursor-pointer\"\n              type=\"button\"\n              title=\"Play video\"\n              aria-label=\"Play video\"\n              onClick={handlePlayVideo}\n            >\n              {isPlaying ? (\n                // PAUSE\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"currentColor\"\n                  className=\" w-14 h-14 fill-gray-50 group-hover:scale-[1.05] duration-100 ease-in drop-shadow-lg animate-opacity\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M6.75 5.25a.75.75 0 0 1 .75-.75H9a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H7.5a.75.75 0 0 1-.75-.75V5.25Zm7.5 0A.75.75 0 0 1 15 4.5h1.5a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H15a.75.75 0 0 1-.75-.75V5.25Z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              ) : (\n                // PLAY\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"currentColor\"\n                  className=\"w-14 h-14 fill-gray-50 group-hover:scale-[1.05] duration-100 ease-in drop-shadow-lg animate-opacity\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M4.5 5.653c0-1.427 1.529-2.33 2.779-1.643l11.54 6.347c1.295.712 1.295 2.573 0 3.286L7.28 19.99c-1.25.687-2.779-.217-2.779-1.643V5.653Z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              )}\n            </button>\n\n            {!isPlaying && (\n              <div className=\"animate-opacity text-right\">\n                <p className=\"text-gray-50 font-medium drop-shadow\">\n                  {testimonial.name}\n                </p>\n                <div className=\"rating\">\n                  {[...Array(5)].map((_, i) => (\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"w-5 h-5 text-accent drop-shadow\"\n                      key={i}\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"relative z-20 bg-accent text-accent-content text-base leading-tight font-medium p-4 select-none\">\n        <p>&quot;{testimonial.text}&quot;</p>\n      </div>\n    </li>\n  );\n};\n\nconst Testimonials11 = () => {\n  return (\n    <section className=\"bg-base-200\" id=\"testimonials\">\n      <div className=\"py-24 px-8 max-w-7xl mx-auto\">\n        <div className=\"flex flex-col text-center w-full mb-20\">\n          <div className=\"mb-8\">\n            <h2 className=\"sm:text-5xl text-4xl font-extrabold text-base-content\">\n              212 makers are already shipping faster!\n            </h2>\n          </div>\n          <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base text-base-content/80\">\n            Don&apos;t take our word for it. Here&apos;s what they have to say\n            about {config.appName}.\n          </p>\n        </div>\n\n        <ul\n          role=\"list\"\n          className=\"grid max-w-2xl grid-cols-1 gap-6 mx-auto sm:gap-8 md:grid-cols-2 lg:max-w-none lg:grid-cols-4\"\n        >\n          <li>\n            <ul role=\"list\" className=\"flex flex-col gap-y-6 sm:gap-y-8\">\n              {[...Array(3)].map((e, i) => (\n                <Testimonial key={i} i={i} />\n              ))}\n            </ul>\n          </li>\n\n          <li className=\"hidden md:grid order-none md:order-first lg:order-none col-span-2 grid-cols-1 md:grid-cols-2 gap-6 sm:gap-8\">\n            {/* BIG FEATURED TESTIMONIAL \u2014 THE LAST ONE IN THE LIST (11th) */}\n            <ul className=\"col-span-2\">\n              <li>\n                <figure className=\"relative h-full p-6 bg-base-100 rounded-lg\">\n                  <blockquote className=\"relative p-4\">\n                    <p className=\"text-lg font-medium text-base-content\">\n                      {list[list.length - 1].text}\n                    </p>\n                  </blockquote>\n                  <figcaption className=\"relative flex items-center justify-start gap-4 pt-4 mt-4 border-t border-base-content/5\">\n                    <div className=\"overflow-hidden rounded-full bg-base-300 shrink-0\">\n                      {list[list.length - 1].img ? (\n                        <Image\n                          className=\"w-12 h-12 rounded-full object-cover\"\n                          src={list[list.length - 1].img}\n                          alt={`${\n                            list[list.length - 1].name\n                          }'s testimonial for ${config.appName}`}\n                          width={48}\n                          height={48}\n                        />\n                      ) : (\n                        <span className=\"w-12 h-12 rounded-full flex justify-center items-center text-xl font-medium bg-base-300\">\n                          {list[list.length - 1].name.charAt(0)}\n                        </span>\n                      )}\n                    </div>\n                    <div>\n                      <div className=\"text-base font-medium text-base-content\">\n                        {list[list.length - 1].name}\n                      </div>\n                      {list[list.length - 1].username && (\n                        <div className=\"mt-1 text-base text-base-content/80\">\n                          @{list[list.length - 1].username}\n                        </div>\n                      )}\n                    </div>\n                  </figcaption>\n                </figure>\n              </li>\n            </ul>\n            <ul role=\"list\" className=\"flex flex-col gap-y-6 sm:gap-y-8\">\n              {[...Array(2)].map((e, i) => (\n                <Testimonial key={i} i={i + 3} />\n              ))}\n            </ul>\n            <ul role=\"list\" className=\"flex flex-col gap-y-6 sm:gap-y-8\">\n              {[...Array(2)].map((e, i) => (\n                <Testimonial key={i} i={i + 5} />\n              ))}\n            </ul>\n          </li>\n          <li>\n            <ul role=\"list\" className=\"flex flex-col gap-y-6 sm:gap-y-8\">\n              {[...Array(3)].map((e, i) => (\n                <Testimonial key={i} i={i + 7} />\n              ))}\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default Testimonials11;\n"
    },
    {
      "filepath": "components/CTA.tsx",
      "content": "import Image from \"next/image\";\nimport config from \"@/config\";\n\nconst CTA = () => {\n  return (\n    <section className=\"relative hero overflow-hidden min-h-screen\">\n      <Image\n        src=\"https://images.unsplash.com/photo-1571171637578-41bc2dd41cd2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3540&q=80\"\n        alt=\"Background\"\n        className=\"object-cover w-full\"\n        fill\n      />\n      <div className=\"relative hero-overlay bg-neutral bg-opacity-70\"></div>\n      <div className=\"relative hero-content text-center text-neutral-content p-8\">\n        <div className=\"flex flex-col items-center max-w-xl p-8 md:p-0\">\n          <h2 className=\"font-bold text-3xl md:text-5xl tracking-tight mb-8 md:mb-12\">\n            Boost your app, launch, earn\n          </h2>\n          <p className=\"text-lg opacity-80 mb-12 md:mb-16\">\n            Don&apos;t waste time integrating APIs or designing a pricing\n            section...\n          </p>\n\n          <button className=\"btn btn-primary btn-wide\">\n            Get {config.appName}\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CTA;\n"
    },
    {
      "filepath": "components/Header.tsx",
      "content": "\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport type { JSX } from \"react\";\nimport { useSearchParams } from \"next/navigation\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport ButtonSignin from \"./ButtonSignin\";\nimport logo from \"@/app/icon.png\";\nimport config from \"@/config\";\n\nconst links: {\n  href: string;\n  label: string;\n}[] = [\n  {\n    href: \"/#pricing\",\n    label: \"Pricing\",\n  },\n  {\n    href: \"/#testimonials\",\n    label: \"Reviews\",\n  },\n  {\n    href: \"/#faq\",\n    label: \"FAQ\",\n  },\n];\n\nconst cta: JSX.Element = <ButtonSignin extraStyle=\"btn-primary\" />;\n\n// A header with a logo on the left, links in the center (like Pricing, etc...), and a CTA (like Get Started or Login) on the right.\n// The header is responsive, and on mobile, the links are hidden behind a burger button.\nconst Header = () => {\n  const searchParams = useSearchParams();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  // setIsOpen(false) when the route changes (i.e: when the user clicks on a link on mobile)\n  useEffect(() => {\n    setIsOpen(false);\n  }, [searchParams]);\n\n  return (\n    <header className=\"bg-base-200\">\n      <nav\n        className=\"container flex items-center justify-between px-8 py-4 mx-auto\"\n        aria-label=\"Global\"\n      >\n        {/* Your logo/name on large screens */}\n        <div className=\"flex lg:flex-1\">\n          <Link\n            className=\"flex items-center gap-2 shrink-0 \"\n            href=\"/\"\n            title={`${config.appName} homepage`}\n          >\n            <Image\n              src={logo}\n              alt={`${config.appName} logo`}\n              className=\"w-8\"\n              placeholder=\"blur\"\n              priority={true}\n              width={32}\n              height={32}\n            />\n            <span className=\"font-extrabold text-lg\">{config.appName}</span>\n          </Link>\n        </div>\n        {/* Burger button to open menu on mobile */}\n        <div className=\"flex lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5\"\n            onClick={() => setIsOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth={1.5}\n              stroke=\"currentColor\"\n              className=\"w-6 h-6 text-base-content\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        {/* Your links on large screens */}\n        <div className=\"hidden lg:flex lg:justify-center lg:gap-12 lg:items-center\">\n          {links.map((link) => (\n            <Link\n              href={link.href}\n              key={link.href}\n              className=\"link link-hover\"\n              title={link.label}\n            >\n              {link.label}\n            </Link>\n          ))}\n        </div>\n\n        {/* CTA on large screens */}\n        <div className=\"hidden lg:flex lg:justify-end lg:flex-1\">{cta}</div>\n      </nav>\n\n      {/* Mobile menu, show/hide based on menu state. */}\n      <div className={`relative z-50 ${isOpen ? \"\" : \"hidden\"}`}>\n        <div\n          className={`fixed inset-y-0 right-0 z-10 w-full px-8 py-4 overflow-y-auto bg-base-200 sm:max-w-sm sm:ring-1 sm:ring-neutral/10 transform origin-right transition ease-in-out duration-300`}\n        >\n          {/* Your logo/name on small screens */}\n          <div className=\"flex items-center justify-between\">\n            <Link\n              className=\"flex items-center gap-2 shrink-0 \"\n              title={`${config.appName} homepage`}\n              href=\"/\"\n            >\n              <Image\n                src={logo}\n                alt={`${config.appName} logo`}\n                className=\"w-8\"\n                placeholder=\"blur\"\n                priority={true}\n                width={32}\n                height={32}\n              />\n              <span className=\"font-extrabold text-lg\">{config.appName}</span>\n            </Link>\n            <button\n              type=\"button\"\n              className=\"-m-2.5 rounded-md p-2.5\"\n              onClick={() => setIsOpen(false)}\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-6 h-6\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </button>\n          </div>\n\n          {/* Your links on small screens */}\n          <div className=\"flow-root mt-6\">\n            <div className=\"py-4\">\n              <div className=\"flex flex-col gap-y-4 items-start\">\n                {links.map((link) => (\n                  <Link\n                    href={link.href}\n                    key={link.href}\n                    className=\"link link-hover\"\n                    title={link.label}\n                  >\n                    {link.label}\n                  </Link>\n                ))}\n              </div>\n            </div>\n            <div className=\"divider\"></div>\n            {/* Your CTA on small screens */}\n            <div className=\"flex flex-col\">{cta}</div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"
    },
    {
      "filepath": "components/ButtonGradient.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\n\nconst ButtonGradient = ({\n  title = \"Gradient Button\",\n  onClick = () => {},\n}: {\n  title?: string;\n  onClick?: () => void;\n}) => {\n  return (\n    <button className=\"btn btn-gradient animate-shimmer\" onClick={onClick}>\n      {title}\n    </button>\n  );\n};\n\nexport default ButtonGradient;\n"
    },
    {
      "filepath": "components/ButtonCheckout.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport apiClient from \"@/libs/api\";\nimport config from \"@/config\";\n\n// This component is used to create Stripe Checkout Sessions\n// It calls the /api/stripe/create-checkout route with the priceId, successUrl and cancelUrl\n// Users must be authenticated. It will prefill the Checkout data with their email and/or credit card (if any)\n// You can also change the mode to \"subscription\" if you want to create a subscription instead of a one-time payment\nconst ButtonCheckout = ({\n  priceId,\n  mode = \"payment\",\n}: {\n  priceId: string;\n  mode?: \"payment\" | \"subscription\";\n}) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handlePayment = async () => {\n    setIsLoading(true);\n\n    try {\n      const { url }: { url: string } = await apiClient.post(\n        \"/stripe/create-checkout\",\n        {\n          priceId,\n          successUrl: window.location.href,\n          cancelUrl: window.location.href,\n          mode,\n        }\n      );\n\n      window.location.href = url;\n    } catch (e) {\n      console.error(e);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <button\n      className=\"btn btn-primary btn-block group\"\n      onClick={() => handlePayment()}\n    >\n      {isLoading ? (\n        <span className=\"loading loading-spinner loading-xs\"></span>\n      ) : (\n        <svg\n          className=\"w-5 h-5 fill-primary-content group-hover:scale-110 group-hover:-rotate-3 transition-transform duration-200\"\n          viewBox=\"0 0 375 509\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M249.685 14.125C249.685 11.5046 248.913 8.94218 247.465 6.75675C246.017 4.57133 243.957 2.85951 241.542 1.83453C239.126 0.809546 236.463 0.516683 233.882 0.992419C231.301 1.46815 228.917 2.69147 227.028 4.50999L179.466 50.1812C108.664 118.158 48.8369 196.677 2.11373 282.944C0.964078 284.975 0.367442 287.272 0.38324 289.605C0.399039 291.938 1.02672 294.226 2.20377 296.241C3.38082 298.257 5.06616 299.929 7.09195 301.092C9.11775 302.255 11.4133 302.867 13.75 302.869H129.042V494.875C129.039 497.466 129.791 500.001 131.205 502.173C132.62 504.345 134.637 506.059 137.01 507.106C139.383 508.153 142.01 508.489 144.571 508.072C147.131 507.655 149.516 506.503 151.432 504.757L172.698 485.394C247.19 417.643 310.406 338.487 359.975 250.894L373.136 227.658C374.292 225.626 374.894 223.327 374.882 220.99C374.87 218.653 374.243 216.361 373.065 214.341C371.887 212.322 370.199 210.646 368.17 209.482C366.141 208.318 363.841 207.706 361.5 207.707H249.685V14.125Z\" />\n        </svg>\n      )}\n      Get {config?.appName}\n    </button>\n  );\n};\n\nexport default ButtonCheckout;\n"
    },
    {
      "filepath": "components/Modal.tsx",
      "content": "\"use client\";\n\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { Fragment } from \"react\";\n\nimport React from \"react\";\n\ninterface ModalProps {\n  isModalOpen: boolean;\n  setIsModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\n// A simple modal component which can be shown/hidden with a boolean and a function\n// Because of the setIsModalOpen function, you can't use it in a server component.\nconst Modal = ({ isModalOpen, setIsModalOpen }: ModalProps) => {\n  return (\n    <Transition appear show={isModalOpen} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"relative z-50\"\n        onClose={() => setIsModalOpen(false)}\n      >\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-neutral-focus bg-opacity-50\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full overflow-hidden items-start md:items-center justify-center p-2\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"relative w-full max-w-3xl h-full overflow-visible transform text-left align-middle shadow-xl transition-all rounded-xl bg-base-100 p-6 md:p-8\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <Dialog.Title as=\"h2\" className=\"font-semibold\">\n                    I&apos;m a modal\n                  </Dialog.Title>\n                  <button\n                    className=\"btn btn-square btn-ghost btn-sm\"\n                    onClick={() => setIsModalOpen(false)}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"w-5 h-5\"\n                    >\n                      <path d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\" />\n                    </svg>\n                  </button>\n                </div>\n\n                <section>And here is my content</section>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default Modal;\n"
    },
    {
      "filepath": "components/FAQ.tsx",
      "content": "\"use client\";\n\nimport { useRef, useState } from \"react\";\nimport type { JSX } from \"react\";\n\n// <FAQ> component is a lsit of <Item> component\n// Just import the FAQ & add your FAQ content to the const faqList arrayy below.\n\ninterface FAQItemProps {\n  question: string;\n  answer: JSX.Element;\n}\n\nconst faqList: FAQItemProps[] = [\n  {\n    question: \"What do I get exactly?\",\n    answer: <div className=\"space-y-2 leading-relaxed\">Loreum Ipseum</div>,\n  },\n  {\n    question: \"Can I get a refund?\",\n    answer: (\n      <p>\n        Yes! You can request a refund within 7 days of your purchase. Reach out\n        by email.\n      </p>\n    ),\n  },\n  {\n    question: \"I have another question\",\n    answer: (\n      <div className=\"space-y-2 leading-relaxed\">Cool, contact us by email</div>\n    ),\n  },\n];\n\nconst FaqItem = ({ item }: { item: FAQItemProps }) => {\n  const accordion = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <li>\n      <button\n        className=\"relative flex gap-2 items-center w-full py-5 text-base font-semibold text-left border-t md:text-lg border-base-content/10\"\n        onClick={(e) => {\n          e.preventDefault();\n          setIsOpen(!isOpen);\n        }}\n        aria-expanded={isOpen}\n      >\n        <span\n          className={`flex-1 text-base-content ${isOpen ? \"text-primary\" : \"\"}`}\n        >\n          {item?.question}\n        </span>\n        <svg\n          className={`flex-shrink-0 w-4 h-4 ml-auto fill-current`}\n          viewBox=\"0 0 16 16\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <rect\n            y=\"7\"\n            width=\"16\"\n            height=\"2\"\n            rx=\"1\"\n            className={`transform origin-center transition duration-200 ease-out ${\n              isOpen && \"rotate-180\"\n            }`}\n          />\n          <rect\n            y=\"7\"\n            width=\"16\"\n            height=\"2\"\n            rx=\"1\"\n            className={`transform origin-center rotate-90 transition duration-200 ease-out ${\n              isOpen && \"rotate-180 hidden\"\n            }`}\n          />\n        </svg>\n      </button>\n\n      <div\n        ref={accordion}\n        className={`transition-all duration-300 ease-in-out opacity-80 overflow-hidden`}\n        style={\n          isOpen\n            ? { maxHeight: accordion?.current?.scrollHeight, opacity: 1 }\n            : { maxHeight: 0, opacity: 0 }\n        }\n      >\n        <div className=\"pb-5 leading-relaxed\">{item?.answer}</div>\n      </div>\n    </li>\n  );\n};\n\nconst FAQ = () => {\n  return (\n    <section className=\"bg-base-200\" id=\"faq\">\n      <div className=\"py-24 px-8 max-w-7xl mx-auto flex flex-col md:flex-row gap-12\">\n        <div className=\"flex flex-col text-left basis-1/2\">\n          <p className=\"inline-block font-semibold text-primary mb-4\">FAQ</p>\n          <p className=\"sm:text-4xl text-3xl font-extrabold text-base-content\">\n            Frequently Asked Questions\n          </p>\n        </div>\n\n        <ul className=\"basis-1/2\">\n          {faqList.map((item, i) => (\n            <FaqItem key={i} item={item} />\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default FAQ;\n"
    },
    {
      "filepath": "components/Problem.tsx",
      "content": "const Arrow = ({ extraStyle }: { extraStyle: string }) => {\n  return (\n    <svg\n      className={`shrink-0 w-12 fill-neutral-content opacity-70 ${extraStyle}`}\n      viewBox=\"0 0 138 138\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M72.9644 5.31431C98.8774 43.8211 83.3812 88.048 54.9567 120.735C54.4696 121.298 54.5274 122.151 55.0896 122.639C55.6518 123.126 56.5051 123.068 56.9922 122.506C86.2147 88.9044 101.84 43.3918 75.2003 3.80657C74.7866 3.18904 73.9486 3.02602 73.3287 3.44222C72.7113 3.85613 72.5484 4.69426 72.9644 5.31431Z\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M56.5084 121.007C56.9835 118.685 57.6119 115.777 57.6736 115.445C59.3456 106.446 59.5323 97.67 58.4433 88.5628C58.3558 87.8236 57.6824 87.2948 56.9433 87.3824C56.2042 87.4699 55.6756 88.1435 55.7631 88.8828C56.8219 97.7138 56.6432 106.225 55.0203 114.954C54.926 115.463 53.5093 121.999 53.3221 123.342C53.2427 123.893 53.3688 124.229 53.4061 124.305C53.5887 124.719 53.8782 124.911 54.1287 125.015C54.4123 125.13 54.9267 125.205 55.5376 124.926C56.1758 124.631 57.3434 123.699 57.6571 123.487C62.3995 120.309 67.4155 116.348 72.791 113.634C77.9171 111.045 83.3769 109.588 89.255 111.269C89.9704 111.475 90.7181 111.057 90.9235 110.342C91.1288 109.626 90.7117 108.878 89.9963 108.673C83.424 106.794 77.3049 108.33 71.5763 111.223C66.2328 113.922 61.2322 117.814 56.5084 121.007Z\"\n        />\n      </g>\n    </svg>\n  );\n};\nconst Step = ({ emoji, text }: { emoji: string; text: string }) => {\n  return (\n    <div className=\"w-full md:w-48 flex flex-col gap-2 items-center justify-center\">\n      <span className=\"text-4xl\">{emoji}</span>\n      <h3 className=\"font-bold\">{text}</h3>\n    </div>\n  );\n};\n\n// Problem Agitation: A crucial, yet overlooked, component for a landing page that sells.\n// It goes under your Hero section, and above your Features section.\n// Your Hero section makes a promise to the customer: \"Our product will help you achieve XYZ\".\n// Your Problem section explains what happens to the customer if its problem isn't solved.\n// The copy should NEVER mention your product. Instead, it should dig the emotional outcome of not fixing a problem.\n// For instance:\n// - Hero: \"ShipFast helps developers launch startups fast\"\n// - Problem Agitation: \"Developers spend too much time adding features, get overwhelmed, and quit.\" (not about ShipFast at all)\n// - Features: \"ShipFast has user auth, Stripe, emails all set up for you\"\nconst Problem = () => {\n  return (\n    <section className=\"bg-neutral text-neutral-content\">\n      <div className=\"max-w-7xl mx-auto px-8 py-16 md:py-32 text-center\">\n        <h2 className=\"max-w-3xl mx-auto font-extrabold text-4xl md:text-5xl tracking-tight mb-6 md:mb-8\">\n          80% of startups fail because founders never launch\n        </h2>\n        <p className=\"max-w-xl mx-auto text-lg opacity-90 leading-relaxed mb-12 md:mb-20\">\n          Emails, DNS records, user authentication... There&apos;s so much going\n          on.\n        </p>\n\n        <div className=\"flex flex-col md:flex-row justify-center items-center md:items-start gap-6\">\n          <Step emoji=\"\ud83e\uddd1\u200d\ud83d\udcbb\" text=\"8 hrs to add Stripe\" />\n\n          <Arrow extraStyle=\"max-md:-scale-x-100 md:-rotate-90\" />\n\n          <Step emoji=\"\ud83d\ude2e\u200d\ud83d\udca8\" text=\"Struggle to find time\" />\n\n          <Arrow extraStyle=\"md:-scale-x-100 md:-rotate-90\" />\n\n          <Step emoji=\"\ud83d\ude14\" text=\"Quit project\" />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Problem;\n"
    },
    {
      "filepath": "components/Testimonials1.tsx",
      "content": "import Image from \"next/image\";\n\n// A beautiful single testimonial with a user name and and company logo logo\nconst Testimonial = () => {\n  return (\n    <section\n      className=\"relative isolate overflow-hidden bg-base-100 px-8 py-24 sm:py-32\"\n      id=\"testimonials\"\n    >\n      <div className=\"absolute inset-0 -z-10 bg-[radial-gradient(45rem_50rem_at_top,theme(colors.base-300),theme(colors.base-100))] opacity-20\" />\n      <div className=\"absolute inset-y-0 right-1/2 -z-10 mr-16 w-[200%] origin-bottom-left skew-x-[-30deg] bg-base-100 shadow-lg ring-1 ring-base-content/10 sm:mr-28 lg:mr-0 xl:mr-16 xl:origin-center\" />\n      <div className=\"mx-auto max-w-2xl lg:max-w-5xl\">\n        <figure className=\"mt-10\">\n          <div className=\"flex flex-col lg:flex-row items-center gap-12\">\n            <div className=\"relative rounded-xl border border-base-content/5 bg-base-content/5 p-1.5 sm:-rotate-1\">\n              <Image\n                width={320}\n                height={320}\n                className=\"rounded-lg max-w-[320px] md:max-w-[280px] lg:max-w-[320px] object-center border-2 border-white/10 shadow-md\"\n                // Ideally, load from a statically generated image for better SEO performance (import userImage from \"@/public/userImage.png\")\n                // If you're using a static image, add placeholder=\"blur\"\n                src=\"https://images.unsplash.com/photo-1544005313-94ddf0286df2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2488&q=80\"\n                alt=\"A testimonial from a happy customer\"\n              />\n            </div>\n\n            <div>\n              <blockquote className=\"text-xl font-medium leading-8 text-base-content sm:text-2xl sm:leading-10\">\n                I got your boilerplate and having the payments setup with Stripe\n                + user auth is a blessing. This will save me like a week of work\n                for each new side project I spin up. I appreciate that is well\n                documented, as well. 100% worth it!\n              </blockquote>\n              <figcaption className=\"mt-10 flex items-center justify-start gap-5\">\n                <div className=\"text-base\">\n                  <div className=\"font-semibold text-base-content mb-0.5\">\n                    Amanda Lou\n                  </div>\n                  <div className=\"text-base-content/60\">\n                    Indie Maker &amp; Developer\n                  </div>\n                </div>\n\n                <Image\n                  width={150}\n                  height={50}\n                  className=\"w-20 md:w-24\"\n                  // Ideally, load from a statically generated image for better SEO performance (import userImage from \"@/public/userImage.png\")\n                  src=\"https://logos-world.net/wp-content/uploads/2020/10/Reddit-Logo.png\"\n                  alt=\"Reddit logo\"\n                />\n              </figcaption>\n            </div>\n          </div>\n        </figure>\n      </div>\n    </section>\n  );\n};\n\nexport default Testimonial;\n"
    },
    {
      "filepath": "components/Testimonials3.tsx",
      "content": "import Image from \"next/image\";\nimport { StaticImageData } from \"next/image\";\nimport config from \"@/config\";\n\n// The list of your testimonials. It needs 3 items to fill the row.\nconst list: {\n  username?: string;\n  name: string;\n  text: string;\n  img?: string | StaticImageData;\n}[] = [\n  {\n    // Optional, use for social media like Twitter. Does not link anywhere but cool to display\n    username: \"marclou\",\n    // REQUIRED\n    name: \"Marc Lou\",\n    // REQUIRED\n    text: \"Really easy to use. The tutorials are really useful and explains how everything works. Hope to ship my next project really fast!\",\n    // Optional, a statically imported image (usually from your public folder\u2014recommended) or a link to the person's avatar. Shows a fallback letter if not provided\n    img: \"https://pbs.twimg.com/profile_images/1514863683574599681/9k7PqDTA_400x400.jpg\",\n  },\n  {\n    username: \"the_mcnaveen\",\n    name: \"Naveen\",\n    text: \"Setting up everything from the ground up is a really hard, and time consuming process. What you pay for will save your time for sure.\",\n  },\n  {\n    username: \"wahab\",\n    name: \"Wahab Shaikh\",\n    text: \"Easily saves 15+ hrs for me setting up trivial stuff. Now, I can directly focus on shipping features rather than hours of setting up the same technologies from scratch. Feels like a super power! :D\",\n  },\n];\n\n// A single testimonial, to be rendered in  a list\nconst Testimonial = ({ i }: { i: number }) => {\n  const testimonial = list[i];\n\n  if (!testimonial) return null;\n\n  return (\n    <li key={i}>\n      <figure className=\"relative max-w-lg h-full p-6 md:p-10 bg-base-200 rounded-2xl max-md:text-sm flex flex-col\">\n        <blockquote className=\"relative flex-1\">\n          <p className=\"text-base-content/80 leading-relaxed\">\n            {testimonial.text}\n          </p>\n        </blockquote>\n        <figcaption className=\"relative flex items-center justify-start gap-4 pt-4 mt-4 md:gap-8 md:pt-8 md:mt-8 border-t border-base-content/5\">\n          <div className=\"w-full flex items-center justify-between gap-2\">\n            <div>\n              <div className=\"font-medium text-base-content md:mb-0.5\">\n                {testimonial.name}\n              </div>\n              {testimonial.username && (\n                <div className=\"mt-0.5 text-sm text-base-content/80\">\n                  @{testimonial.username}\n                </div>\n              )}\n            </div>\n\n            <div className=\"overflow-hidden rounded-full bg-base-300 shrink-0\">\n              {testimonial.img ? (\n                <Image\n                  className=\"w-10 h-10 md:w-12 md:h-12 rounded-full object-cover\"\n                  src={list[i].img}\n                  alt={`${list[i].name}'s testimonial for ${config.appName}`}\n                  width={48}\n                  height={48}\n                />\n              ) : (\n                <span className=\"w-10 h-10 md:w-12 md:h-12 rounded-full flex justify-center items-center text-lg font-medium bg-base-300\">\n                  {testimonial.name.charAt(0)}\n                </span>\n              )}\n            </div>\n          </div>\n        </figcaption>\n      </figure>\n    </li>\n  );\n};\n\nconst Testimonials3 = () => {\n  return (\n    <section id=\"testimonials\">\n      <div className=\"py-24 px-8 max-w-7xl mx-auto\">\n        <div className=\"flex flex-col text-center w-full mb-20\">\n          <div className=\"mb-8\">\n            <h2 className=\"sm:text-5xl text-4xl font-extrabold text-base-content\">\n              212 makers are already shipping faster!\n            </h2>\n          </div>\n          <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base text-base-content/80\">\n            Don&apos;t take our word for it. Here&apos;s what they have to say\n            about ShipFast.\n          </p>\n        </div>\n\n        <ul\n          role=\"list\"\n          className=\"flex flex-col items-center lg:flex-row lg:items-stretch gap-6 lg:gap-8\"\n        >\n          {[...Array(3)].map((e, i) => (\n            <Testimonial key={i} i={i} />\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default Testimonials3;\n"
    },
    {
      "filepath": "logs/migration.log",
      "content": "2025-05-13T12:57:10.017Z === Migration started ===\n2025-05-13T12:57:10.023Z Upserting quiz metadata for azure-a102\n2025-05-13T12:57:10.406Z Quiz metadata upserted\n2025-05-13T12:57:10.407Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_drag_and_drop_questions.json\n2025-05-13T12:57:10.407Z Loaded 9 questions from clean_drag_and_drop_questions.json\n2025-05-13T12:57:10.407Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_dropdown_selection_questions.json\n2025-05-13T12:57:10.408Z Loaded 4 questions from clean_dropdown_selection_questions.json\n2025-05-13T12:57:10.408Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_multi_questions.json\n2025-05-13T12:57:10.409Z Loaded 24 questions from clean_multi_questions.json\n2025-05-13T12:57:10.409Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_order_questions.json\n2025-05-13T12:57:10.409Z Loaded 19 questions from clean_order_questions.json\n2025-05-13T12:57:10.409Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_single_selection_questions.json\n2025-05-13T12:57:10.410Z Loaded 67 questions from clean_single_selection_questions.json\n2025-05-13T12:57:10.410Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_yes_no_questions.json\n2025-05-13T12:57:10.411Z Loaded 17 questions from clean_yes_no_questions.json\n2025-05-13T12:57:10.411Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_yesno_multi_questions.json\n2025-05-13T12:57:10.411Z Loaded 7 questions from clean_yesno_multi_questions.json\n2025-05-13T12:57:10.411Z Total questions to import: 147\n2025-05-13T12:57:10.412Z Upserting base questions\n2025-05-13T12:57:11.015Z Base questions done\n2025-05-13T12:57:11.016Z Upserting 21 rows into drag_and_drop_targets\n2025-05-13T12:57:11.311Z drag_and_drop_targets done\n2025-05-13T12:57:11.311Z Upserting 39 rows into drag_and_drop_options\n2025-05-13T12:57:11.598Z drag_and_drop_options done\n2025-05-13T12:57:11.599Z Upserting 21 rows into drag_and_drop_correct_pairs\n2025-05-13T12:57:11.911Z drag_and_drop_correct_pairs done\n2025-05-13T12:57:11.911Z Upserting 28 rows into dropdown_selection_options\n2025-05-13T12:57:12.303Z dropdown_selection_options done\n2025-05-13T12:57:12.303Z Upserting 9 rows into dropdown_selection_targets\n2025-05-13T12:57:12.611Z dropdown_selection_targets done\n2025-05-13T12:57:12.611Z Upserting 111 rows into multi_options\n2025-05-13T12:57:12.751Z multi_options done\n2025-05-13T12:57:12.751Z Upserting 53 rows into multi_correct_answers\n2025-05-13T12:57:12.879Z multi_correct_answers done\n2025-05-13T12:57:12.880Z Upserting 267 rows into single_selection_options\n2025-05-13T12:57:13.069Z single_selection_options done\n2025-05-13T12:57:13.069Z Upserting 67 rows into single_selection_correct_answer\n2025-05-13T12:57:13.364Z single_selection_correct_answer done\n2025-05-13T12:57:13.364Z Upserting 107 rows into order_items\n2025-05-13T12:57:13.739Z order_items done\n2025-05-13T12:57:13.739Z Upserting 60 rows into order_correct_order\n2025-05-13T12:57:13.883Z order_correct_order done\n2025-05-13T12:57:13.883Z Upserting 17 rows into yes_no_answer\n2025-05-13T12:57:14.009Z yes_no_answer done\n2025-05-13T12:57:14.009Z Upserting 23 rows into yesno_multi_statements\n2025-05-13T12:57:14.304Z yesno_multi_statements done\n2025-05-13T12:57:14.304Z Upserting 23 rows into yesno_multi_correct_answers\n2025-05-13T12:57:14.587Z yesno_multi_correct_answers done\n2025-05-13T12:57:14.587Z === Migration finished successfully ===\n2025-05-13T13:00:59.022Z === Migration started ===\n2025-05-13T13:00:59.025Z Upserting quiz metadata for azure-a102\n2025-05-13T13:00:59.352Z Quiz metadata upserted\n2025-05-13T13:00:59.353Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_drag_and_drop_questions.json\n2025-05-13T13:00:59.354Z Loaded 9 questions from clean_drag_and_drop_questions.json\n2025-05-13T13:00:59.354Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_dropdown_selection_questions.json\n2025-05-13T13:00:59.354Z Loaded 4 questions from clean_dropdown_selection_questions.json\n2025-05-13T13:00:59.354Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_multi_questions.json\n2025-05-13T13:00:59.354Z Loaded 24 questions from clean_multi_questions.json\n2025-05-13T13:00:59.355Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_order_questions.json\n2025-05-13T13:00:59.355Z Loaded 19 questions from clean_order_questions.json\n2025-05-13T13:00:59.355Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_single_selection_questions.json\n2025-05-13T13:00:59.356Z Loaded 67 questions from clean_single_selection_questions.json\n2025-05-13T13:00:59.356Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_yes_no_questions.json\n2025-05-13T13:00:59.356Z Loaded 17 questions from clean_yes_no_questions.json\n2025-05-13T13:00:59.356Z Reading /Users/amankumarshrestha/Downloads/ship-fast-ts-supabase/app/data/quizzes/azure-a102/clean_yesno_multi_questions.json\n2025-05-13T13:00:59.357Z Loaded 7 questions from clean_yesno_multi_questions.json\n2025-05-13T13:00:59.357Z Total questions to import: 147\n2025-05-13T13:00:59.357Z Upserting base questions\n2025-05-13T13:00:59.782Z Base questions done\n2025-05-13T13:00:59.783Z Upserting 21 rows into drag_and_drop_targets\n2025-05-13T13:00:59.893Z drag_and_drop_targets done\n2025-05-13T13:00:59.893Z Upserting 39 rows into drag_and_drop_options\n2025-05-13T13:01:00.016Z drag_and_drop_options done\n2025-05-13T13:01:00.016Z Upserting 21 rows into drag_and_drop_correct_pairs\n2025-05-13T13:01:00.159Z drag_and_drop_correct_pairs done\n2025-05-13T13:01:00.159Z Upserting 28 rows into dropdown_selection_options\n2025-05-13T13:01:00.295Z dropdown_selection_options done\n2025-05-13T13:01:00.296Z Upserting 9 rows into dropdown_selection_targets\n2025-05-13T13:01:00.412Z dropdown_selection_targets done\n2025-05-13T13:01:00.412Z Upserting 111 rows into multi_options\n2025-05-13T13:01:00.539Z multi_options done\n2025-05-13T13:01:00.539Z Upserting 53 rows into multi_correct_answers\n2025-05-13T13:01:00.659Z multi_correct_answers done\n2025-05-13T13:01:00.659Z Upserting 267 rows into single_selection_options\n2025-05-13T13:01:00.818Z single_selection_options done\n2025-05-13T13:01:00.818Z Upserting 67 rows into single_selection_correct_answer\n2025-05-13T13:01:00.941Z single_selection_correct_answer done\n2025-05-13T13:01:00.941Z Upserting 107 rows into order_items\n2025-05-13T13:01:01.064Z order_items done\n2025-05-13T13:01:01.064Z Upserting 60 rows into order_correct_order\n2025-05-13T13:01:01.185Z order_correct_order done\n2025-05-13T13:01:01.185Z Upserting 17 rows into yes_no_answer\n2025-05-13T13:01:01.305Z yes_no_answer done\n2025-05-13T13:01:01.305Z Upserting 23 rows into yesno_multi_statements\n2025-05-13T13:01:01.444Z yesno_multi_statements done\n2025-05-13T13:01:01.444Z Upserting 23 rows into yesno_multi_correct_answers\n2025-05-13T13:01:01.557Z yesno_multi_correct_answers done\n2025-05-13T13:01:01.557Z === Migration finished successfully ===\n"
    },
    {
      "filepath": "__tests__/components/question-types/OrderQuestionComponent.test.tsx",
      "content": "import React from 'react';\nimport { render, screen, fireEvent, act } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport OrderQuestionComponent from '@/app/features/quiz/components/question-types/OrderQuestionComponent';\nimport { OrderQuestion, OrderQuestionAnswer } from '@/app/types/quiz';\nimport { OrderController } from '@/app/features/quiz/controllers/OrderController';\n\n// Mock framer-motion\njest.mock('framer-motion', () => ({\n  motion: {\n    div: jest.fn(({ children, ...props }) => <div {...props}>{children}</div>),\n  },\n}));\n\n// Mock useAutoValidation hook\nconst mockSetPlacedAnswers = jest.fn();\nconst mockOnAnswerSelect = jest.fn();\n\njest.mock('@/app/features/quiz/hooks/useAutoValidation', () => ({\n  useAutoValidation: jest.fn((controller, initialAnswer, onAnswerChangeCallback) => {\n    // Simulate the hook's behavior for testing purposes\n    const [answer, setAnswer] = React.useState(initialAnswer);\n    const allItemsOrdered = controller.isAnswerComplete(answer);\n    React.useEffect(() => {\n      // Call onAnswerChangeCallback when all items are ordered, similar to the real hook\n      if (allItemsOrdered) {\n        onAnswerChangeCallback(answer);\n      }\n    }, [answer, allItemsOrdered, onAnswerChangeCallback]);\n    \n    // Allow tests to update the answer via mockSetPlacedAnswers\n    const customSetAnswer = (newAnswer: OrderQuestionAnswer) => {\n        setAnswer(newAnswer);\n        mockSetPlacedAnswers(newAnswer); // also call the mock for direct assertion if needed\n    }\n    return [answer, customSetAnswer, false, allItemsOrdered];\n  }),\n}));\n\nconst mockQuestion: OrderQuestion = {\n  id: 'order-q1',\n  type: 'order',\n  text: 'Arrange these items correctly:',\n  items: [\n    { item_id: 'item1', text: 'First Item' },\n    { item_id: 'item2', text: 'Second Item' },\n    { item_id: 'item3', text: 'Third Item' },\n  ],\n  correctOrder: ['item1', 'item2', 'item3'],\n  question_meta: {\n    difficulty: 'medium',\n    estimated_time: 60,\n    topic: 'Ordering',\n    skill: 'Sequencing',\n  },\n  slotCount: 3,\n};\n\n// Helper to simulate drag and drop\nconst simulateDragDrop = (draggedElement: HTMLElement, dropZone: HTMLElement, dragData: object) => {\n  fireEvent.dragStart(draggedElement, {\n    dataTransfer: {\n      setData: (format: string, data: string) => {\n        // Mock setData if needed, or rely on currentDraggedItemId state\n      },\n      getData: (format: string) => JSON.stringify(dragData), // Provide data for drop\n      effectAllowed: 'move',\n    }\n  });\n\n  fireEvent.dragEnter(dropZone);\n  fireEvent.dragOver(dropZone, { dataTransfer: { dropEffect: 'move' } });\n  fireEvent.drop(dropZone, {\n    dataTransfer: {\n      getData: (format: string) => JSON.stringify(dragData),\n    }\n  });\n  fireEvent.dragLeave(dropZone);\n};\n\n\ndescribe('OrderQuestionComponent', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    // Reset the state of useAutoValidation mock for each test if needed\n    // For instance, reset placedAnswers to initial state if it's managed outside the mock's internal state\n  });\n\n  it('renders available items and empty slots correctly', () => {\n    render(<OrderQuestionComponent question={mockQuestion} onAnswerSelect={mockOnAnswerSelect} />);\n\n    expect(screen.getByText('Available Items:')).toBeInTheDocument();\n    expect(screen.getByText('First Item')).toBeInTheDocument();\n    expect(screen.getByText('Second Item')).toBeInTheDocument();\n    expect(screen.getByText('Third Item')).toBeInTheDocument();\n\n    expect(screen.getByText('Ordered Sequence:')).toBeInTheDocument();\n    const slots = screen.getAllByText('Drop an item here');\n    expect(slots.length).toBe(mockQuestion.slotCount);\n  });\n\n  it('updates state when an item is dragged from available to an empty slot', () => {\n    render(<OrderQuestionComponent question={mockQuestion} onAnswerSelect={mockOnAnswerSelect} />); \n    \n    const availableItem1 = screen.getByText('First Item').closest('div[draggable=\"true\"]');\n    const firstSlot = screen.getAllByText('Drop an item here')[0].closest('div[class*=\"border-dashed\"]');\n\n    expect(availableItem1).toBeInTheDocument();\n    expect(firstSlot).toBeInTheDocument();\n\n    if (availableItem1 && firstSlot) {\n      // Simulate drag data\n      const dragData = { itemId: 'item1', sourceType: 'available' };\n      \n      act(() => {\n        simulateDragDrop(availableItem1, firstSlot, dragData);\n      });\n\n      // Check if onAnswerSelect was called by useAutoValidation due to state change\n      // This depends on how useAutoValidation is mocked and how setPlacedAnswers is called by the component\n      // We expect setPlacedAnswers (from useAutoValidation) to be called by the component's drop handler.\n      // Then, the useEffect within the mocked useAutoValidation should trigger onAnswerSelect if complete.\n      \n      // Verify that the item text is now in the slot (or that onAnswerSelect was called with the new state)\n      // This requires the mocked useAutoValidation to correctly update the 'placedAnswers' state used by the component.\n      // As the mock directly calls setAnswer, the component should re-render with the new state.\n      expect(screen.getByText('First Item').closest('div[class*=\"border-gray-300\"]')).not.toHaveClass('border-dashed'); // No longer a dashed empty slot\n      expect(screen.queryByText('Drop an item here')).toBeNull(); // Assuming only one item dropped for now, so one less empty slot text\n    }\n  });\n\n  it('disables drag and drop when isSubmitted is true', () => {\n    render(<OrderQuestionComponent question={mockQuestion} onAnswerSelect={mockOnAnswerSelect} isSubmitted={true} />);\n    const availableItem = screen.getByText('First Item').closest('div[draggable=\"false\"]');\n    expect(availableItem).toBeInTheDocument(); // Draggable should be false\n  });\n\n  it('disables drag and drop when isQuizReviewMode is true', () => {\n    render(<OrderQuestionComponent question={mockQuestion} onAnswerSelect={mockOnAnswerSelect} isQuizReviewMode={true} />);\n    const availableItemContainer = screen.getByText('All items placed.'); // In review mode, available items are empty\n    expect(availableItemContainer).toBeInTheDocument();\n    // Slots should show correct items, not be draggable\n    const firstSlotItem = screen.getByText('First Item').closest('div[draggable=\"false\"]');\n    expect(firstSlotItem).toBeInTheDocument();\n  });\n\n  it('shows correct/incorrect feedback when showCorrectAnswer is true', () => {\n    const userAnswer: OrderQuestionAnswer = {\n      'slot_0': 'item1', // Correct\n      'slot_1': 'item3', // Incorrect\n      'slot_2': 'item2', // Incorrect\n    };\n    render(\n      <OrderQuestionComponent \n        question={mockQuestion} \n        onAnswerSelect={mockOnAnswerSelect} \n        userAnswer={userAnswer} \n        isSubmitted={true} \n        showCorrectAnswer={true} \n      />\n    );\n\n    // Check for feedback icons or styles\n    const correctSlot = screen.getByText('First Item').closest('div');\n    expect(correctSlot).toHaveClass('border-green-500');\n\n    const incorrectSlot1 = screen.getByText('Third Item').closest('div');\n    expect(incorrectSlot1).toHaveClass('border-red-500');\n    expect(screen.getByText('Correct: Second Item')).toBeInTheDocument(); // Feedback for incorrect item\n\n    const incorrectSlot2 = screen.getByText('Second Item').closest('div');\n    expect(incorrectSlot2).toHaveClass('border-red-500');\n    expect(screen.getByText('Correct: Third Item')).toBeInTheDocument(); // Feedback for incorrect item\n  });\n\n   it('calls onAnswerSelect when all items are placed and validateOnComplete is true', () => {\n    // This test relies heavily on the mock of useAutoValidation correctly calling onAnswerSelect\n    // when the answer becomes complete.\n    render(<OrderQuestionComponent question={mockQuestion} onAnswerSelect={mockOnAnswerSelect} validateOnComplete={true} />);\n\n    const availableItem1 = screen.getByText('First Item').closest('div[draggable=\"true\"]');\n    const availableItem2 = screen.getByText('Second Item').closest('div[draggable=\"true\"]');\n    const availableItem3 = screen.getByText('Third Item').closest('div[draggable=\"true\"]');\n\n    const slots = screen.getAllByText('Drop an item here').map(el => el.closest('div[class*=\"border-dashed\"]'));\n\n    if (availableItem1 && availableItem2 && availableItem3 && slots.length === 3) {\n      act(() => {\n        simulateDragDrop(availableItem1, slots[0]!, { itemId: 'item1', sourceType: 'available' });\n      });\n      // onAnswerSelect should not be called yet\n      expect(mockOnAnswerSelect).not.toHaveBeenCalled(); \n\n      act(() => {\n        simulateDragDrop(availableItem2, slots[1]!, { itemId: 'item2', sourceType: 'available' });\n      });\n      expect(mockOnAnswerSelect).not.toHaveBeenCalled();\n      \n      act(() => {\n        simulateDragDrop(availableItem3, slots[2]!, { itemId: 'item3', sourceType: 'available' });\n      });\n      \n      // Now that all items are placed, the mocked useAutoValidation's useEffect should trigger onAnswerSelect\n      expect(mockOnAnswerSelect).toHaveBeenCalledWith({\n        'slot_0': 'item1',\n        'slot_1': 'item2',\n        'slot_2': 'item3',\n      });\n    }\n  });\n\n  // Add more tests for other D&D scenarios:\n  // - Dragging from slot to slot (swap)\n  // - Dragging from slot to slot (move to empty)\n  // - Dragging from slot back to available items\n  // - Dragging from available to a filled slot (replace)\n  // - Fallback logic for dataTransfer issues (might be hard to test without more direct state manipulation access)\n});\n\n"
    },
    {
      "filepath": "__tests__/validators/OrderValidator.test.ts",
      "content": "import { OrderValidator } from '@/app/features/quiz/validators/OrderValidator';\nimport { OrderQuestion, OrderQuestionAnswer } from '@/app/types/quiz';\n\n// Mock OrderQuestion data\nconst mockOrderQuestion: OrderQuestion = {\n  id: 'oq1',\n  type: 'order',\n  text: 'Arrange the following steps in the correct order:',\n  items: [\n    { item_id: 'item1', text: 'Step 1' },\n    { item_id: 'item2', text: 'Step 2' },\n    { item_id: 'item3', text: 'Step 3' },\n  ],\n  correctOrder: ['item1', 'item2', 'item3'],\n  question_meta: {\n    difficulty: 'medium',\n    estimated_time: 60,\n    topic: 'General Knowledge',\n    skill: 'Sequencing',\n  },\n  slotCount: 3, // Explicitly define slotCount based on correctOrder length\n};\n\ndescribe('OrderValidator', () => {\n  let validator: OrderValidator;\n\n  beforeEach(() => {\n    validator = new OrderValidator(mockOrderQuestion);\n  });\n\n  describe('isComplete', () => {\n    it('should return true if all slots are filled', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1',\n        'slot_1': 'item2',\n        'slot_2': 'item3',\n      };\n      expect(validator.isComplete(answer)).toBe(true);\n    });\n\n    it('should return false if any slot is empty (null)', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1',\n        'slot_1': null,\n        'slot_2': 'item3',\n      };\n      expect(validator.isComplete(answer)).toBe(false);\n    });\n\n    it('should return false if the answer is empty', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': null,\n        'slot_1': null,\n        'slot_2': null,\n      };\n      expect(validator.isComplete(answer)).toBe(false);\n    });\n\n    it('should return false if answer has fewer slots filled than slotCount', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1',\n        'slot_1': 'item2', \n        // slot_2 is missing\n      };\n      // The current implementation of isComplete might consider this complete\n      // if it only checks for null values in existing keys.\n      // This test case might need adjustment based on precise isComplete logic.\n      // For now, assuming it requires all defined slots to be non-null.\n      const validatorWithSpecificSlotCount = new OrderValidator({ ...mockOrderQuestion, slotCount: 3 });\n       expect(validatorWithSpecificSlotCount.isComplete(answer)).toBe(false);\n    });\n     \n    it('should return true if all slots defined by correctOrder length are filled, even if answer has extra null slots', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1',\n        'slot_1': 'item2',\n        'slot_2': 'item3',\n        'slot_3': null, // Extra slot, should be ignored by isComplete if slotCount is 3\n      };\n      const validatorWithThreeSlots = new OrderValidator({ ...mockOrderQuestion, slotCount: 3 });\n      expect(validatorWithThreeSlots.isComplete(answer)).toBe(true);\n    });\n\n\n    it('should handle cases where slotCount is 0 (e.g. no items to order)', () => {\n        const emptyQuestion: OrderQuestion = {\n            ...mockOrderQuestion,\n            items: [],\n            correctOrder: [],\n            slotCount: 0,\n        };\n        const emptyValidator = new OrderValidator(emptyQuestion);\n        const answer: OrderQuestionAnswer = {};\n        expect(emptyValidator.isComplete(answer)).toBe(true); // No slots to fill\n    });\n  });\n\n  describe('getCorrectnessMap', () => {\n    it('should return all true for a completely correct answer', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1',\n        'slot_1': 'item2',\n        'slot_2': 'item3',\n      };\n      const expectedMap = {\n        'slot_0': true,\n        'slot_1': true,\n        'slot_2': true,\n      };\n      expect(validator.getCorrectnessMap(answer)).toEqual(expectedMap);\n    });\n\n    it('should return correct and incorrect flags for a partially correct answer', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1', // Correct\n        'slot_1': 'item3', // Incorrect\n        'slot_2': 'item2', // Incorrect\n      };\n      const expectedMap = {\n        'slot_0': true,\n        'slot_1': false,\n        'slot_2': false,\n      };\n      expect(validator.getCorrectnessMap(answer)).toEqual(expectedMap);\n    });\n\n    it('should return all false if all items are in wrong slots', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item3',\n        'slot_1': 'item1',\n        'slot_2': 'item2',\n      };\n      const expectedMap = {\n        'slot_0': false,\n        'slot_1': false,\n        'slot_2': false,\n      };\n      expect(validator.getCorrectnessMap(answer)).toEqual(expectedMap);\n    });\n\n    it('should return false for empty slots', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1',\n        'slot_1': null,\n        'slot_2': 'item2',\n      };\n      const expectedMap = {\n        'slot_0': true, // Correct\n        'slot_1': false, // Empty, thus incorrect\n        'slot_2': false, // item2 is not correct for slot_2\n      };\n      expect(validator.getCorrectnessMap(answer)).toEqual(expectedMap);\n    });\n\n    it('should handle answers with items not belonging to the question (if possible by type)', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1',\n        'slot_1': 'item_unknown', // Does not exist in question.items\n        'slot_2': 'item3',\n      };\n      const expectedMap = {\n        'slot_0': true,\n        'slot_1': false,\n        'slot_2': true,\n      };\n      expect(validator.getCorrectnessMap(answer)).toEqual(expectedMap);\n    });\n    \n    it('should return an empty map if slotCount is 0', () => {\n        const emptyQuestion: OrderQuestion = {\n            ...mockOrderQuestion,\n            items: [],\n            correctOrder: [],\n            slotCount: 0,\n        };\n        const emptyValidator = new OrderValidator(emptyQuestion);\n        const answer: OrderQuestionAnswer = {};\n        expect(emptyValidator.getCorrectnessMap(answer)).toEqual({});\n    });\n\n    it('should correctly evaluate correctness if answer has more slots than question.slotCount but they are null', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1',\n        'slot_1': 'item2',\n        'slot_2': 'item3',\n        'slot_3': null, // Extra slot, should not affect correctness of defined slots\n      };\n       const validatorWithThreeSlots = new OrderValidator({ ...mockOrderQuestion, slotCount: 3 });\n      const expectedMap = {\n        'slot_0': true,\n        'slot_1': true,\n        'slot_2': true,\n      };\n      expect(validatorWithThreeSlots.getCorrectnessMap(answer)).toEqual(expectedMap);\n    });\n\n    it('should mark as incorrect if an actual item is placed in an extra slot beyond slotCount', () => {\n      const answer: OrderQuestionAnswer = {\n        'slot_0': 'item1',\n        'slot_1': 'item2',\n        'slot_2': 'item3',\n        'slot_3': 'item1', // Item placed in an undefined slot (assuming slotCount is 3)\n      };\n      const validatorWithThreeSlots = new OrderValidator({ ...mockOrderQuestion, slotCount: 3 });\n      // The current getCorrectnessMap iterates based on question.slotCount.\n      // So, 'slot_3' won't be in the map. This behavior is acceptable.\n      const expectedMap = {\n        'slot_0': true,\n        'slot_1': true,\n        'slot_2': true,\n      };\n      expect(validatorWithThreeSlots.getCorrectnessMap(answer)).toEqual(expectedMap);\n    });\n  });\n});\n"
    },
    {
      "filepath": "__tests__/controllers/OrderController.test.ts",
      "content": "import { OrderController } from '@/app/features/quiz/controllers/OrderController';\nimport { OrderQuestion, OrderQuestionAnswer, OrderItem } from '@/app/types/quiz';\n\nconst mockOrderQuestion: OrderQuestion = {\n  id: 'oq1',\n  type: 'order',\n  text: 'Arrange the steps:',\n  items: [\n    { item_id: 'itemA', text: 'Step A' },\n    { item_id: 'itemB', text: 'Step B' },\n    { item_id: 'itemC', text: 'Step C' },\n  ],\n  correctOrder: ['itemA', 'itemB', 'itemC'],\n  question_meta: {\n    difficulty: 'easy',\n    estimated_time: 30,\n    topic: 'Process',\n    skill: 'Ordering'\n  },\n  // slotCount is implicitly defined by correctOrder.length in the controller\n};\n\ndescribe('OrderController', () => {\n  let controller: OrderController;\n\n  beforeEach(() => {\n    controller = new OrderController(mockOrderQuestion);\n  });\n\n  describe('getSlotCount', () => {\n    it('should return the length of the correctOrder array', () => {\n      expect(controller.getSlotCount()).toBe(3);\n    });\n\n    it('should return 0 if correctOrder is empty', () => {\n      const emptyQuestion: OrderQuestion = { ...mockOrderQuestion, correctOrder: [], items: [] };\n      const emptyController = new OrderController(emptyQuestion);\n      expect(emptyController.getSlotCount()).toBe(0);\n    });\n  });\n\n  describe('getCorrectItemForSlot', () => {\n    it('should return the correct item ID for a given slot index', () => {\n      expect(controller.getCorrectItemForSlot(0)).toBe('itemA');\n      expect(controller.getCorrectItemForSlot(1)).toBe('itemB');\n      expect(controller.getCorrectItemForSlot(2)).toBe('itemC');\n    });\n\n    it('should return null if the slot index is out of bounds', () => {\n      expect(controller.getCorrectItemForSlot(3)).toBeNull();\n      expect(controller.getCorrectItemForSlot(-1)).toBeNull();\n    });\n  });\n\n  describe('isItemCorrectlyPlacedInSlot', () => {\n    it('should return true if the item ID matches the correct item for that slot', () => {\n      expect(controller.isItemCorrectlyPlacedInSlot(0, 'itemA')).toBe(true);\n      expect(controller.isItemCorrectlyPlacedInSlot(1, 'itemB')).toBe(true);\n    });\n\n    it('should return false if the item ID does not match', () => {\n      expect(controller.isItemCorrectlyPlacedInSlot(0, 'itemB')).toBe(false);\n    });\n\n    it('should return false if the item ID is null', () => {\n      expect(controller.isItemCorrectlyPlacedInSlot(0, null)).toBe(false);\n    });\n\n    it('should return false if the slot index is out of bounds', () => {\n      expect(controller.isItemCorrectlyPlacedInSlot(3, 'itemA')).toBe(false);\n    });\n  });\n\n  describe('createInitialAnswer', () => {\n    it('should return an object with null values for each slot', () => {\n      const expectedInitialAnswer: OrderQuestionAnswer = {\n        'slot_0': null,\n        'slot_1': null,\n        'slot_2': null,\n      };\n      expect(controller.createInitialAnswer()).toEqual(expectedInitialAnswer);\n    });\n\n    it('should return an empty object if slotCount is 0', () => {\n      const emptyQuestion: OrderQuestion = { ...mockOrderQuestion, correctOrder: [], items: [] };\n      const emptyController = new OrderController(emptyQuestion);\n      expect(emptyController.createInitialAnswer()).toEqual({});\n    });\n  });\n  \n  describe('isAnswerComplete', () => {\n    it('should return true if all slots in the answer are filled (not null)', () => {\n      const completeAnswer: OrderQuestionAnswer = {\n        'slot_0': 'itemA',\n        'slot_1': 'itemB',\n        'slot_2': 'itemC',\n      };\n      expect(controller.isAnswerComplete(completeAnswer)).toBe(true);\n    });\n\n    it('should return false if any slot in the answer is null', () => {\n      const incompleteAnswer: OrderQuestionAnswer = {\n        'slot_0': 'itemA',\n        'slot_1': null,\n        'slot_2': 'itemC',\n      };\n      expect(controller.isAnswerComplete(incompleteAnswer)).toBe(false);\n    });\n\n    it('should return false if the answer object does not have all necessary slot keys', () => {\n      const partialAnswer: OrderQuestionAnswer = {\n        'slot_0': 'itemA',\n        'slot_1': 'itemB',\n        // slot_2 is missing\n      };\n      expect(controller.isAnswerComplete(partialAnswer)).toBe(false);\n    });\n\n    it('should return true for an empty answer if slotCount is 0', () => {\n      const emptyQuestion: OrderQuestion = { ...mockOrderQuestion, correctOrder: [], items: [] };\n      const emptyController = new OrderController(emptyQuestion);\n      expect(emptyController.isAnswerComplete({})).toBe(true);\n    });\n\n    it('should return true if all necessary slots are filled, even if extra slots with null values exist in answer', () => {\n      const answerWithExtraNullSlot: OrderQuestionAnswer = {\n        'slot_0': 'itemA',\n        'slot_1': 'itemB',\n        'slot_2': 'itemC',\n        'slot_3': null, \n      };\n      expect(controller.isAnswerComplete(answerWithExtraNullSlot)).toBe(true);\n    });\n\n    it('should return false if an extra slot (beyond slotCount) has a non-null value', () => {\n      // This scenario implies an inconsistency, as the answer structure should ideally only contain keys up to slotCount-1.\n      // However, if such an answer is provided, isAnswerComplete should ideally be robust.\n      // The current implementation of isAnswerComplete iterates up to controller.getSlotCount(),\n      // so it wouldn't naturally check 'slot_3' if slotCount is 3. \n      // This test confirms that behavior: it is considered complete based on the defined slots.\n      const answerWithExtraFilledSlot: OrderQuestionAnswer = {\n        'slot_0': 'itemA',\n        'slot_1': 'itemB',\n        'slot_2': 'itemC',\n        'slot_3': 'itemExtra', \n      };\n      expect(controller.isAnswerComplete(answerWithExtraFilledSlot)).toBe(true);\n    });\n  });\n\n  describe('getCorrectOrder (inherited from QuestionController)', () => {\n    it('should return the correctOrder array from the question definition', () => {\n      expect(controller.getCorrectOrder()).toEqual(['itemA', 'itemB', 'itemC']);\n    });\n  });\n\n  describe('getScore (inherited from QuestionController)', () => {\n    it('should return 1 if the answer is completely correct', () => {\n      const correctAnswer: OrderQuestionAnswer = {\n        'slot_0': 'itemA',\n        'slot_1': 'itemB',\n        'slot_2': 'itemC',\n      };\n      expect(controller.getScore(correctAnswer)).toBe(1);\n    });\n\n    it('should return 0 if the answer is partially correct', () => {\n      const partiallyCorrectAnswer: OrderQuestionAnswer = {\n        'slot_0': 'itemA', // Correct\n        'slot_1': 'itemC', // Incorrect\n        'slot_2': 'itemB', // Incorrect\n      };\n      expect(controller.getScore(partiallyCorrectAnswer)).toBe(0);\n    });\n\n    it('should return 0 if the answer is completely incorrect', () => {\n      const incorrectAnswer: OrderQuestionAnswer = {\n        'slot_0': 'itemC',\n        'slot_1': 'itemA',\n        'slot_2': 'itemB',\n      };\n      expect(controller.getScore(incorrectAnswer)).toBe(0);\n    });\n\n    it('should return 0 if the answer is incomplete (some slots are null)', () => {\n      const incompleteAnswer: OrderQuestionAnswer = {\n        'slot_0': 'itemA',\n        'slot_1': null,\n        'slot_2': 'itemC',\n      };\n      expect(controller.getScore(incompleteAnswer)).toBe(0);\n    });\n\n    it('should return 1 if slotCount is 0 and answer is empty', () => {\n        const emptyQuestion: OrderQuestion = { ...mockOrderQuestion, correctOrder: [], items: [] };\n        const emptyController = new OrderController(emptyQuestion);\n        expect(emptyController.getScore({})).toBe(1); // Correctly ordered nothing\n    });\n  });\n});\n"
    }
  ]
}