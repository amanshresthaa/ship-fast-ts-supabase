{
  "questions": [
    {
      "id": "77",
      "type": "yesno_multi",
      "question": "HOTSPOT - You are developing an application that will use the Computer Vision client library. The application has code using AnalyzeImageInStreamAsync with VisualFeatureTypes.Description and VisualFeatureTypes.Tags. For each of the following statements, select Yes if the statement is true. Otherwise, select No.",
      "points": 1,
      "correctAnswers": [
        "no",
        "yes",
        "yes"
      ],
      "statements": [
        {
          "id": "a",
          "text": "The code will perform face recognition."
        },
        {
          "id": "b",
          "text": "The code will list tags and their associated confidence."
        },
        {
          "id": "c",
          "text": "The code will read a file from the local file system."
        }
      ],
      "feedback": {
        "correct": "Correct. AnalyzeImageInStreamAsync reads from a stream (like a file), Description/Tags features don't do face recognition, but Tags feature lists tags and confidence.",
        "incorrect": "Incorrect. AnalyzeImageInStreamAsync reads from a stream (like a file), Description/Tags features don't do face recognition, but Tags feature lists tags and confidence."
      },
      "quiz_tag": "Implement computer vision solutions",
      "difficulty": "hard"
    },
    {
      "id": "82",
      "type": "yesno_multi",
      "question": "You are developing an application to recognize employees' faces by using the Face Recognition API. Images of the faces will be accessible from a URI endpoint. The application has Python code calling `conn.request('POST', f'/face/v1.0/persongroups/{person_group_id}/persons/{person_id}/persistedFaces', f'{body}', headers)`. For each of the following statements, select Yes if the statement is true. Otherwise, select No.",
      "points": 1,
      "correctAnswers": [
        "yes",
        "yes",
        "yes"
      ],
      "statements": [
        {
          "id": "a",
          "text": "The code will add a face image to a person object in a person group."
        },
        {
          "id": "b",
          "text": "The code will work for up to 10,000 people."
        },
        {
          "id": "c",
          "text": "add_face can be called multiple times to add multiple face images to a person object."
        }
      ],
      "feedback": {
        "correct": "Correct. The API adds a face to a person in a group, PersonGroups support up to 10,000 Persons, and multiple faces can be added per person.",
        "incorrect": "Incorrect. Review the Face API documentation regarding adding faces and PersonGroup limits."
      },
      "quiz_tag": "Implement computer vision solutions",
      "difficulty": "medium"
    },
    {
      "id": "90",
      "type": "yesno_multi",
      "question": "HOTSPOT - You develop a test method to verify the results retrieved from a call to the Computer Vision API for brand detection. The call returns a collection named image_analysis.brands. You have code iterating through brands. For each of the following statements, select Yes if the statement is true. Otherwise, select No.",
      "points": 1,
      "correctAnswers": [
        "yes",
        "yes",
        "no"
      ],
      "statements": [
        {
          "id": "a",
          "text": "The code will return the name of each detected brand with a confidence equal to or higher than 75 percent."
        },
        {
          "id": "b",
          "text": "The code will return coordinates for the top-left corner of the rectangle that contains the brand logo of the displayed brands."
        },
        {
          "id": "c",
          "text": "The code will return coordinates for the bottom-right corner of the rectangle that contains the brand logo of the displayed brands."
        }
      ],
      "feedback": {
        "correct": "Correct. The code checks confidence >= 0.75, prints the name, and prints rectangle.x, rectangle.y (top-left corner). It does not print bottom-right coordinates.",
        "incorrect": "Incorrect. The code checks confidence >= 0.75, prints the name, and prints rectangle.x, rectangle.y (top-left corner). It does not print bottom-right coordinates."
      },
      "quiz_tag": "Implement computer vision solutions",
      "difficulty": "medium"
    },
    {
      "id": "104",
      "type": "yesno_multi",
      "question": "You develop a test method to verify the results retrieved from a call to the Computer Vision API. The call is used to analyze the existence of company logos in images. The call returns a collection of brands named brands. You have the following code segment.\n```csharp\nforeach (var brand in brands)\n{\n  if (brand.Confidence >= 0.75)\n  {\n    Console.WriteLine($\"Logo of {brand.Name} between {brand.Rectangle.X}, {brand.Rectangle.Y} and {brand.Rectangle.W}, {brand.Rectangle.H}\");\n  }\n}\n```For each of the following statements, select Yes if the statement is true. Otherwise, select No.",
      "points": 1,
      "correctAnswers": [
        "yes",
        "yes",
        "no"
      ],
      "statements": [
        {
          "id": "a",
          "text": "The code will display the name of each detected brand with a confidence equal to or higher than 75 percent."
        },
        {
          "id": "b",
          "text": "The code will display coordinates for the top-left corner of the rectangle that contains the brand logo of the displayed brands."
        },
        {
          "id": "c",
          "text": "The code will display coordinates for the bottom-right corner of the rectangle that contains the brand logo of the displayed brands."
        }
      ],
      "feedback": {
        "correct": "Correct. The code checks `brand.Confidence >= 0.75`, prints `brand.Name`, and prints `brand.Rectangle.X`, `brand.Rectangle.Y` (top-left corner). It prints width (W) and height (H), not the bottom-right corner coordinates.",
        "incorrect": "Incorrect. The code checks `brand.Confidence >= 0.75`, prints `brand.Name`, and prints `brand.Rectangle.X`, `brand.Rectangle.Y` (top-left corner). It prints width (W) and height (H), not the bottom-right corner coordinates."
      },
      "quiz_tag": "Implement computer vision solutions",
      "difficulty": "hard"
    },
    {
      "id": "119",
      "type": "yesno_multi",
      "question": "HOTSPOT - You run the following command.\n```bash\ndocker run --rm -it -p 5000:5000 --memory 10g --cpus 2 \\\nmcr.microsoft.com/azure-cognitive-services/textanalytics/sentiment \\\nEula=accept \\\nBilling={ENDPOINT_URI} \\\nApikey={API_KEY}\n```\nFor each of the following statements, select Yes if the statement is true. Otherwise, select No.",
      "points": 1,
      "correctAnswers": [
        "no",
        "yes",
        "yes"
      ],
      "statements": [
        {
          "id": "a",
          "text": "Going to http://localhost:5000/status will query the Azure endpoint to verify whether the API key used to start the container is valid."
        },
        {
          "id": "b",
          "text": "The container logging provider will write log data."
        },
        {
          "id": "c",
          "text": "Going to http://localhost:5000/swagger will provide the details to access the documentation for the available endpoints."
        }
      ],
      "feedback": {
        "correct": "Correct. `/status` checks local container status, not Azure key validity. Docker containers log output (`-it` flag shows it). Cognitive Services containers often expose a Swagger UI at `/swagger`.",
        "incorrect": "Incorrect. `/status` checks local container status, not Azure key validity. Docker containers log output (`-it` flag shows it). Cognitive Services containers often expose a Swagger UI at `/swagger`."
      },
      "quiz_tag": "Plan and manage an Azure AI solution",
      "difficulty": "medium"
    },
    {
      "id": "175",
      "type": "yesno_multi",
      "question": "You have a text-based chatbot. You need to enable content moderation by using the Text Moderation API of Content Moderator. Which two service responses should you use? Select Yes for the two responses you should use, and No for the others.",
      "points": 1,
      "correctAnswers": [
        "yes",
        "no",
        "yes",
        "no",
        "no"
      ],
      "statements": [
        {
          "id": "a",
          "text": "Personal data detection"
        },
        {
          "id": "b",
          "text": "The adult classification score"
        },
        {
          "id": "c",
          "text": "Text classification (profanity, etc.)"
        },
        {
          "id": "d",
          "text": "Optical character recognition (OCR)"
        },
        {
          "id": "e",
          "text": "The racy classification score"
        }
      ],
      "feedback": {
        "correct": "Correct. The Text Moderation API specifically provides PII (Personal Identifiable Information/personal data) detection and text classification for categories like profanity.",
        "incorrect": "Incorrect. Adult/Racy scores are for image moderation. OCR is for extracting text from images. Text Moderation focuses on analyzing text content for PII and classification."
      },
      "quiz_tag": "Implement natural language processing solutions",
      "difficulty": "medium"
    },
    {
      "id": "187",
      "type": "yesno_multi",
      "question": "You are building a solution that students will use to find references for essays. You use the following code to start building the solution.\n```csharp\nusing Azure;\nusing System;\nusing Azure.AI.TextAnalytics;\nprivate static readonly AzureKeyCredential credentials = new AzureKeyCredential(\"<key>\");\nprivate static readonly Uri endpoint = new Uri(\"<endpoint>\");\nstatic void EntityLinker(TextAnalyticsClient client)\n{\n    var response = client.RecognizeLinkedEntities(\n        \"Our tour guide took us up the Space Needle during our trip to Seattle last week.\");\n    // ... process response ...\n}\n```\nFor each of the following statements, select Yes if the statement is true. Otherwise, select No.",
      "points": 1,
      "correctAnswers": [
        "no",
        "no",
        "yes"
      ],
      "statements": [
        {
          "id": "a",
          "text": "The code will detect the language of documents."
        },
        {
          "id": "b",
          "text": "The url attribute returned for each linked entity will be a Bing search link."
        },
        {
          "id": "c",
          "text": "The matches attribute returned for each linked entity will provide the location in a document where the entity is referenced."
        }
      ],
      "feedback": {
        "correct": "Correct. `RecognizeLinkedEntities` focuses on identifying known entities and linking them to a knowledge base (like Wikipedia, providing a URL), not language detection. The `Matches` property indicates where in the text the entity was found.",
        "incorrect": "Incorrect. `RecognizeLinkedEntities` does not perform language detection (that's `DetectLanguage`). The URL links to a knowledge base (like Wikipedia), not Bing search. The `Matches` property does provide the location (offset and length) of the entity in the text."
      },
      "quiz_tag": "Implement natural language processing solutions",
      "difficulty": "medium"
    }
  ]
}