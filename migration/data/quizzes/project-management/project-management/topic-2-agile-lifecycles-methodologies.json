{
  "questions": [
    {
      "id": "q-lifecycle-yn-001",
      "type": "yes_no",
      "question": "In a predictive life cycle, requirements are defined and locked down early in the project.",
      "points": 1,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! Predictive life cycles (like Waterfall) define and lock down requirements early in the project lifecycle.",
        "incorrect": "Incorrect. Predictive life cycles are characterized by early definition and locking of requirements."
      },
      "explanation": "Predictive life cycles assume requirements can be fully understood upfront and minimize changes.",
      "quiz_tag": "project_lifecycles",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-yn-002",
      "type": "yes_no",
      "question": "Iterative life cycles allow for feedback to improve and modify the product throughout the project.",
      "points": 1,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! Iterative life cycles use repeated cycles of activities to allow for feedback and improvement.",
        "incorrect": "Incorrect. Iterative approaches specifically enable feedback and improvement through repeated cycles."
      },
      "explanation": "Iterative life cycles improve the product through successive refinements based on feedback.",
      "quiz_tag": "project_lifecycles",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-yn-003",
      "type": "yes_no",
      "question": "Incremental life cycles deliver finished portions of the product incrementally.",
      "points": 1,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! Incremental life cycles deliver working portions of the product in successive increments.",
        "incorrect": "Incorrect. Incremental approaches are specifically designed to deliver working product portions incrementally."
      },
      "explanation": "Incremental delivery allows early value realization and reduces risk through partial deliveries.",
      "quiz_tag": "project_lifecycles",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-yn-004",
      "type": "yes_no",
      "question": "Scrum is purely an iterative framework without incremental delivery aspects.",
      "points": 2,
      "correctAnswer": "no",
      "feedback": {
        "correct": "Correct! Scrum combines both iterative and incremental approaches - iterations (Sprints) deliver increments of working product.",
        "incorrect": "Incorrect. Scrum is both iterative (Sprints) and incremental (delivers working product increments)."
      },
      "explanation": "Scrum uses iterations (Sprints) to deliver increments of potentially shippable product functionality.",
      "quiz_tag": "scrum_framework",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-005",
      "type": "yes_no",
      "question": "Kanban uses time-boxed iterations like Scrum.",
      "points": 2,
      "correctAnswer": "no",
      "feedback": {
        "correct": "Correct! Kanban is flow-based and doesn't use time-boxed iterations like Scrum's Sprints.",
        "incorrect": "Incorrect. Kanban focuses on continuous flow without time-boxed iterations."
      },
      "explanation": "Kanban emphasizes continuous flow and pull-based delivery rather than time-boxed iterations.",
      "quiz_tag": "kanban_methodology",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-006",
      "type": "yes_no",
      "question": "Lean methodology focuses on eliminating waste and maximizing customer value.",
      "points": 1,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! Lean methodology's core principle is eliminating waste (muda) and maximizing customer value.",
        "incorrect": "Incorrect. Lean is fundamentally about waste elimination and value maximization."
      },
      "explanation": "Lean methodology originated in manufacturing and focuses on value stream optimization.",
      "quiz_tag": "lean_methodology",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-yn-007",
      "type": "yes_no",
      "question": "Extreme Programming (XP) emphasizes technical practices like pair programming and test-driven development.",
      "points": 1,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! XP is known for its strong emphasis on technical practices including pair programming, TDD, and continuous integration.",
        "incorrect": "Incorrect. XP is specifically characterized by its focus on technical excellence practices."
      },
      "explanation": "XP promotes technical practices that ensure high-quality, maintainable code.",
      "quiz_tag": "xp_methodology",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-yn-008",
      "type": "yes_no",
      "question": "Hybrid approaches combine elements of both predictive and agile methodologies.",
      "points": 1,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! Hybrid approaches blend predictive and agile elements to fit specific project needs.",
        "incorrect": "Incorrect. Hybrid approaches specifically combine elements from different methodologies."
      },
      "explanation": "Hybrid approaches allow organizations to leverage benefits from multiple methodologies.",
      "quiz_tag": "hybrid_approaches",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-single-001",
      "type": "single_selection",
      "question": "What is the main characteristic that distinguishes an Agile life cycle from other approaches?",
      "points": 2,
      "correctAnswers": ["o-iterative-incremental"],
      "options": [
        { "id": "o-no-documentation", "text": "No documentation is created" },
        { "id": "o-iterative-incremental", "text": "Both iterative and incremental approach" },
        { "id": "o-no-planning", "text": "No upfront planning" },
        { "id": "o-fixed-scope", "text": "Fixed scope throughout project" }
      ],
      "feedback": {
        "correct": "Correct! Agile life cycles are characterized by being both iterative (repeated cycles) and incremental (delivering working software).",
        "incorrect": "Incorrect. Agile's defining characteristic is the combination of iterative and incremental approaches."
      },
      "explanation": "Agile combines iterations for feedback with incremental delivery of working product.",
      "quiz_tag": "agile_lifecycle",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-single-002",
      "type": "single_selection",
      "question": "Which Scrum event is used for Sprint planning?",
      "points": 1,
      "correctAnswers": ["o-sprint-planning"],
      "options": [
        { "id": "o-daily-scrum", "text": "Daily Scrum" },
        { "id": "o-sprint-planning", "text": "Sprint Planning" },
        { "id": "o-sprint-review", "text": "Sprint Review" },
        { "id": "o-sprint-retrospective", "text": "Sprint Retrospective" }
      ],
      "feedback": {
        "correct": "Correct! Sprint Planning is the event where the team plans the work for the upcoming Sprint.",
        "incorrect": "Incorrect. Sprint Planning is specifically designed for planning Sprint work."
      },
      "explanation": "Sprint Planning sets the direction and scope for the upcoming Sprint iteration.",
      "quiz_tag": "scrum_events",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-single-003",
      "type": "single_selection",
      "question": "What is the recommended Sprint length in Scrum?",
      "points": 2,
      "correctAnswers": ["o-one-month-or-less"],
      "options": [
        { "id": "o-one-week", "text": "Exactly one week" },
        { "id": "o-two-weeks", "text": "Exactly two weeks" },
        { "id": "o-one-month-or-less", "text": "One month or less" },
        { "id": "o-no-limit", "text": "No specific limit" }
      ],
      "feedback": {
        "correct": "Correct! Scrum Guide recommends Sprints of one month or less, typically 2-4 weeks.",
        "incorrect": "Incorrect. Scrum recommends Sprints of one month or less to maintain focus and enable frequent inspection."
      },
      "explanation": "Shorter Sprints enable more frequent inspection and adaptation cycles.",
      "quiz_tag": "scrum_framework",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-single-004",
      "type": "single_selection",
      "question": "In Kanban, what does WIP stand for?",
      "points": 1,
      "correctAnswers": ["o-work-in-progress"],
      "options": [
        { "id": "o-work-in-progress", "text": "Work In Progress" },
        { "id": "o-work-in-process", "text": "Work In Process" },
        { "id": "o-weekly-iteration-planning", "text": "Weekly Iteration Planning" },
        { "id": "o-workflow-improvement-practice", "text": "Workflow Improvement Practice" }
      ],
      "feedback": {
        "correct": "Correct! WIP stands for Work In Progress, referring to the amount of work currently being worked on.",
        "incorrect": "Incorrect. In Kanban, WIP refers to Work In Progress limits."
      },
      "explanation": "WIP limits help teams focus and improve flow by limiting concurrent work.",
      "quiz_tag": "kanban_methodology",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-single-005",
      "type": "single_selection",
      "question": "Which of the following is NOT one of the core practices of Extreme Programming (XP)?",
      "points": 2,
      "correctAnswers": ["o-sprint-planning"],
      "options": [
        { "id": "o-pair-programming", "text": "Pair Programming" },
        { "id": "o-test-driven-development", "text": "Test-Driven Development" },
        { "id": "o-continuous-integration", "text": "Continuous Integration" },
        { "id": "o-sprint-planning", "text": "Sprint Planning" }
      ],
      "feedback": {
        "correct": "Correct! Sprint Planning is a Scrum practice, not an XP practice.",
        "incorrect": "Incorrect. Sprint Planning belongs to Scrum, while the others are core XP practices."
      },
      "explanation": "XP focuses on technical practices rather than time-boxed iterations like Scrum.",
      "quiz_tag": "xp_methodology",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-multi-001",
      "type": "multi",
      "question": "Which of the following are characteristics of iterative life cycles? (Select all that apply)",
      "points": 3,
      "correctAnswers": ["o-repeated-cycles", "o-feedback-incorporation", "o-progressive-elaboration"],
      "options": [
        { "id": "o-repeated-cycles", "text": "Repeated cycles of activities" },
        { "id": "o-feedback-incorporation", "text": "Incorporation of feedback" },
        { "id": "o-progressive-elaboration", "text": "Progressive elaboration" },
        { "id": "o-fixed-requirements", "text": "Fixed requirements from start" },
        { "id": "o-single-delivery", "text": "Single final delivery" },
        { "id": "o-no-changes", "text": "No changes allowed" }
      ],
      "feedback": {
        "correct": "Correct! Iterative life cycles use repeated cycles, incorporate feedback, and progressively elaborate details.",
        "incorrect": "Review the characteristics of iterative approaches: repeated cycles, feedback incorporation, and progressive elaboration."
      },
      "explanation": "Iterative approaches improve products through repeated cycles that incorporate learning and feedback.",
      "quiz_tag": "project_lifecycles",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-multi-002",
      "type": "multi",
      "question": "Which are core components of the Scrum framework? (Select all that apply)",
      "points": 4,
      "correctAnswers": ["o-scrum-roles", "o-scrum-events", "o-scrum-artifacts"],
      "options": [
        { "id": "o-scrum-roles", "text": "Scrum Roles (Product Owner, Scrum Master, Development Team)" },
        { "id": "o-scrum-events", "text": "Scrum Events (Sprint, Sprint Planning, Daily Scrum, etc.)" },
        { "id": "o-scrum-artifacts", "text": "Scrum Artifacts (Product Backlog, Sprint Backlog, Increment)" },
        { "id": "o-detailed-documentation", "text": "Detailed documentation requirements" },
        { "id": "o-gantt-charts", "text": "Gantt charts" },
        { "id": "o-change-control-board", "text": "Change Control Board" }
      ],
      "feedback": {
        "correct": "Correct! Scrum consists of roles, events, and artifacts as its core framework components.",
        "incorrect": "Review the Scrum framework: it consists of roles, events, and artifacts, not traditional project management tools."
      },
      "explanation": "Scrum's lightweight framework is built on three pillars: roles, events, and artifacts.",
      "quiz_tag": "scrum_framework",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-multi-003",
      "type": "multi",
      "question": "Which principles are core to Lean methodology? (Select all that apply)",
      "points": 4,
      "correctAnswers": ["o-eliminate-waste", "o-continuous-improvement", "o-respect-people"],
      "options": [
        { "id": "o-eliminate-waste", "text": "Eliminate waste (muda)" },
        { "id": "o-continuous-improvement", "text": "Continuous improvement (kaizen)" },
        { "id": "o-respect-people", "text": "Respect for people" },
        { "id": "o-increase-inventory", "text": "Increase inventory levels" },
        { "id": "o-batch-processing", "text": "Large batch processing" },
        { "id": "o-individual-optimization", "text": "Individual department optimization" }
      ],
      "feedback": {
        "correct": "Correct! Lean focuses on waste elimination, continuous improvement, and respect for people.",
        "incorrect": "Review Lean principles: eliminate waste, continuous improvement (kaizen), and respect for people are core concepts."
      },
      "explanation": "Lean methodology emphasizes value maximization through waste elimination and people empowerment.",
      "quiz_tag": "lean_methodology",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-multi-004",
      "type": "multi",
      "question": "Which scenarios would benefit from a hybrid approach? (Select all that apply)",
      "points": 3,
      "correctAnswers": ["o-regulatory-requirements", "o-distributed-teams", "o-mixed-complexity"],
      "options": [
        { "id": "o-regulatory-requirements", "text": "Projects with regulatory requirements" },
        { "id": "o-distributed-teams", "text": "Large distributed teams" },
        { "id": "o-mixed-complexity", "text": "Projects with mixed complexity levels" },
        { "id": "o-simple-projects", "text": "Simple, well-understood projects" },
        { "id": "o-startup-environment", "text": "Small startup environment" },
        { "id": "o-single-location", "text": "Single co-located team" }
      ],
      "feedback": {
        "correct": "Correct! Hybrid approaches work well for complex organizational or regulatory constraints.",
        "incorrect": "Consider scenarios where pure Agile might be challenging: regulatory requirements, distributed teams, and mixed complexity."
      },
      "explanation": "Hybrid approaches help navigate organizational constraints while maintaining agile benefits.",
      "quiz_tag": "hybrid_approaches",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-018",
      "type": "yes_no",
      "question": "Crystal methodology suggests that the methodology should be tailored based on team size and project criticality.",
      "points": 2,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! Crystal is a family of methodologies that adapts based on team size and criticality of the project.",
        "incorrect": "Incorrect. Crystal methodology is specifically designed to be tailored based on team size and project criticality."
      },
      "explanation": "Crystal recognizes that one size doesn't fit all and provides different variants for different contexts.",
      "quiz_tag": "crystal_methodology",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-019",
      "type": "yes_no",
      "question": "Feature Driven Development (FDD) focuses on building features in two-week iterations called sprints.",
      "points": 2,
      "correctAnswer": "no",
      "feedback": {
        "correct": "Correct! FDD focuses on features but doesn't use sprints - that's Scrum terminology. FDD uses feature-driven iterations.",
        "incorrect": "Incorrect. FDD focuses on features but uses its own terminology and approach, not Scrum's sprint concept."
      },
      "explanation": "FDD has its own unique approach to feature development that differs from Scrum's sprint-based approach.",
      "quiz_tag": "feature_driven_development",
      "difficulty": "hard"
    },
    {
      "id": "q-lifecycle-yn-020",
      "type": "yes_no",
      "question": "Dynamic Systems Development Method (DSDM) includes a pre-project phase and a post-project phase.",
      "points": 2,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! DSDM includes a comprehensive lifecycle with pre-project, project, and post-project phases.",
        "incorrect": "Incorrect. DSDM is a complete project lifecycle approach that includes pre-project and post-project phases."
      },
      "explanation": "DSDM provides a complete project lifecycle framework, not just the development phases.",
      "quiz_tag": "dsdm_methodology",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-021",
      "type": "yes_no",
      "question": "Scaled Agile Framework (SAFe) is designed only for small teams and cannot be used in large enterprises.",
      "points": 2,
      "correctAnswer": "no",
      "feedback": {
        "correct": "Correct! SAFe is specifically designed for scaling Agile practices in large enterprises and organizations.",
        "incorrect": "Incorrect. SAFe (Scaled Agile Framework) is specifically designed for large enterprises, not small teams."
      },
      "explanation": "SAFe addresses the challenges of implementing Agile at scale in large organizations.",
      "quiz_tag": "scaled_agile",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-022",
      "type": "yes_no",
      "question": "Disciplined Agile Delivery (DAD) provides a single prescriptive approach that all teams must follow.",
      "points": 2,
      "correctAnswer": "no",
      "feedback": {
        "correct": "Correct! DAD provides a toolkit of practices and approaches, allowing teams to choose what works best for their context.",
        "incorrect": "Incorrect. DAD is goal-driven and provides options rather than a single prescriptive approach."
      },
      "explanation": "DAD recognizes that context matters and provides a decision framework rather than rigid prescriptions.",
      "quiz_tag": "disciplined_agile",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-023",
      "type": "yes_no",
      "question": "Large Scale Scrum (LeSS) adds many new roles and ceremonies to standard Scrum.",
      "points": 2,
      "correctAnswer": "no",
      "feedback": {
        "correct": "Correct! LeSS keeps Scrum simple and adds as few roles and artifacts as possible while scaling.",
        "incorrect": "Incorrect. LeSS tries to keep the simplicity of Scrum and adds minimal additional complexity."
      },
      "explanation": "LeSS follows the principle of 'more with less' - scaling Scrum while keeping it simple.",
      "quiz_tag": "large_scale_scrum",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-024",
      "type": "yes_no",
      "question": "Nexus framework is designed to scale Scrum for 3-9 Scrum teams.",
      "points": 2,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! Nexus is specifically designed to coordinate the work of 3-9 Scrum teams working on a single product.",
        "incorrect": "Incorrect. Nexus is designed for 3-9 Scrum teams working together on one product."
      },
      "explanation": "Nexus provides a framework for managing dependencies and integration when multiple Scrum teams work together.",
      "quiz_tag": "nexus_framework",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-025",
      "type": "yes_no",
      "question": "DevOps is a software development methodology that competes with Agile approaches.",
      "points": 2,
      "correctAnswer": "no",
      "feedback": {
        "correct": "Correct! DevOps is a cultural and operational approach that complements Agile development practices.",
        "incorrect": "Incorrect. DevOps works alongside Agile practices to improve delivery and operations."
      },
      "explanation": "DevOps extends Agile principles into operations, creating a continuous delivery pipeline.",
      "quiz_tag": "devops_methodology",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-single-009",
      "type": "single",
      "question": "What is the main focus of Feature Driven Development (FDD)?",
      "points": 2,
      "correctAnswer": "o-feature-delivery",
      "options": [
        { "id": "o-feature-delivery", "text": "Delivering client-valued features in short iterations" },
        { "id": "o-test-driven", "text": "Test-driven development practices" },
        { "id": "o-continuous-integration", "text": "Continuous integration and deployment" },
        { "id": "o-documentation", "text": "Comprehensive documentation" }
      ],
      "feedback": {
        "correct": "Correct! FDD focuses on delivering tangible, client-valued features in short iterations.",
        "incorrect": "Incorrect. FDD's main focus is on feature delivery that provides value to clients."
      },
      "explanation": "FDD organizes work around features that deliver business value to clients.",
      "quiz_tag": "feature_driven_development",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-single-010",
      "type": "single",
      "question": "Which framework provides guidance for scaling Agile across multiple teams in large organizations?",
      "points": 2,
      "correctAnswer": "o-safe",
      "options": [
        { "id": "o-safe", "text": "Scaled Agile Framework (SAFe)" },
        { "id": "o-scrum", "text": "Scrum" },
        { "id": "o-kanban", "text": "Kanban" },
        { "id": "o-xp", "text": "Extreme Programming (XP)" }
      ],
      "feedback": {
        "correct": "Correct! SAFe provides comprehensive guidance for implementing Agile at enterprise scale.",
        "incorrect": "Incorrect. SAFe (Scaled Agile Framework) is specifically designed for scaling Agile in large organizations."
      },
      "explanation": "SAFe addresses the complexities of coordinating multiple teams and portfolios in large enterprises.",
      "quiz_tag": "scaled_agile",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-single-011",
      "type": "single",
      "question": "What is the primary goal of Lean Software Development?",
      "points": 2,
      "correctAnswer": "o-eliminate-waste",
      "options": [
        { "id": "o-eliminate-waste", "text": "Eliminate waste and optimize value delivery" },
        { "id": "o-increase-documentation", "text": "Increase documentation and processes" },
        { "id": "o-extend-iterations", "text": "Extend iteration lengths" },
        { "id": "o-reduce-communication", "text": "Reduce team communication overhead" }
      ],
      "feedback": {
        "correct": "Correct! Lean focuses on eliminating waste and optimizing the flow of value to customers.",
        "incorrect": "Incorrect. Lean's primary goal is waste elimination and value optimization."
      },
      "explanation": "Lean principles help teams focus on activities that add value and eliminate those that don't.",
      "quiz_tag": "lean_methodology",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-single-012",
      "type": "single",
      "question": "Crystal methodology family is characterized by:",
      "points": 2,
      "correctAnswer": "o-adaptable-approach",
      "options": [
        { "id": "o-adaptable-approach", "text": "Adaptable approaches based on team size and criticality" },
        { "id": "o-fixed-processes", "text": "Fixed processes for all team sizes" },
        { "id": "o-documentation-heavy", "text": "Heavy documentation requirements" },
        { "id": "o-waterfall-phases", "text": "Traditional waterfall phases" }
      ],
      "feedback": {
        "correct": "Correct! Crystal provides different variants that adapt to team size and project criticality.",
        "incorrect": "Incorrect. Crystal's main characteristic is its adaptability to different contexts and team sizes."
      },
      "explanation": "Crystal recognizes that different projects need different approaches based on their unique characteristics.",
      "quiz_tag": "crystal_methodology",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-single-013",
      "type": "single",
      "question": "What distinguishes DSDM from other Agile methodologies?",
      "points": 2,
      "correctAnswer": "o-complete-lifecycle",
      "options": [
        { "id": "o-complete-lifecycle", "text": "Complete project lifecycle including pre and post-project phases" },
        { "id": "o-short-iterations", "text": "Very short iterations (1-week sprints)" },
        { "id": "o-no-documentation", "text": "Complete elimination of documentation" },
        { "id": "o-single-developer", "text": "Focus on single developer productivity" }
      ],
      "feedback": {
        "correct": "Correct! DSDM provides a complete project lifecycle framework, not just development practices.",
        "incorrect": "Incorrect. DSDM's distinguishing feature is its comprehensive lifecycle approach."
      },
      "explanation": "DSDM addresses the entire project lifecycle, making it more comprehensive than development-focused methodologies.",
      "quiz_tag": "dsdm_methodology",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-multi-005",
      "type": "multi",
      "question": "Which are key practices in Extreme Programming (XP)? (Select all that apply)",
      "points": 5,
      "correctAnswers": ["o-pair-programming", "o-test-driven", "o-continuous-integration", "o-simple-design"],
      "options": [
        { "id": "o-pair-programming", "text": "Pair programming" },
        { "id": "o-test-driven", "text": "Test-driven development" },
        { "id": "o-continuous-integration", "text": "Continuous integration" },
        { "id": "o-simple-design", "text": "Simple design" },
        { "id": "o-big-design", "text": "Big design up front" },
        { "id": "o-individual-coding", "text": "Individual coding only" }
      ],
      "feedback": {
        "correct": "Correct! XP emphasizes technical practices like pair programming, TDD, CI, and simple design.",
        "incorrect": "Review XP practices: pair programming, test-driven development, continuous integration, and simple design are core to XP."
      },
      "explanation": "XP focuses heavily on technical practices that ensure code quality and maintainability.",
      "quiz_tag": "extreme_programming",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-multi-006",
      "type": "multi",
      "question": "Which factors should influence the choice of Agile methodology? (Select all that apply)",
      "points": 4,
      "correctAnswers": ["o-team-size", "o-project-criticality", "o-organizational-culture", "o-regulatory-requirements"],
      "options": [
        { "id": "o-team-size", "text": "Team size and distribution" },
        { "id": "o-project-criticality", "text": "Project criticality and risk" },
        { "id": "o-organizational-culture", "text": "Organizational culture and maturity" },
        { "id": "o-regulatory-requirements", "text": "Regulatory and compliance requirements" },
        { "id": "o-manager-preference", "text": "Manager's personal preference only" },
        { "id": "o-latest-trend", "text": "Following the latest industry trend" }
      ],
      "feedback": {
        "correct": "Correct! Methodology choice should be based on context factors like team size, criticality, culture, and requirements.",
        "incorrect": "Consider the contextual factors that should drive methodology selection: team, project, organization, and regulatory aspects."
      },
      "explanation": "Effective methodology selection requires understanding the project context and organizational constraints.",
      "quiz_tag": "methodology_selection",
      "difficulty": "hard"
    },
    {
      "id": "q-lifecycle-multi-007",
      "type": "multi",
      "question": "Which are characteristics of scaling frameworks like SAFe and LeSS? (Select all that apply)",
      "points": 4,
      "correctAnswers": ["o-coordinate-teams", "o-manage-dependencies", "o-maintain-alignment"],
      "options": [
        { "id": "o-coordinate-teams", "text": "Coordinate multiple teams" },
        { "id": "o-manage-dependencies", "text": "Manage inter-team dependencies" },
        { "id": "o-maintain-alignment", "text": "Maintain alignment across teams" },
        { "id": "o-eliminate-communication", "text": "Eliminate the need for communication" },
        { "id": "o-centralized-control", "text": "Impose centralized command and control" },
        { "id": "o-ignore-context", "text": "Apply one-size-fits-all solutions" }
      ],
      "feedback": {
        "correct": "Correct! Scaling frameworks focus on coordination, dependency management, and alignment across multiple teams.",
        "incorrect": "Review scaling framework goals: coordinating teams, managing dependencies, and maintaining alignment."
      },
      "explanation": "Scaling frameworks address the complexities that emerge when multiple teams work together on large initiatives.",
      "quiz_tag": "scaling_frameworks",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-multi-008",
      "type": "multi",
      "question": "Which elements are typically considered when designing a hybrid approach? (Select all that apply)",
      "points": 4,
      "correctAnswers": ["o-governance-requirements", "o-risk-tolerance", "o-team-experience", "o-delivery-constraints"],
      "options": [
        { "id": "o-governance-requirements", "text": "Organizational governance requirements" },
        { "id": "o-risk-tolerance", "text": "Risk tolerance and management" },
        { "id": "o-team-experience", "text": "Team experience and maturity" },
        { "id": "o-delivery-constraints", "text": "Delivery timeline constraints" },
        { "id": "o-avoid-planning", "text": "Avoiding all planning activities" },
        { "id": "o-pure-agile", "text": "Maintaining pure Agile practices only" }
      ],
      "feedback": {
        "correct": "Correct! Hybrid approaches consider governance, risk, team capabilities, and delivery constraints.",
        "incorrect": "Review hybrid approach considerations: governance requirements, risk factors, team experience, and delivery constraints."
      },
      "explanation": "Hybrid approaches balance Agile benefits with organizational realities and constraints.",
      "quiz_tag": "hybrid_approaches",
      "difficulty": "hard"
    },
    {
      "id": "q-lifecycle-yn-026",
      "type": "yes_no",
      "question": "In Kanban, Work in Progress (WIP) limits help teams identify bottlenecks and improve flow efficiency.",
      "points": 1,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! WIP limits are a fundamental Kanban practice that helps identify constraints and optimize flow.",
        "incorrect": "Incorrect. WIP limits are essential in Kanban for maintaining flow and identifying bottlenecks."
      },
      "explanation": "WIP limits prevent overloading and help teams focus on completing work before starting new items.",
      "quiz_tag": "kanban",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-yn-027",
      "type": "yes_no",
      "question": "Extreme Programming (XP) emphasizes technical practices like Test-Driven Development (TDD) and pair programming.",
      "points": 1,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! XP is known for its strong emphasis on technical practices including TDD, pair programming, and refactoring.",
        "incorrect": "Incorrect. XP specifically focuses on technical practices as core elements of the methodology."
      },
      "explanation": "XP's technical practices ensure high code quality and sustainable development pace.",
      "quiz_tag": "extreme_programming",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-yn-028",
      "type": "yes_no",
      "question": "The Crystal methodology family varies its practices based on team size and project criticality.",
      "points": 2,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! Crystal methodologies are scaled and adapted based on team size, project criticality, and other factors.",
        "incorrect": "Incorrect. Crystal methodologies specifically adapt their practices based on project characteristics."
      },
      "explanation": "Crystal recognizes that different projects require different levels of ceremony and practices.",
      "quiz_tag": "crystal_methodology",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-single-014",
      "type": "single_select",
      "question": "What is the primary goal of the Lean software development principle 'Eliminate Waste'?",
      "points": 2,
      "options": [
        { "id": "o-reduce-costs", "text": "To reduce project costs only" },
        { "id": "o-maximize-value", "text": "To maximize customer value by removing non-value-adding activities" },
        { "id": "o-reduce-team-size", "text": "To reduce team size" },
        { "id": "o-shorten-meetings", "text": "To shorten all meetings" }
      ],
      "correctAnswer": "o-maximize-value",
      "feedback": {
        "correct": "Correct! Eliminating waste focuses on removing activities that don't add customer value.",
        "incorrect": "Review the Lean principle of waste elimination and its focus on customer value."
      },
      "explanation": "Waste elimination in Lean targets anything that doesn't contribute to customer value delivery.",
      "quiz_tag": "lean_development",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-single-015",
      "type": "single_select",
      "question": "In Scrum, what is the maximum recommended duration for a Sprint?",
      "points": 2,
      "options": [
        { "id": "o-two-weeks", "text": "2 weeks" },
        { "id": "o-four-weeks", "text": "4 weeks" },
        { "id": "o-six-weeks", "text": "6 weeks" },
        { "id": "o-eight-weeks", "text": "8 weeks" }
      ],
      "correctAnswer": "o-four-weeks",
      "feedback": {
        "correct": "Correct! Scrum Guide recommends Sprints of one month or less, with 4 weeks being the maximum.",
        "incorrect": "Review the Scrum Guide recommendations for Sprint duration."
      },
      "explanation": "Shorter Sprints enable more frequent feedback and adaptation opportunities.",
      "quiz_tag": "scrum",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-single-016",
      "type": "single_select",
      "question": "Which Agile methodology is specifically designed for large-scale enterprise environments?",
      "points": 2,
      "options": [
        { "id": "o-scrum", "text": "Scrum" },
        { "id": "o-kanban", "text": "Kanban" },
        { "id": "o-safe", "text": "SAFe (Scaled Agile Framework)" },
        { "id": "o-xp", "text": "Extreme Programming" }
      ],
      "correctAnswer": "o-safe",
      "feedback": {
        "correct": "Correct! SAFe is specifically designed to scale Agile practices across large enterprises.",
        "incorrect": "Review scaling frameworks and their specific use cases for enterprise environments."
      },
      "explanation": "SAFe provides structure and practices for implementing Agile at enterprise scale.",
      "quiz_tag": "scaling_frameworks",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-multi-009",
      "type": "multi_select",
      "question": "Which are key characteristics of the Kanban method? (Select all that apply)",
      "points": 3,
      "options": [
        { "id": "o-visualize-work", "text": "Visualize the work and workflow" },
        { "id": "o-limit-wip", "text": "Limit work in progress" },
        { "id": "o-manage-flow", "text": "Manage and measure flow" },
        { "id": "o-fixed-iterations", "text": "Use fixed-length iterations" },
        { "id": "o-continuous-improvement", "text": "Continuous improvement" }
      ],
      "correctAnswers": ["o-visualize-work", "o-limit-wip", "o-manage-flow", "o-continuous-improvement"],
      "feedback": {
        "correct": "Correct! These are the core Kanban practices for optimizing workflow.",
        "incorrect": "Review the fundamental practices that define the Kanban method."
      },
      "explanation": "Kanban focuses on visualizing and optimizing workflow rather than using fixed iterations.",
      "quiz_tag": "kanban",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-multi-010",
      "type": "multi_select",
      "question": "Which practices are core to Extreme Programming (XP)? (Select all that apply)",
      "points": 3,
      "options": [
        { "id": "o-pair-programming", "text": "Pair programming" },
        { "id": "o-tdd", "text": "Test-Driven Development (TDD)" },
        { "id": "o-continuous-integration", "text": "Continuous integration" },
        { "id": "o-detailed-upfront-design", "text": "Detailed upfront design" },
        { "id": "o-refactoring", "text": "Regular refactoring" }
      ],
      "correctAnswers": ["o-pair-programming", "o-tdd", "o-continuous-integration", "o-refactoring"],
      "feedback": {
        "correct": "Correct! These are fundamental XP practices that ensure high-quality, maintainable code.",
        "incorrect": "Review the core technical and collaborative practices of Extreme Programming."
      },
      "explanation": "XP emphasizes technical excellence through collaborative and disciplined development practices.",
      "quiz_tag": "extreme_programming",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-029",
      "type": "yes_no",
      "question": "Feature-Driven Development (FDD) focuses on building features in short iterations of 1-2 weeks.",
      "points": 1,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! FDD organizes work around features and delivers them in short, 1-2 week iterations.",
        "incorrect": "Incorrect. FDD specifically uses short iterations to deliver individual features."
      },
      "explanation": "FDD's feature-centric approach enables frequent delivery of tangible business value.",
      "quiz_tag": "feature_driven_development",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-single-017",
      "type": "single_select",
      "question": "What is the primary focus of Lean software development?",
      "points": 2,
      "options": [
        { "id": "o-documentation", "text": "Comprehensive documentation" },
        { "id": "o-customer-value", "text": "Maximizing customer value while eliminating waste" },
        { "id": "o-team-size", "text": "Minimizing team size" },
        { "id": "o-tool-usage", "text": "Maximizing tool usage" }
      ],
      "correctAnswer": "o-customer-value",
      "feedback": {
        "correct": "Correct! Lean development focuses on maximizing customer value while eliminating activities that don't add value.",
        "incorrect": "Review the core principles of Lean software development."
      },
      "explanation": "Lean principles originated in manufacturing and focus on value optimization and waste elimination.",
      "quiz_tag": "lean_development",
      "difficulty": "easy"
    },
    {
      "id": "q-lifecycle-multi-011",
      "type": "multi_select",
      "question": "Which scaling frameworks are commonly used for large Agile implementations? (Select all that apply)",
      "points": 3,
      "options": [
        { "id": "o-safe", "text": "SAFe (Scaled Agile Framework)" },
        { "id": "o-less", "text": "LeSS (Large-Scale Scrum)" },
        { "id": "o-dad", "text": "DAD (Disciplined Agile Delivery)" },
        { "id": "o-waterfall", "text": "Waterfall" },
        { "id": "o-nexus", "text": "Nexus" }
      ],
      "correctAnswers": ["o-safe", "o-less", "o-dad", "o-nexus"],
      "feedback": {
        "correct": "Correct! These are all recognized frameworks for scaling Agile practices in large organizations.",
        "incorrect": "Review the various frameworks available for scaling Agile practices."
      },
      "explanation": "Each scaling framework provides different approaches to implementing Agile at enterprise scale.",
      "quiz_tag": "scaling_frameworks",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-yn-030",
      "type": "yes_no",
      "question": "Dynamic Systems Development Method (DSDM) emphasizes fitness for business purpose over technical perfection.",
      "points": 2,
      "correctAnswer": "yes",
      "feedback": {
        "correct": "Correct! DSDM prioritizes delivering business value and fitness for purpose over technical perfection.",
        "incorrect": "Incorrect. DSDM specifically emphasizes business value delivery over perfect technical solutions."
      },
      "explanation": "DSDM's philosophy focuses on delivering solutions that meet business needs effectively and efficiently.",
      "quiz_tag": "dsdm",
      "difficulty": "medium"
    },
    {
      "id": "q-lifecycle-single-018",
      "type": "single_select",
      "question": "In hybrid Agile-Waterfall approaches, which phase typically remains waterfall-style?",
      "points": 2,
      "options": [
        { "id": "o-development", "text": "Development and testing" },
        { "id": "o-planning", "text": "Initial planning and requirements gathering" },
        { "id": "o-deployment", "text": "Deployment only" },
        { "id": "o-maintenance", "text": "Maintenance only" }
      ],
      "correctAnswer": "o-planning",
      "feedback": {
        "correct": "Correct! Hybrid approaches often use waterfall for initial planning while applying Agile to development phases.",
        "incorrect": "Review common hybrid implementation patterns and where traditional approaches are retained."
      },
      "explanation": "Organizations often retain traditional planning approaches while adopting Agile development practices.",
      "quiz_tag": "hybrid_approaches",
      "difficulty": "medium"
    }
  ]
}
